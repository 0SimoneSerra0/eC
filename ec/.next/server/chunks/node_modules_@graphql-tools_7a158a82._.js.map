{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/cjs/types.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isRecord = exports.assertIsRef = exports.isRef = void 0;\nfunction isRef(maybeRef) {\n    return !!(maybeRef && typeof maybeRef === 'object' && '$ref' in maybeRef);\n}\nexports.isRef = isRef;\nfunction assertIsRef(maybeRef, message) {\n    if (!isRef(maybeRef)) {\n        throw new Error(message || `Expected ${maybeRef} to be a valid Ref.`);\n    }\n}\nexports.assertIsRef = assertIsRef;\nfunction isRecord(obj) {\n    return typeof obj === 'object' && obj !== null;\n}\nexports.isRecord = isRecord;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,QAAQ,GAAG,QAAQ,WAAW,GAAG,QAAQ,KAAK,GAAG,KAAK;AAC9D,SAAS,MAAM,QAAQ;IACnB,OAAO,CAAC,CAAC,CAAC,YAAY,OAAO,aAAa,YAAY,UAAU,QAAQ;AAC5E;AACA,QAAQ,KAAK,GAAG;AAChB,SAAS,YAAY,QAAQ,EAAE,OAAO;IAClC,IAAI,CAAC,MAAM,WAAW;QAClB,MAAM,IAAI,MAAM,WAAW,CAAC,SAAS,EAAE,SAAS,mBAAmB,CAAC;IACxE;AACJ;AACA,QAAQ,WAAW,GAAG;AACtB,SAAS,SAAS,GAAG;IACjB,OAAO,OAAO,QAAQ,YAAY,QAAQ;AAC9C;AACA,QAAQ,QAAQ,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/cjs/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isRootType = exports.copyOwnProps = exports.copyOwnPropsIfNotPresent = exports.isObject = exports.makeRef = exports.takeRandom = exports.randomListLength = exports.uuidv4 = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        const r = (Math.random() * 16) | 0;\n        // eslint-disable-next-line eqeqeq\n        const v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexports.uuidv4 = uuidv4;\nconst randomListLength = () => {\n    // Mocking has always returned list of length 2 by default\n    // return 1 + Math.round(Math.random() * 10)\n    return 2;\n};\nexports.randomListLength = randomListLength;\nconst takeRandom = (arr) => arr[Math.floor(Math.random() * arr.length)];\nexports.takeRandom = takeRandom;\nfunction makeRef(typeName, key) {\n    return { $ref: { key, typeName } };\n}\nexports.makeRef = makeRef;\nfunction isObject(thing) {\n    return thing === Object(thing) && !Array.isArray(thing);\n}\nexports.isObject = isObject;\nfunction copyOwnPropsIfNotPresent(target, source) {\n    for (const prop of Object.getOwnPropertyNames(source)) {\n        if (!Object.getOwnPropertyDescriptor(target, prop)) {\n            const propertyDescriptor = Object.getOwnPropertyDescriptor(source, prop);\n            Object.defineProperty(target, prop, propertyDescriptor == null ? {} : propertyDescriptor);\n        }\n    }\n}\nexports.copyOwnPropsIfNotPresent = copyOwnPropsIfNotPresent;\nfunction copyOwnProps(target, ...sources) {\n    for (const source of sources) {\n        let chain = source;\n        while (chain != null) {\n            copyOwnPropsIfNotPresent(target, chain);\n            chain = Object.getPrototypeOf(chain);\n        }\n    }\n    return target;\n}\nexports.copyOwnProps = copyOwnProps;\nconst isRootType = (type, schema) => {\n    const rootTypeNames = (0, utils_1.getRootTypeNames)(schema);\n    return rootTypeNames.has(type.name);\n};\nexports.isRootType = isRootType;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,UAAU,GAAG,QAAQ,YAAY,GAAG,QAAQ,wBAAwB,GAAG,QAAQ,QAAQ,GAAG,QAAQ,OAAO,GAAG,QAAQ,UAAU,GAAG,QAAQ,gBAAgB,GAAG,QAAQ,MAAM,GAAG,KAAK;AAC1L,MAAM;AACN,SAAS;IACL,OAAO,uCAAuC,OAAO,CAAC,SAAS,CAAA;QAC3D,MAAM,IAAI,AAAC,KAAK,MAAM,KAAK,KAAM;QACjC,kCAAkC;QAClC,MAAM,IAAI,KAAK,MAAM,IAAI,AAAC,IAAI,MAAO;QACrC,OAAO,EAAE,QAAQ,CAAC;IACtB;AACJ;AACA,QAAQ,MAAM,GAAG;AACjB,MAAM,mBAAmB;IACrB,0DAA0D;IAC1D,4CAA4C;IAC5C,OAAO;AACX;AACA,QAAQ,gBAAgB,GAAG;AAC3B,MAAM,aAAa,CAAC,MAAQ,GAAG,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AACvE,QAAQ,UAAU,GAAG;AACrB,SAAS,QAAQ,QAAQ,EAAE,GAAG;IAC1B,OAAO;QAAE,MAAM;YAAE;YAAK;QAAS;IAAE;AACrC;AACA,QAAQ,OAAO,GAAG;AAClB,SAAS,SAAS,KAAK;IACnB,OAAO,UAAU,OAAO,UAAU,CAAC,MAAM,OAAO,CAAC;AACrD;AACA,QAAQ,QAAQ,GAAG;AACnB,SAAS,yBAAyB,MAAM,EAAE,MAAM;IAC5C,KAAK,MAAM,QAAQ,OAAO,mBAAmB,CAAC,QAAS;QACnD,IAAI,CAAC,OAAO,wBAAwB,CAAC,QAAQ,OAAO;YAChD,MAAM,qBAAqB,OAAO,wBAAwB,CAAC,QAAQ;YACnE,OAAO,cAAc,CAAC,QAAQ,MAAM,sBAAsB,OAAO,CAAC,IAAI;QAC1E;IACJ;AACJ;AACA,QAAQ,wBAAwB,GAAG;AACnC,SAAS,aAAa,MAAM,EAAE,GAAG,OAAO;IACpC,KAAK,MAAM,UAAU,QAAS;QAC1B,IAAI,QAAQ;QACZ,MAAO,SAAS,KAAM;YAClB,yBAAyB,QAAQ;YACjC,QAAQ,OAAO,cAAc,CAAC;QAClC;IACJ;IACA,OAAO;AACX;AACA,QAAQ,YAAY,GAAG;AACvB,MAAM,aAAa,CAAC,MAAM;IACtB,MAAM,gBAAgB,CAAC,GAAG,QAAQ,gBAAgB,EAAE;IACpD,OAAO,cAAc,GAAG,CAAC,KAAK,IAAI;AACtC;AACA,QAAQ,UAAU,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/cjs/MockList.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deepResolveMockList = exports.MockList = exports.isMockList = void 0;\n/**\n * @internal\n */\nfunction isMockList(obj) {\n    if (typeof (obj === null || obj === void 0 ? void 0 : obj.len) === 'number' || (Array.isArray(obj === null || obj === void 0 ? void 0 : obj.len) && typeof (obj === null || obj === void 0 ? void 0 : obj.len[0]) === 'number')) {\n        if (typeof obj.wrappedFunction === 'undefined' || typeof obj.wrappedFunction === 'function') {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isMockList = isMockList;\n/**\n * This is an object you can return from your mock resolvers which calls the\n * provided `mockFunction` once for each list item.\n */\nclass MockList {\n    /**\n     * @param length Either the exact length of items to return or an inclusive\n     * range of possible lengths.\n     * @param mockFunction The function to call for each item in the list to\n     * resolve it. It can return another MockList or a value.\n     */\n    constructor(length, mockFunction) {\n        this.len = length;\n        if (typeof mockFunction !== 'undefined') {\n            if (typeof mockFunction !== 'function') {\n                throw new Error('Second argument to MockList must be a function or undefined');\n            }\n            this.wrappedFunction = mockFunction;\n        }\n    }\n    /**\n     * @internal\n     */\n    mock() {\n        let arr;\n        if (Array.isArray(this.len)) {\n            arr = new Array(this.randint(this.len[0], this.len[1]));\n        }\n        else {\n            arr = new Array(this.len);\n        }\n        for (let i = 0; i < arr.length; i++) {\n            if (typeof this.wrappedFunction === 'function') {\n                const res = this.wrappedFunction();\n                if (isMockList(res)) {\n                    arr[i] = res.mock();\n                }\n                else {\n                    arr[i] = res;\n                }\n            }\n            else {\n                arr[i] = undefined;\n            }\n        }\n        return arr;\n    }\n    randint(low, high) {\n        return Math.floor(Math.random() * (high - low + 1) + low);\n    }\n}\nexports.MockList = MockList;\nfunction deepResolveMockList(mockList) {\n    return mockList.mock().map(v => {\n        if (isMockList(v))\n            return deepResolveMockList(v);\n        return v;\n    });\n}\nexports.deepResolveMockList = deepResolveMockList;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,QAAQ,QAAQ,GAAG,QAAQ,UAAU,GAAG,KAAK;AAC3E;;CAEC,GACD,SAAS,WAAW,GAAG;IACnB,IAAI,OAAO,CAAC,QAAQ,QAAQ,QAAQ,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,MAAM,YAAa,MAAM,OAAO,CAAC,QAAQ,QAAQ,QAAQ,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,KAAK,OAAO,CAAC,QAAQ,QAAQ,QAAQ,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,MAAM,UAAW;QAC7N,IAAI,OAAO,IAAI,eAAe,KAAK,eAAe,OAAO,IAAI,eAAe,KAAK,YAAY;YACzF,OAAO;QACX;IACJ;IACA,OAAO;AACX;AACA,QAAQ,UAAU,GAAG;AACrB;;;CAGC,GACD,MAAM;IACF;;;;;KAKC,GACD,YAAY,MAAM,EAAE,YAAY,CAAE;QAC9B,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,OAAO,iBAAiB,aAAa;YACrC,IAAI,OAAO,iBAAiB,YAAY;gBACpC,MAAM,IAAI,MAAM;YACpB;YACA,IAAI,CAAC,eAAe,GAAG;QAC3B;IACJ;IACA;;KAEC,GACD,OAAO;QACH,IAAI;QACJ,IAAI,MAAM,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG;YACzB,MAAM,IAAI,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;QACzD,OACK;YACD,MAAM,IAAI,MAAM,IAAI,CAAC,GAAG;QAC5B;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;YACjC,IAAI,OAAO,IAAI,CAAC,eAAe,KAAK,YAAY;gBAC5C,MAAM,MAAM,IAAI,CAAC,eAAe;gBAChC,IAAI,WAAW,MAAM;oBACjB,GAAG,CAAC,EAAE,GAAG,IAAI,IAAI;gBACrB,OACK;oBACD,GAAG,CAAC,EAAE,GAAG;gBACb;YACJ,OACK;gBACD,GAAG,CAAC,EAAE,GAAG;YACb;QACJ;QACA,OAAO;IACX;IACA,QAAQ,GAAG,EAAE,IAAI,EAAE;QACf,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,OAAO,MAAM,CAAC,IAAI;IACzD;AACJ;AACA,QAAQ,QAAQ,GAAG;AACnB,SAAS,oBAAoB,QAAQ;IACjC,OAAO,SAAS,IAAI,GAAG,GAAG,CAAC,CAAA;QACvB,IAAI,WAAW,IACX,OAAO,oBAAoB;QAC/B,OAAO;IACX;AACJ;AACA,QAAQ,mBAAmB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/cjs/MockStore.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMockStore = exports.MockStore = exports.defaultMocks = void 0;\nconst tslib_1 = require(\"tslib\");\nconst graphql_1 = require(\"graphql\");\nconst fast_json_stable_stringify_1 = tslib_1.__importDefault(require(\"fast-json-stable-stringify\"));\nconst types_js_1 = require(\"./types.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst MockList_js_1 = require(\"./MockList.js\");\nexports.defaultMocks = {\n    Int: () => Math.round(Math.random() * 200) - 100,\n    Float: () => Math.random() * 200 - 100,\n    String: () => 'Hello World',\n    Boolean: () => Math.random() > 0.5,\n    ID: () => (0, utils_js_1.uuidv4)(),\n};\nconst defaultKeyFieldNames = ['id', '_id'];\nclass MockStore {\n    constructor({ schema, mocks, typePolicies, }) {\n        this.store = {};\n        this.schema = schema;\n        this.mocks = { ...exports.defaultMocks, ...mocks };\n        this.typePolicies = typePolicies || {};\n    }\n    has(typeName, key) {\n        return !!this.store[typeName] && !!this.store[typeName][key];\n    }\n    get(_typeName, _key, _fieldName, _fieldArgs) {\n        if (typeof _typeName !== 'string') {\n            if (_key === undefined) {\n                if ((0, types_js_1.isRef)(_typeName)) {\n                    throw new Error(\"Can't provide a ref as first argument and no other argument\");\n                }\n                // get({...})\n                return this.getImpl(_typeName);\n            }\n            else {\n                (0, types_js_1.assertIsRef)(_typeName);\n                const { $ref } = _typeName;\n                // arguments shift\n                _fieldArgs = _fieldName;\n                _fieldName = _key;\n                _key = $ref.key;\n                _typeName = $ref.typeName;\n            }\n        }\n        const args = {\n            typeName: _typeName,\n        };\n        if ((0, types_js_1.isRecord)(_key) || _key === undefined) {\n            // get('User', { name: 'Alex'})\n            args.defaultValue = _key;\n            return this.getImpl(args);\n        }\n        args.key = _key;\n        if (Array.isArray(_fieldName) && _fieldName.length === 1) {\n            _fieldName = _fieldName[0];\n        }\n        if (typeof _fieldName !== 'string' && !Array.isArray(_fieldName)) {\n            // get('User', 'me', { name: 'Alex'})\n            args.defaultValue = _fieldName;\n            return this.getImpl(args);\n        }\n        if (Array.isArray(_fieldName)) {\n            // get('User', 'me', ['father', 'name'])\n            const ref = this.get(_typeName, _key, _fieldName[0], _fieldArgs);\n            (0, types_js_1.assertIsRef)(ref);\n            return this.get(ref.$ref.typeName, ref.$ref.key, _fieldName.slice(1, _fieldName.length));\n        }\n        // get('User', 'me', 'name'...);\n        args.fieldName = _fieldName;\n        args.fieldArgs = _fieldArgs;\n        return this.getImpl(args);\n    }\n    set(_typeName, _key, _fieldName, _value) {\n        if (typeof _typeName !== 'string') {\n            if (_key === undefined) {\n                if ((0, types_js_1.isRef)(_typeName)) {\n                    throw new Error(\"Can't provide a ref as first argument and no other argument\");\n                }\n                // set({...})\n                return this.setImpl(_typeName);\n            }\n            else {\n                (0, types_js_1.assertIsRef)(_typeName);\n                const { $ref } = _typeName;\n                // arguments shift\n                _value = _fieldName;\n                _fieldName = _key;\n                _key = $ref.key;\n                _typeName = $ref.typeName;\n            }\n        }\n        assertIsDefined(_key, 'key was not provided');\n        const args = {\n            typeName: _typeName,\n            key: _key,\n        };\n        if (typeof _fieldName !== 'string') {\n            // set('User', 1, { name: 'Foo' })\n            if (!(0, types_js_1.isRecord)(_fieldName))\n                throw new Error('Expected value to be a record');\n            args.value = _fieldName;\n            return this.setImpl(args);\n        }\n        args.fieldName = _fieldName;\n        args.value = _value;\n        return this.setImpl(args);\n    }\n    reset() {\n        this.store = {};\n    }\n    filter(key, predicate) {\n        const entity = this.store[key];\n        return Object.values(entity).filter(predicate);\n    }\n    find(key, predicate) {\n        const entity = this.store[key];\n        return Object.values(entity).find(predicate);\n    }\n    getImpl(args) {\n        const { typeName, key, fieldName, fieldArgs, defaultValue } = args;\n        if (!fieldName) {\n            if (defaultValue !== undefined && !(0, types_js_1.isRecord)(defaultValue)) {\n                throw new Error('`defaultValue` should be an object');\n            }\n            let valuesToInsert = defaultValue || {};\n            if (key) {\n                valuesToInsert = { ...valuesToInsert, ...(0, utils_js_1.makeRef)(typeName, key) };\n            }\n            return this.insert(typeName, valuesToInsert, true);\n        }\n        assertIsDefined(key, 'key argument should be given when fieldName is given');\n        const fieldNameInStore = getFieldNameInStore(fieldName, fieldArgs);\n        if (this.store[typeName] === undefined ||\n            this.store[typeName][key] === undefined ||\n            this.store[typeName][key][fieldNameInStore] === undefined) {\n            let value;\n            if (defaultValue !== undefined) {\n                value = defaultValue;\n            }\n            else if (this.isKeyField(typeName, fieldName)) {\n                value = key;\n            }\n            else {\n                value = this.generateFieldValue(typeName, fieldName, (otherFieldName, otherValue) => {\n                    // if we get a key field in the mix we don't care\n                    if (this.isKeyField(typeName, otherFieldName))\n                        return;\n                    this.set({ typeName, key, fieldName: otherFieldName, value: otherValue, noOverride: true });\n                });\n            }\n            this.set({ typeName, key, fieldName, fieldArgs, value, noOverride: true });\n        }\n        return this.store[typeName][key][fieldNameInStore];\n    }\n    setImpl(args) {\n        const { typeName, key, fieldName, fieldArgs, noOverride } = args;\n        let { value } = args;\n        if ((0, MockList_js_1.isMockList)(value)) {\n            value = (0, MockList_js_1.deepResolveMockList)(value);\n        }\n        if (this.store[typeName] === undefined) {\n            this.store[typeName] = {};\n        }\n        if (this.store[typeName][key] === undefined) {\n            this.store[typeName][key] = {};\n        }\n        if (!fieldName) {\n            if (!(0, types_js_1.isRecord)(value)) {\n                throw new Error('When no `fieldName` is provided, `value` should be a record.');\n            }\n            for (const fieldName in value) {\n                this.setImpl({\n                    typeName,\n                    key,\n                    fieldName,\n                    value: value[fieldName],\n                    noOverride,\n                });\n            }\n            return;\n        }\n        const fieldNameInStore = getFieldNameInStore(fieldName, fieldArgs);\n        if (this.isKeyField(typeName, fieldName) && value !== key) {\n            throw new Error(`Field ${fieldName} is a key field of ${typeName} and you are trying to set it to ${value} while the key is ${key}`);\n        }\n        // if already set and we don't override\n        if (this.store[typeName][key][fieldNameInStore] !== undefined && noOverride) {\n            return;\n        }\n        const fieldType = this.getFieldType(typeName, fieldName);\n        const currentValue = this.store[typeName][key][fieldNameInStore];\n        let valueToStore;\n        try {\n            valueToStore = this.normalizeValueToStore(fieldType, value, currentValue, (typeName, values) => this.insert(typeName, values, noOverride));\n        }\n        catch (e) {\n            throw new Error(`Value to set in ${typeName}.${fieldName} in not normalizable: ${e.message}`);\n        }\n        this.store[typeName][key] = {\n            ...this.store[typeName][key],\n            [fieldNameInStore]: valueToStore,\n        };\n    }\n    normalizeValueToStore(fieldType, value, currentValue, onInsertType) {\n        const fieldTypeName = fieldType.toString();\n        if (value === null) {\n            if (!(0, graphql_1.isNullableType)(fieldType)) {\n                throw new Error(`should not be null because ${fieldTypeName} is not nullable. Received null.`);\n            }\n            return null;\n        }\n        const nullableFieldType = (0, graphql_1.getNullableType)(fieldType);\n        if (value === undefined)\n            return this.generateValueFromType(nullableFieldType);\n        // deal with nesting insert\n        if ((0, graphql_1.isCompositeType)(nullableFieldType)) {\n            if (!(0, types_js_1.isRecord)(value))\n                throw new Error(`should be an object or null or undefined. Received ${value}`);\n            let joinedTypeName;\n            if ((0, graphql_1.isAbstractType)(nullableFieldType)) {\n                if ((0, types_js_1.isRef)(value)) {\n                    joinedTypeName = value.$ref.typeName;\n                }\n                else {\n                    if (typeof value['__typename'] !== 'string') {\n                        throw new Error(`should contain a '__typename' because ${nullableFieldType.name} an abstract type`);\n                    }\n                    joinedTypeName = value['__typename'];\n                }\n            }\n            else {\n                joinedTypeName = nullableFieldType.name;\n            }\n            return onInsertType(joinedTypeName, (0, types_js_1.isRef)(currentValue) ? { ...currentValue, ...value } : value);\n        }\n        if ((0, graphql_1.isListType)(nullableFieldType)) {\n            if (!Array.isArray(value))\n                throw new Error(`should be an array or null or undefined. Received ${value}`);\n            return value.map((v, index) => {\n                return this.normalizeValueToStore(nullableFieldType.ofType, v, typeof currentValue === 'object' && currentValue != null && currentValue[index] ? currentValue : undefined, onInsertType);\n            });\n        }\n        return value;\n    }\n    insert(typeName, values, noOverride) {\n        const keyFieldName = this.getKeyFieldName(typeName);\n        let key;\n        // when we generate a key for the type, we might produce\n        // other associated values with it\n        // We keep track of them and we'll insert them, with propririty\n        // for the ones that we areasked to insert\n        const otherValues = {};\n        if ((0, types_js_1.isRef)(values)) {\n            key = values.$ref.key;\n        }\n        else if (keyFieldName && keyFieldName in values) {\n            key = values[keyFieldName];\n        }\n        else {\n            key = this.generateKeyForType(typeName, (otherFieldName, otherFieldValue) => {\n                otherValues[otherFieldName] = otherFieldValue;\n            });\n        }\n        const toInsert = { ...otherValues, ...values };\n        for (const fieldName in toInsert) {\n            if (fieldName === '$ref')\n                continue;\n            if (fieldName === '__typename')\n                continue;\n            this.set({\n                typeName,\n                key,\n                fieldName,\n                value: toInsert[fieldName],\n                noOverride,\n            });\n        }\n        if (this.store[typeName] === undefined) {\n            this.store[typeName] = {};\n        }\n        if (this.store[typeName][key] === undefined) {\n            this.store[typeName][key] = {};\n        }\n        return (0, utils_js_1.makeRef)(typeName, key);\n    }\n    generateFieldValue(typeName, fieldName, onOtherFieldsGenerated) {\n        const mockedValue = this.generateFieldValueFromMocks(typeName, fieldName, onOtherFieldsGenerated);\n        if (mockedValue !== undefined)\n            return mockedValue;\n        const fieldType = this.getFieldType(typeName, fieldName);\n        return this.generateValueFromType(fieldType);\n    }\n    generateFieldValueFromMocks(typeName, fieldName, onOtherFieldsGenerated) {\n        let value;\n        const mock = this.mocks ? this.mocks[typeName] : undefined;\n        if (mock) {\n            if (typeof mock === 'function') {\n                const values = mock();\n                if (typeof values !== 'object' || values == null) {\n                    throw new Error(`Value returned by the mock for ${typeName} is not an object`);\n                }\n                for (const otherFieldName in values) {\n                    if (otherFieldName === fieldName)\n                        continue;\n                    if (typeof values[otherFieldName] === 'function')\n                        continue;\n                    onOtherFieldsGenerated && onOtherFieldsGenerated(otherFieldName, values[otherFieldName]);\n                }\n                value = values[fieldName];\n                if (typeof value === 'function')\n                    value = value();\n            }\n            else if (typeof mock === 'object' && mock != null && typeof mock[fieldName] === 'function') {\n                value = mock[fieldName]();\n            }\n        }\n        if (value !== undefined)\n            return value;\n        const type = this.getType(typeName);\n        // GraphQL 14 Compatibility\n        const interfaces = 'getInterfaces' in type ? type.getInterfaces() : [];\n        if (interfaces.length > 0) {\n            for (const interface_ of interfaces) {\n                if (value)\n                    break;\n                value = this.generateFieldValueFromMocks(interface_.name, fieldName, onOtherFieldsGenerated);\n            }\n        }\n        return value;\n    }\n    generateKeyForType(typeName, onOtherFieldsGenerated) {\n        const keyFieldName = this.getKeyFieldName(typeName);\n        if (!keyFieldName)\n            return (0, utils_js_1.uuidv4)();\n        return this.generateFieldValue(typeName, keyFieldName, onOtherFieldsGenerated);\n    }\n    generateValueFromType(fieldType) {\n        const nullableType = (0, graphql_1.getNullableType)(fieldType);\n        if ((0, graphql_1.isScalarType)(nullableType)) {\n            const mockFn = this.mocks[nullableType.name];\n            if (typeof mockFn !== 'function')\n                throw new Error(`No mock defined for type \"${nullableType.name}\"`);\n            return mockFn();\n        }\n        else if ((0, graphql_1.isEnumType)(nullableType)) {\n            const mockFn = this.mocks[nullableType.name];\n            if (typeof mockFn === 'function')\n                return mockFn();\n            const values = nullableType.getValues().map(v => v.value);\n            return (0, utils_js_1.takeRandom)(values);\n        }\n        else if ((0, graphql_1.isObjectType)(nullableType)) {\n            // this will create a new random ref\n            return this.insert(nullableType.name, {});\n        }\n        else if ((0, graphql_1.isListType)(nullableType)) {\n            return [...new Array((0, utils_js_1.randomListLength)())].map(() => this.generateValueFromType(nullableType.ofType));\n        }\n        else if ((0, graphql_1.isAbstractType)(nullableType)) {\n            const mock = this.mocks[nullableType.name];\n            let typeName;\n            let values = {};\n            if (!mock) {\n                typeName = (0, utils_js_1.takeRandom)(this.schema.getPossibleTypes(nullableType).map(t => t.name));\n            }\n            else if (typeof mock === 'function') {\n                const mockRes = mock();\n                if (mockRes === null)\n                    return null;\n                if (!(0, types_js_1.isRecord)(mockRes)) {\n                    throw new Error(`Value returned by the mock for ${nullableType.name} is not an object or null`);\n                }\n                values = mockRes;\n                if (typeof values['__typename'] !== 'string') {\n                    throw new Error(`Please return a __typename in \"${nullableType.name}\"`);\n                }\n                typeName = values['__typename'];\n            }\n            else if (typeof mock === 'object' && mock != null && typeof mock['__typename'] === 'function') {\n                const mockRes = mock['__typename']();\n                if (typeof mockRes !== 'string')\n                    throw new Error(`'__typename' returned by the mock for abstract type ${nullableType.name} is not a string`);\n                typeName = mockRes;\n            }\n            else {\n                throw new Error(`Please return a __typename in \"${nullableType.name}\"`);\n            }\n            const toInsert = {};\n            for (const fieldName in values) {\n                if (fieldName === '__typename')\n                    continue;\n                const fieldValue = values[fieldName];\n                toInsert[fieldName] = typeof fieldValue === 'function' ? fieldValue() : fieldValue;\n            }\n            return this.insert(typeName, toInsert);\n        }\n        else {\n            throw new Error(`${nullableType} not implemented`);\n        }\n    }\n    getFieldType(typeName, fieldName) {\n        if (fieldName === '__typename') {\n            return graphql_1.GraphQLString;\n        }\n        const type = this.getType(typeName);\n        const field = type.getFields()[fieldName];\n        if (!field) {\n            throw new Error(`${fieldName} does not exist on type ${typeName}`);\n        }\n        return field.type;\n    }\n    getType(typeName) {\n        const type = this.schema.getType(typeName);\n        if (!type || !((0, graphql_1.isObjectType)(type) || (0, graphql_1.isInterfaceType)(type))) {\n            throw new Error(`${typeName} does not exist on schema or is not an object or interface`);\n        }\n        return type;\n    }\n    isKeyField(typeName, fieldName) {\n        return this.getKeyFieldName(typeName) === fieldName;\n    }\n    getKeyFieldName(typeName) {\n        var _a;\n        const typePolicyKeyField = (_a = this.typePolicies[typeName]) === null || _a === void 0 ? void 0 : _a.keyFieldName;\n        if (typePolicyKeyField !== undefined) {\n            if (typePolicyKeyField === false)\n                return null;\n            return typePolicyKeyField;\n        }\n        // How about common key field names?\n        const gqlType = this.getType(typeName);\n        for (const fieldName in gqlType.getFields()) {\n            if (defaultKeyFieldNames.includes(fieldName)) {\n                return fieldName;\n            }\n        }\n        return null;\n    }\n}\nexports.MockStore = MockStore;\nconst getFieldNameInStore = (fieldName, fieldArgs) => {\n    if (!fieldArgs)\n        return fieldName;\n    if (typeof fieldArgs === 'string') {\n        return `${fieldName}:${fieldArgs}`;\n    }\n    // empty args\n    if (Object.keys(fieldArgs).length === 0) {\n        return fieldName;\n    }\n    return `${fieldName}:${(0, fast_json_stable_stringify_1.default)(fieldArgs)}`;\n};\nfunction assertIsDefined(value, message) {\n    if (value !== undefined && value !== null) {\n        return;\n    }\n    throw new Error(process.env['NODE_ENV'] === 'production' ? 'Invariant failed:' : `Invariant failed: ${message || ''}`);\n}\n/**\n * Will create `MockStore` for the given `schema`.\n *\n * A `MockStore` will generate mock values for the given schem when queried.\n *\n * It will stores generated mocks, so that, provided with same arguments\n * the returned values will be the same.\n *\n * Its API also allows to modify the stored values.\n *\n * Basic example:\n * ```ts\n * store.get('User', 1, 'name');\n * // > \"Hello World\"\n * store.set('User', 1, 'name', 'Alexandre');\n * store.get('User', 1, 'name');\n * // > \"Alexandre\"\n * ```\n *\n * The storage key will correspond to the \"key field\"\n * of the type. Field with name `id` or `_id` will be\n * by default considered as the key field for the type.\n * However, use `typePolicies` to precise the field to use\n * as key.\n */\nfunction createMockStore(options) {\n    return new MockStore(options);\n}\nexports.createMockStore = createMockStore;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/cjs/addMocksToSchema.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addMocksToSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst schema_1 = require(\"@graphql-tools/schema\");\nconst types_js_1 = require(\"./types.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst MockStore_js_1 = require(\"./MockStore.js\");\n// todo: add option to preserve resolver\n/**\n * Given a `schema` and a `MockStore`, returns an executable schema that\n * will use the provided `MockStore` to execute queries.\n *\n * ```ts\n * const schema = buildSchema(`\n *  type User {\n *    id: ID!\n *    name: String!\n *  }\n *  type Query {\n *    me: User!\n *  }\n * `)\n *\n * const store = createMockStore({ schema });\n * const mockedSchema = addMocksToSchema({ schema, store });\n * ```\n *\n *\n * If a `resolvers` parameter is passed, the query execution will use\n * the provided `resolvers` if, one exists, instead of the default mock\n * resolver.\n *\n *\n * ```ts\n * const schema = buildSchema(`\n *   type User {\n *     id: ID!\n *     name: String!\n *   }\n *   type Query {\n *     me: User!\n *   }\n *   type Mutation {\n *     setMyName(newName: String!): User!\n *   }\n * `)\n *\n * const store = createMockStore({ schema });\n * const mockedSchema = addMocksToSchema({\n *   schema,\n *   store,\n *   resolvers: {\n *     Mutation: {\n *       setMyName: (_, { newName }) => {\n *          const ref = store.get('Query', 'ROOT', 'viewer');\n *          store.set(ref, 'name', newName);\n *          return ref;\n *       }\n *     }\n *   }\n *  });\n * ```\n *\n *\n * `Query` and `Mutation` type will use `key` `'ROOT'`.\n */\nfunction addMocksToSchema({ schema, store: maybeStore, mocks, typePolicies, resolvers: resolversOrFnResolvers, preserveResolvers = false, }) {\n    if (!schema) {\n        throw new Error('Must provide schema to mock');\n    }\n    if (!(0, graphql_1.isSchema)(schema)) {\n        throw new Error('Value at \"schema\" must be of type GraphQLSchema');\n    }\n    if (mocks && !(0, utils_js_1.isObject)(mocks)) {\n        throw new Error('mocks must be of type Object');\n    }\n    const store = maybeStore ||\n        (0, MockStore_js_1.createMockStore)({\n            schema,\n            mocks,\n            typePolicies,\n        });\n    const resolvers = typeof resolversOrFnResolvers === 'function'\n        ? resolversOrFnResolvers(store)\n        : resolversOrFnResolvers;\n    const mockResolver = (source, args, contex, info) => {\n        const defaultResolvedValue = (0, graphql_1.defaultFieldResolver)(source, args, contex, info);\n        // priority to default resolved value\n        if (defaultResolvedValue !== undefined)\n            return defaultResolvedValue;\n        if ((0, types_js_1.isRef)(source)) {\n            return store.get({\n                typeName: source.$ref.typeName,\n                key: source.$ref.key,\n                fieldName: info.fieldName,\n                fieldArgs: args,\n            });\n        }\n        // we have to handle the root mutation, root query and root subscription types\n        // differently, because no resolver is called at the root\n        if ((0, utils_js_1.isRootType)(info.parentType, info.schema)) {\n            return store.get({\n                typeName: info.parentType.name,\n                key: 'ROOT',\n                fieldName: info.fieldName,\n                fieldArgs: args,\n            });\n        }\n        if (defaultResolvedValue === undefined) {\n            // any is used here because generateFieldValue is a private method at time of writing\n            return store.generateFieldValue(info.parentType.name, info.fieldName);\n        }\n        return undefined;\n    };\n    const typeResolver = data => {\n        if ((0, types_js_1.isRef)(data)) {\n            return data.$ref.typeName;\n        }\n    };\n    const mockSubscriber = () => ({\n        [Symbol.asyncIterator]() {\n            return {\n                async next() {\n                    return {\n                        done: true,\n                        value: {},\n                    };\n                },\n            };\n        },\n    });\n    const schemaWithMocks = (0, utils_1.mapSchema)(schema, {\n        [utils_1.MapperKind.OBJECT_FIELD]: fieldConfig => {\n            const newFieldConfig = {\n                ...fieldConfig,\n            };\n            const oldResolver = fieldConfig.resolve;\n            if (!preserveResolvers || !oldResolver) {\n                newFieldConfig.resolve = mockResolver;\n            }\n            else {\n                newFieldConfig.resolve = async (rootObject, args, context, info) => {\n                    const [mockedValue, resolvedValue] = await Promise.all([\n                        mockResolver(rootObject, args, context, info),\n                        oldResolver(rootObject, args, context, info),\n                    ]);\n                    // In case we couldn't mock\n                    if (mockedValue instanceof Error) {\n                        // only if value was not resolved, populate the error.\n                        if (undefined === resolvedValue) {\n                            throw mockedValue;\n                        }\n                        return resolvedValue;\n                    }\n                    if (resolvedValue instanceof Date && mockedValue instanceof Date) {\n                        return undefined !== resolvedValue ? resolvedValue : mockedValue;\n                    }\n                    if ((0, utils_js_1.isObject)(mockedValue) && (0, utils_js_1.isObject)(resolvedValue)) {\n                        // Object.assign() won't do here, as we need to all properties, including\n                        // the non-enumerable ones and defined using Object.defineProperty\n                        const emptyObject = Object.create(Object.getPrototypeOf(resolvedValue));\n                        return (0, utils_js_1.copyOwnProps)(emptyObject, resolvedValue, mockedValue);\n                    }\n                    return undefined !== resolvedValue ? resolvedValue : mockedValue;\n                };\n            }\n            const fieldSubscriber = fieldConfig.subscribe;\n            if (!preserveResolvers || !fieldSubscriber) {\n                newFieldConfig.subscribe = mockSubscriber;\n            }\n            else {\n                newFieldConfig.subscribe = async (rootObject, args, context, info) => {\n                    const [mockAsyncIterable, oldAsyncIterable] = await Promise.all([\n                        mockSubscriber(rootObject, args, context, info),\n                        fieldSubscriber(rootObject, args, context, info),\n                    ]);\n                    return oldAsyncIterable || mockAsyncIterable;\n                };\n            }\n            return newFieldConfig;\n        },\n        [utils_1.MapperKind.ABSTRACT_TYPE]: type => {\n            if (preserveResolvers && type.resolveType != null && type.resolveType.length) {\n                return;\n            }\n            if ((0, graphql_1.isUnionType)(type)) {\n                return new graphql_1.GraphQLUnionType({\n                    ...type.toConfig(),\n                    resolveType: typeResolver,\n                });\n            }\n            else {\n                return new graphql_1.GraphQLInterfaceType({\n                    ...type.toConfig(),\n                    resolveType: typeResolver,\n                });\n            }\n        },\n    });\n    return resolvers\n        ? (0, schema_1.addResolversToSchema)({\n            schema: schemaWithMocks,\n            resolvers: resolvers,\n        })\n        : schemaWithMocks;\n}\nexports.addMocksToSchema = addMocksToSchema;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/cjs/mockServer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mockServer = void 0;\nconst graphql_1 = require(\"graphql\");\nconst schema_1 = require(\"@graphql-tools/schema\");\nconst addMocksToSchema_js_1 = require(\"./addMocksToSchema.js\");\n/**\n * A convenience wrapper on top of addMocksToSchema. It adds your mock resolvers\n * to your schema and returns a client that will correctly execute your query with\n * variables. Note: when executing queries from the returned server, context and\n * root will both equal `{}`.\n * @param schema The schema to which to add mocks. This can also be a set of type\n * definitions instead.\n * @param mocks The mocks to add to the schema.\n * @param preserveResolvers Set to `true` to prevent existing resolvers from being\n * overwritten to provide mock data. This can be used to mock some parts of the\n * server and not others.\n */\nfunction mockServer(schema, mocks, preserveResolvers = false) {\n    const mockedSchema = (0, addMocksToSchema_js_1.addMocksToSchema)({\n        schema: (0, graphql_1.isSchema)(schema)\n            ? schema\n            : (0, schema_1.makeExecutableSchema)({\n                typeDefs: schema,\n            }),\n        mocks,\n        preserveResolvers,\n    });\n    return {\n        query: (query, vars) => (0, graphql_1.graphql)({\n            schema: mockedSchema,\n            source: query,\n            rootValue: {},\n            contextValue: {},\n            variableValues: vars,\n        }),\n    };\n}\nexports.mockServer = mockServer;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,UAAU,GAAG,KAAK;AAC1B,MAAM;AACN,MAAM;AACN,MAAM;AACN;;;;;;;;;;;CAWC,GACD,SAAS,WAAW,MAAM,EAAE,KAAK,EAAE,oBAAoB,KAAK;IACxD,MAAM,eAAe,CAAC,GAAG,sBAAsB,gBAAgB,EAAE;QAC7D,QAAQ,CAAC,GAAG,UAAU,QAAQ,EAAE,UAC1B,SACA,CAAC,GAAG,SAAS,oBAAoB,EAAE;YACjC,UAAU;QACd;QACJ;QACA;IACJ;IACA,OAAO;QACH,OAAO,CAAC,OAAO,OAAS,CAAC,GAAG,UAAU,OAAO,EAAE;gBAC3C,QAAQ;gBACR,QAAQ;gBACR,WAAW,CAAC;gBACZ,cAAc,CAAC;gBACf,gBAAgB;YACpB;IACJ;AACJ;AACA,QAAQ,UAAU,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 904, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/cjs/pagination.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.relayStylePaginationMock = void 0;\nconst utils_js_1 = require(\"./utils.js\");\n/**\n * Produces a resolver that'll mock a [Relay-style cursor pagination](https://relay.dev/graphql/connections.htm).\n *\n * ```ts\n * const schemaWithMocks = addMocksToSchema({\n *   schema,\n *   resolvers: (store) => ({\n *     User: {\n *       friends: relayStylePaginationMock(store),\n *     }\n *   }),\n * })\n * ```\n * @param store the MockStore\n */\nconst relayStylePaginationMock = (store, { cursorFn = node => `${node.$ref.key}`, applyOnNodes, allNodesFn, } = {}) => {\n    return (parent, args, context, info) => {\n        const source = (0, utils_js_1.isRootType)(info.parentType, info.schema) ? (0, utils_js_1.makeRef)(info.parentType.name, 'ROOT') : parent;\n        const allNodesFn_ = allNodesFn !== null && allNodesFn !== void 0 ? allNodesFn : defaultAllNodesFn(store);\n        let allNodes = allNodesFn_(source, args, context, info);\n        if (applyOnNodes) {\n            allNodes = applyOnNodes(allNodes, args);\n        }\n        const allEdges = allNodes.map(node => ({\n            node,\n            cursor: cursorFn(node),\n        }));\n        let start, end;\n        const { first, after, last, before } = args;\n        if (typeof first === 'number') {\n            // forward pagination\n            if (last || before) {\n                throw new Error(\"if `first` is provided, `last` or `before` can't be provided\");\n            }\n            const afterIndex = after ? allEdges.findIndex(e => e.cursor === after) : -1;\n            start = afterIndex + 1;\n            end = afterIndex + 1 + first;\n        }\n        else if (typeof last === 'number') {\n            // backward pagination\n            if (first || after) {\n                throw new Error(\"if `last` is provided, `first` or `after` can't be provided\");\n            }\n            const foundBeforeIndex = before ? allEdges.findIndex(e => e.cursor === before) : -1;\n            const beforeIndex = foundBeforeIndex !== -1 ? foundBeforeIndex : allNodes.length;\n            start = allEdges.length - (allEdges.length - beforeIndex) - last;\n            // negative index on Array.slice indicate offset from end of sequence => we don't want\n            if (start < 0)\n                start = 0;\n            end = beforeIndex;\n        }\n        else {\n            throw new Error('A `first` or a `last` arguments should be provided');\n        }\n        const edges = allEdges.slice(start, end);\n        const pageInfo = {\n            startCursor: edges.length > 0 ? edges[0].cursor : '',\n            endCursor: edges.length > 0 ? edges[edges.length - 1].cursor : '',\n            hasNextPage: end < allEdges.length - 1,\n            hasPreviousPage: start > 0,\n        };\n        return {\n            edges,\n            pageInfo,\n            totalCount: allEdges.length,\n        };\n    };\n};\nexports.relayStylePaginationMock = relayStylePaginationMock;\nconst defaultAllNodesFn = (store) => (parent, _, __, info) => store.get(parent, [info.fieldName, 'edges']).map(e => store.get(e, 'node'));\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,wBAAwB,GAAG,KAAK;AACxC,MAAM;AACN;;;;;;;;;;;;;;CAcC,GACD,MAAM,2BAA2B,CAAC,OAAO,EAAE,WAAW,CAAA,OAAQ,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,UAAU,EAAG,GAAG,CAAC,CAAC;IAC9G,OAAO,CAAC,QAAQ,MAAM,SAAS;QAC3B,MAAM,SAAS,CAAC,GAAG,WAAW,UAAU,EAAE,KAAK,UAAU,EAAE,KAAK,MAAM,IAAI,CAAC,GAAG,WAAW,OAAO,EAAE,KAAK,UAAU,CAAC,IAAI,EAAE,UAAU;QAClI,MAAM,cAAc,eAAe,QAAQ,eAAe,KAAK,IAAI,aAAa,kBAAkB;QAClG,IAAI,WAAW,YAAY,QAAQ,MAAM,SAAS;QAClD,IAAI,cAAc;YACd,WAAW,aAAa,UAAU;QACtC;QACA,MAAM,WAAW,SAAS,GAAG,CAAC,CAAA,OAAQ,CAAC;gBACnC;gBACA,QAAQ,SAAS;YACrB,CAAC;QACD,IAAI,OAAO;QACX,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG;QACvC,IAAI,OAAO,UAAU,UAAU;YAC3B,qBAAqB;YACrB,IAAI,QAAQ,QAAQ;gBAChB,MAAM,IAAI,MAAM;YACpB;YACA,MAAM,aAAa,QAAQ,SAAS,SAAS,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,SAAS,CAAC;YAC1E,QAAQ,aAAa;YACrB,MAAM,aAAa,IAAI;QAC3B,OACK,IAAI,OAAO,SAAS,UAAU;YAC/B,sBAAsB;YACtB,IAAI,SAAS,OAAO;gBAChB,MAAM,IAAI,MAAM;YACpB;YACA,MAAM,mBAAmB,SAAS,SAAS,SAAS,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,UAAU,CAAC;YAClF,MAAM,cAAc,qBAAqB,CAAC,IAAI,mBAAmB,SAAS,MAAM;YAChF,QAAQ,SAAS,MAAM,GAAG,CAAC,SAAS,MAAM,GAAG,WAAW,IAAI;YAC5D,sFAAsF;YACtF,IAAI,QAAQ,GACR,QAAQ;YACZ,MAAM;QACV,OACK;YACD,MAAM,IAAI,MAAM;QACpB;QACA,MAAM,QAAQ,SAAS,KAAK,CAAC,OAAO;QACpC,MAAM,WAAW;YACb,aAAa,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM,GAAG;YAClD,WAAW,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,GAAG;YAC/D,aAAa,MAAM,SAAS,MAAM,GAAG;YACrC,iBAAiB,QAAQ;QAC7B;QACA,OAAO;YACH;YACA;YACA,YAAY,SAAS,MAAM;QAC/B;IACJ;AACJ;AACA,QAAQ,wBAAwB,GAAG;AACnC,MAAM,oBAAoB,CAAC,QAAU,CAAC,QAAQ,GAAG,IAAI,OAAS,MAAM,GAAG,CAAC,QAAQ;YAAC,KAAK,SAAS;YAAE;SAAQ,EAAE,GAAG,CAAC,CAAA,IAAK,MAAM,GAAG,CAAC,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 984, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/cjs/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./MockStore.js\"), exports);\ntslib_1.__exportStar(require(\"./addMocksToSchema.js\"), exports);\ntslib_1.__exportStar(require(\"./mockServer.js\"), exports);\ntslib_1.__exportStar(require(\"./types.js\"), exports);\ntslib_1.__exportStar(require(\"./MockList.js\"), exports);\ntslib_1.__exportStar(require(\"./pagination.js\"), exports);\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,MAAM;AACN,QAAQ,YAAY,kHAA4B;AAChD,QAAQ,YAAY,yHAAmC;AACvD,QAAQ,YAAY,mHAA6B;AACjD,QAAQ,YAAY,8GAAwB;AAC5C,QAAQ,YAAY,iHAA2B;AAC/C,QAAQ,YAAY,mHAA6B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1000, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/schema/cjs/assertResolversPresent.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertResolversPresent = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction assertResolversPresent(schema, resolverValidationOptions = {}) {\n    const { requireResolversForArgs, requireResolversForNonScalar, requireResolversForAllFields } = resolverValidationOptions;\n    if (requireResolversForAllFields && (requireResolversForArgs || requireResolversForNonScalar)) {\n        throw new TypeError('requireResolversForAllFields takes precedence over the more specific assertions. ' +\n            'Please configure either requireResolversForAllFields or requireResolversForArgs / ' +\n            'requireResolversForNonScalar, but not a combination of them.');\n    }\n    (0, utils_1.forEachField)(schema, (field, typeName, fieldName) => {\n        // requires a resolver for *every* field.\n        if (requireResolversForAllFields) {\n            expectResolver('requireResolversForAllFields', requireResolversForAllFields, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that has arguments\n        if (requireResolversForArgs && field.args.length > 0) {\n            expectResolver('requireResolversForArgs', requireResolversForArgs, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that returns a non-scalar type\n        if (requireResolversForNonScalar !== 'ignore' && !(0, graphql_1.isScalarType)((0, graphql_1.getNamedType)(field.type))) {\n            expectResolver('requireResolversForNonScalar', requireResolversForNonScalar, field, typeName, fieldName);\n        }\n    });\n}\nexports.assertResolversPresent = assertResolversPresent;\nfunction expectResolver(validator, behavior, field, typeName, fieldName) {\n    if (!field.resolve) {\n        const message = `Resolver missing for \"${typeName}.${fieldName}\".\nTo disable this validator, use:\n  resolverValidationOptions: {\n    ${validator}: 'ignore'\n  }`;\n        if (behavior === 'error') {\n            throw new Error(message);\n        }\n        if (behavior === 'warn') {\n            console.warn(message);\n        }\n        return;\n    }\n    if (typeof field.resolve !== 'function') {\n        throw new Error(`Resolver \"${typeName}.${fieldName}\" must be a function`);\n    }\n}\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,sBAAsB,GAAG,KAAK;AACtC,MAAM;AACN,MAAM;AACN,SAAS,uBAAuB,MAAM,EAAE,4BAA4B,CAAC,CAAC;IAClE,MAAM,EAAE,uBAAuB,EAAE,4BAA4B,EAAE,4BAA4B,EAAE,GAAG;IAChG,IAAI,gCAAgC,CAAC,2BAA2B,4BAA4B,GAAG;QAC3F,MAAM,IAAI,UAAU,sFAChB,uFACA;IACR;IACA,CAAC,GAAG,QAAQ,YAAY,EAAE,QAAQ,CAAC,OAAO,UAAU;QAChD,yCAAyC;QACzC,IAAI,8BAA8B;YAC9B,eAAe,gCAAgC,8BAA8B,OAAO,UAAU;QAClG;QACA,wDAAwD;QACxD,IAAI,2BAA2B,MAAM,IAAI,CAAC,MAAM,GAAG,GAAG;YAClD,eAAe,2BAA2B,yBAAyB,OAAO,UAAU;QACxF;QACA,oEAAoE;QACpE,IAAI,iCAAiC,YAAY,CAAC,CAAC,GAAG,UAAU,YAAY,EAAE,CAAC,GAAG,UAAU,YAAY,EAAE,MAAM,IAAI,IAAI;YACpH,eAAe,gCAAgC,8BAA8B,OAAO,UAAU;QAClG;IACJ;AACJ;AACA,QAAQ,sBAAsB,GAAG;AACjC,SAAS,eAAe,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS;IACnE,IAAI,CAAC,MAAM,OAAO,EAAE;QAChB,MAAM,UAAU,CAAC,sBAAsB,EAAE,SAAS,CAAC,EAAE,UAAU;;;IAGnE,EAAE,UAAU;GACb,CAAC;QACI,IAAI,aAAa,SAAS;YACtB,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,aAAa,QAAQ;YACrB,QAAQ,IAAI,CAAC;QACjB;QACA;IACJ;IACA,IAAI,OAAO,MAAM,OAAO,KAAK,YAAY;QACrC,MAAM,IAAI,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,UAAU,oBAAoB,CAAC;IAC5E;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/schema/cjs/chainResolvers.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainResolvers = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction chainResolvers(resolvers) {\n    return (root, args, ctx, info) => resolvers.reduce((prev, curResolver) => {\n        if (curResolver != null) {\n            return curResolver(prev, args, ctx, info);\n        }\n        return (0, graphql_1.defaultFieldResolver)(prev, args, ctx, info);\n    }, root);\n}\nexports.chainResolvers = chainResolvers;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN,SAAS,eAAe,SAAS;IAC7B,OAAO,CAAC,MAAM,MAAM,KAAK,OAAS,UAAU,MAAM,CAAC,CAAC,MAAM;YACtD,IAAI,eAAe,MAAM;gBACrB,OAAO,YAAY,MAAM,MAAM,KAAK;YACxC;YACA,OAAO,CAAC,GAAG,UAAU,oBAAoB,EAAE,MAAM,MAAM,KAAK;QAChE,GAAG;AACP;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1072, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/schema/cjs/checkForResolveTypeResolver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkForResolveTypeResolver = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\n// If we have any union or interface types throw if no there is no resolveType resolver\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    (0, utils_1.mapSchema)(schema, {\n        [utils_1.MapperKind.ABSTRACT_TYPE]: type => {\n            if (!type.resolveType) {\n                const message = `Type \"${type.name}\" is missing a \"__resolveType\" resolver. Pass 'ignore' into ` +\n                    '\"resolverValidationOptions.requireResolversForResolveType\" to disable this error.';\n                if (requireResolversForResolveType === 'error') {\n                    throw new Error(message);\n                }\n                if (requireResolversForResolveType === 'warn') {\n                    console.warn(message);\n                }\n            }\n            return undefined;\n        },\n    });\n}\nexports.checkForResolveTypeResolver = checkForResolveTypeResolver;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,2BAA2B,GAAG,KAAK;AAC3C,MAAM;AACN,uFAAuF;AACvF,SAAS,4BAA4B,MAAM,EAAE,8BAA8B;IACvE,CAAC,GAAG,QAAQ,SAAS,EAAE,QAAQ;QAC3B,CAAC,QAAQ,UAAU,CAAC,aAAa,CAAC,EAAE,CAAA;YAChC,IAAI,CAAC,KAAK,WAAW,EAAE;gBACnB,MAAM,UAAU,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,4DAA4D,CAAC,GAC5F;gBACJ,IAAI,mCAAmC,SAAS;oBAC5C,MAAM,IAAI,MAAM;gBACpB;gBACA,IAAI,mCAAmC,QAAQ;oBAC3C,QAAQ,IAAI,CAAC;gBACjB;YACJ;YACA,OAAO;QACX;IACJ;AACJ;AACA,QAAQ,2BAA2B,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1101, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/schema/cjs/extendResolversFromInterfaces.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendResolversFromInterfaces = void 0;\nfunction extendResolversFromInterfaces(schema, resolvers) {\n    const extendedResolvers = {};\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ('getInterfaces' in type) {\n            extendedResolvers[typeName] = {};\n            for (const iFace of type.getInterfaces()) {\n                if (resolvers[iFace.name]) {\n                    for (const fieldName in resolvers[iFace.name]) {\n                        if (fieldName === '__isTypeOf' || !fieldName.startsWith('__')) {\n                            extendedResolvers[typeName][fieldName] = resolvers[iFace.name][fieldName];\n                        }\n                    }\n                }\n            }\n            const typeResolvers = resolvers[typeName];\n            extendedResolvers[typeName] = {\n                ...extendedResolvers[typeName],\n                ...typeResolvers,\n            };\n        }\n        else {\n            const typeResolvers = resolvers[typeName];\n            if (typeResolvers != null) {\n                extendedResolvers[typeName] = typeResolvers;\n            }\n        }\n    }\n    return extendedResolvers;\n}\nexports.extendResolversFromInterfaces = extendResolversFromInterfaces;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,6BAA6B,GAAG,KAAK;AAC7C,SAAS,8BAA8B,MAAM,EAAE,SAAS;IACpD,MAAM,oBAAoB,CAAC;IAC3B,MAAM,UAAU,OAAO,UAAU;IACjC,IAAK,MAAM,YAAY,QAAS;QAC5B,MAAM,OAAO,OAAO,CAAC,SAAS;QAC9B,IAAI,mBAAmB,MAAM;YACzB,iBAAiB,CAAC,SAAS,GAAG,CAAC;YAC/B,KAAK,MAAM,SAAS,KAAK,aAAa,GAAI;gBACtC,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;oBACvB,IAAK,MAAM,aAAa,SAAS,CAAC,MAAM,IAAI,CAAC,CAAE;wBAC3C,IAAI,cAAc,gBAAgB,CAAC,UAAU,UAAU,CAAC,OAAO;4BAC3D,iBAAiB,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,UAAU;wBAC7E;oBACJ;gBACJ;YACJ;YACA,MAAM,gBAAgB,SAAS,CAAC,SAAS;YACzC,iBAAiB,CAAC,SAAS,GAAG;gBAC1B,GAAG,iBAAiB,CAAC,SAAS;gBAC9B,GAAG,aAAa;YACpB;QACJ,OACK;YACD,MAAM,gBAAgB,SAAS,CAAC,SAAS;YACzC,IAAI,iBAAiB,MAAM;gBACvB,iBAAiB,CAAC,SAAS,GAAG;YAClC;QACJ;IACJ;IACA,OAAO;AACX;AACA,QAAQ,6BAA6B,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1142, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/schema/cjs/addResolversToSchema.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addResolversToSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst checkForResolveTypeResolver_js_1 = require(\"./checkForResolveTypeResolver.js\");\nconst extendResolversFromInterfaces_js_1 = require(\"./extendResolversFromInterfaces.js\");\nfunction addResolversToSchema({ schema, resolvers: inputResolvers, defaultFieldResolver, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, }) {\n    const { requireResolversToMatchSchema = 'error', requireResolversForResolveType } = resolverValidationOptions;\n    const resolvers = inheritResolversFromInterfaces\n        ? (0, extendResolversFromInterfaces_js_1.extendResolversFromInterfaces)(schema, inputResolvers)\n        : inputResolvers;\n    for (const typeName in resolvers) {\n        const resolverValue = resolvers[typeName];\n        const resolverType = typeof resolverValue;\n        if (resolverType !== 'object') {\n            throw new Error(`\"${typeName}\" defined in resolvers, but has invalid value \"${resolverValue}\". The resolver's value must be of type object.`);\n        }\n        const type = schema.getType(typeName);\n        if (type == null) {\n            if (requireResolversToMatchSchema === 'ignore') {\n                continue;\n            }\n            throw new Error(`\"${typeName}\" defined in resolvers, but not in schema`);\n        }\n        else if ((0, graphql_1.isSpecifiedScalarType)(type)) {\n            // allow -- without recommending -- overriding of specified scalar types\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            const values = type.getValues();\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    !values.some(value => value.name === fieldName) &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but not present within ${type.name}`);\n                }\n            }\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but ${type.name} is not an object or interface type`);\n                }\n            }\n        }\n        else if ((0, graphql_1.isObjectType)(type) || (0, graphql_1.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__')) {\n                    const fields = type.getFields();\n                    const field = fields[fieldName];\n                    if (field == null) {\n                        // Field present in resolver but not in schema\n                        if (requireResolversToMatchSchema && requireResolversToMatchSchema !== 'ignore') {\n                            throw new Error(`${typeName}.${fieldName} defined in resolvers, but not in schema`);\n                        }\n                    }\n                    else {\n                        // Field present in both the resolver and schema\n                        const fieldResolve = resolverValue[fieldName];\n                        if (typeof fieldResolve !== 'function' && typeof fieldResolve !== 'object') {\n                            throw new Error(`Resolver ${typeName}.${fieldName} must be object or function`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    schema = updateResolversInPlace\n        ? addResolversToExistingSchema(schema, resolvers, defaultFieldResolver)\n        : createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver);\n    if (requireResolversForResolveType && requireResolversForResolveType !== 'ignore') {\n        (0, checkForResolveTypeResolver_js_1.checkForResolveTypeResolver)(schema, requireResolversForResolveType);\n    }\n    return schema;\n}\nexports.addResolversToSchema = addResolversToSchema;\nfunction addResolversToExistingSchema(schema, resolvers, defaultFieldResolver) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    const typeMap = schema.getTypeMap();\n    for (const typeName in resolvers) {\n        const type = schema.getType(typeName);\n        const resolverValue = resolvers[typeName];\n        if ((0, graphql_1.isScalarType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && type.astNode != null) {\n                    type.astNode = {\n                        ...type.astNode,\n                        description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : type.astNode.description,\n                        directives: ((_c = type.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && type.extensionASTNodes != null) {\n                    type.extensionASTNodes = type.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    config[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && config.astNode != null) {\n                    config.astNode = {\n                        ...config.astNode,\n                        description: (_h = (_g = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _g === void 0 ? void 0 : _g.description) !== null && _h !== void 0 ? _h : config.astNode.description,\n                        directives: ((_j = config.astNode.directives) !== null && _j !== void 0 ? _j : []).concat((_l = (_k = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _k === void 0 ? void 0 : _k.directives) !== null && _l !== void 0 ? _l : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                    config.extensionASTNodes = config.extensionASTNodes.concat((_m = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _m !== void 0 ? _m : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else if (enumValueConfigMap[fieldName]) {\n                    enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                }\n            }\n            typeMap[typeName] = new graphql_1.GraphQLEnumType(config);\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isObjectType)(type) || (0, graphql_1.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    // this is for isTypeOf and resolveType and all the other stuff.\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                    continue;\n                }\n                const fields = type.getFields();\n                const field = fields[fieldName];\n                if (field != null) {\n                    const fieldResolve = resolverValue[fieldName];\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        field.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(field, fieldResolve);\n                    }\n                }\n            }\n        }\n    }\n    // serialize all default values prior to healing fields with new scalar/enum types.\n    (0, utils_1.forEachDefaultValue)(schema, utils_1.serializeInputValue);\n    // schema may have new scalar/enum types that require healing\n    (0, utils_1.healSchema)(schema);\n    // reparse all default values with new parsing functions.\n    (0, utils_1.forEachDefaultValue)(schema, utils_1.parseInputValue);\n    if (defaultFieldResolver != null) {\n        (0, utils_1.forEachField)(schema, field => {\n            if (!field.resolve) {\n                field.resolve = defaultFieldResolver;\n            }\n        });\n    }\n    return schema;\n}\nfunction createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver) {\n    schema = (0, utils_1.mapSchema)(schema, {\n        [utils_1.MapperKind.SCALAR_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f;\n            const config = type.toConfig();\n            const resolverValue = resolvers[type.name];\n            if (!(0, graphql_1.isSpecifiedScalarType)(type) && resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : config.astNode.description,\n                            directives: ((_c = config.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else {\n                        config[fieldName] = resolverValue[fieldName];\n                    }\n                }\n                return new graphql_1.GraphQLScalarType(config);\n            }\n        },\n        [utils_1.MapperKind.ENUM_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f;\n            const resolverValue = resolvers[type.name];\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            if (resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : config.astNode.description,\n                            directives: ((_c = config.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else if (enumValueConfigMap[fieldName]) {\n                        enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                    }\n                }\n                return new graphql_1.GraphQLEnumType(config);\n            }\n        },\n        [utils_1.MapperKind.UNION_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql_1.GraphQLUnionType(config);\n            }\n        },\n        [utils_1.MapperKind.OBJECT_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__isTypeOf']) {\n                    config.isTypeOf = resolverValue['__isTypeOf'];\n                }\n                return new graphql_1.GraphQLObjectType(config);\n            }\n        },\n        [utils_1.MapperKind.INTERFACE_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql_1.GraphQLInterfaceType(config);\n            }\n        },\n        [utils_1.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n            const resolverValue = resolvers[typeName];\n            if (resolverValue != null) {\n                const fieldResolve = resolverValue[fieldName];\n                if (fieldResolve != null) {\n                    const newFieldConfig = { ...fieldConfig };\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        newFieldConfig.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(newFieldConfig, fieldResolve);\n                    }\n                    return newFieldConfig;\n                }\n            }\n        },\n    });\n    if (defaultFieldResolver != null) {\n        schema = (0, utils_1.mapSchema)(schema, {\n            [utils_1.MapperKind.OBJECT_FIELD]: fieldConfig => ({\n                ...fieldConfig,\n                resolve: fieldConfig.resolve != null ? fieldConfig.resolve : defaultFieldResolver,\n            }),\n        });\n    }\n    return schema;\n}\nfunction setFieldProperties(field, propertiesObj) {\n    for (const propertyName in propertiesObj) {\n        field[propertyName] = propertiesObj[propertyName];\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1425, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/schema/cjs/makeExecutableSchema.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeExecutableSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst addResolversToSchema_js_1 = require(\"./addResolversToSchema.js\");\nconst assertResolversPresent_js_1 = require(\"./assertResolversPresent.js\");\nconst merge_1 = require(\"@graphql-tools/merge\");\n/**\n * Builds a schema from the provided type definitions and resolvers.\n *\n * The type definitions are written using Schema Definition Language (SDL). They\n * can be provided as a string, a `DocumentNode`, a function, or an array of any\n * of these. If a function is provided, it will be passed no arguments and\n * should return an array of strings or `DocumentNode`s.\n *\n * Note: You can use GraphQL magic comment provide additional syntax\n * highlighting in your editor (with the appropriate editor plugin).\n *\n * ```js\n * const typeDefs = /* GraphQL *\\/ `\n *   type Query {\n *     posts: [Post]\n *     author(id: Int!): Author\n *   }\n * `;\n * ```\n *\n * The `resolvers` object should be a map of type names to nested object, which\n * themselves map the type's fields to their appropriate resolvers.\n * See the [Resolvers](/docs/resolvers) section of the documentation for more details.\n *\n * ```js\n * const resolvers = {\n *   Query: {\n *     posts: (obj, args, ctx, info) => getAllPosts(),\n *     author: (obj, args, ctx, info) => getAuthorById(args.id)\n *   }\n * };\n * ```\n *\n * Once you've defined both the `typeDefs` and `resolvers`, you can create your\n * schema:\n *\n * ```js\n * const schema = makeExecutableSchema({\n *   typeDefs,\n *   resolvers,\n * })\n * ```\n */\nfunction makeExecutableSchema({ typeDefs, resolvers = {}, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, schemaExtensions, ...otherOptions }) {\n    // Validate and clean up arguments\n    if (typeof resolverValidationOptions !== 'object') {\n        throw new Error('Expected `resolverValidationOptions` to be an object');\n    }\n    if (!typeDefs) {\n        throw new Error('Must provide typeDefs');\n    }\n    let schema;\n    if ((0, graphql_1.isSchema)(typeDefs)) {\n        schema = typeDefs;\n    }\n    else if (otherOptions === null || otherOptions === void 0 ? void 0 : otherOptions.commentDescriptions) {\n        const mergedTypeDefs = (0, merge_1.mergeTypeDefs)(typeDefs, {\n            ...otherOptions,\n            commentDescriptions: true,\n        });\n        schema = (0, graphql_1.buildSchema)(mergedTypeDefs, otherOptions);\n    }\n    else {\n        const mergedTypeDefs = (0, merge_1.mergeTypeDefs)(typeDefs, otherOptions);\n        schema = (0, graphql_1.buildASTSchema)(mergedTypeDefs, otherOptions);\n    }\n    // We allow passing in an array of resolver maps, in which case we merge them\n    schema = (0, addResolversToSchema_js_1.addResolversToSchema)({\n        schema,\n        resolvers: (0, merge_1.mergeResolvers)(resolvers),\n        resolverValidationOptions,\n        inheritResolversFromInterfaces,\n        updateResolversInPlace,\n    });\n    if (Object.keys(resolverValidationOptions).length > 0) {\n        (0, assertResolversPresent_js_1.assertResolversPresent)(schema, resolverValidationOptions);\n    }\n    if (schemaExtensions) {\n        schemaExtensions = (0, merge_1.mergeExtensions)((0, utils_1.asArray)(schemaExtensions));\n        (0, merge_1.applyExtensions)(schema, schemaExtensions);\n    }\n    return schema;\n}\nexports.makeExecutableSchema = makeExecutableSchema;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,oBAAoB,GAAG,KAAK;AACpC,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA0CC,GACD,SAAS,qBAAqB,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC,EAAE,4BAA4B,CAAC,CAAC,EAAE,iCAAiC,KAAK,EAAE,yBAAyB,KAAK,EAAE,gBAAgB,EAAE,GAAG,cAAc;IACjM,kCAAkC;IAClC,IAAI,OAAO,8BAA8B,UAAU;QAC/C,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,CAAC,UAAU;QACX,MAAM,IAAI,MAAM;IACpB;IACA,IAAI;IACJ,IAAI,CAAC,GAAG,UAAU,QAAQ,EAAE,WAAW;QACnC,SAAS;IACb,OACK,IAAI,iBAAiB,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,aAAa,mBAAmB,EAAE;QACnG,MAAM,iBAAiB,CAAC,GAAG,QAAQ,aAAa,EAAE,UAAU;YACxD,GAAG,YAAY;YACf,qBAAqB;QACzB;QACA,SAAS,CAAC,GAAG,UAAU,WAAW,EAAE,gBAAgB;IACxD,OACK;QACD,MAAM,iBAAiB,CAAC,GAAG,QAAQ,aAAa,EAAE,UAAU;QAC5D,SAAS,CAAC,GAAG,UAAU,cAAc,EAAE,gBAAgB;IAC3D;IACA,6EAA6E;IAC7E,SAAS,CAAC,GAAG,0BAA0B,oBAAoB,EAAE;QACzD;QACA,WAAW,CAAC,GAAG,QAAQ,cAAc,EAAE;QACvC;QACA;QACA;IACJ;IACA,IAAI,OAAO,IAAI,CAAC,2BAA2B,MAAM,GAAG,GAAG;QACnD,CAAC,GAAG,4BAA4B,sBAAsB,EAAE,QAAQ;IACpE;IACA,IAAI,kBAAkB;QAClB,mBAAmB,CAAC,GAAG,QAAQ,eAAe,EAAE,CAAC,GAAG,QAAQ,OAAO,EAAE;QACrE,CAAC,GAAG,QAAQ,eAAe,EAAE,QAAQ;IACzC;IACA,OAAO;AACX;AACA,QAAQ,oBAAoB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1526, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/schema/cjs/merge-schemas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeSchemas = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst makeExecutableSchema_js_1 = require(\"./makeExecutableSchema.js\");\n/**\n * Synchronously merges multiple schemas, typeDefinitions and/or resolvers into a single schema.\n * @param config Configuration object\n */\nfunction mergeSchemas(config) {\n    const extractedTypeDefs = [];\n    const extractedResolvers = [];\n    const extractedSchemaExtensions = [];\n    if (config.schemas != null) {\n        for (const schema of config.schemas) {\n            extractedTypeDefs.push(schema);\n            extractedResolvers.push((0, utils_1.getResolversFromSchema)(schema));\n            extractedSchemaExtensions.push((0, utils_1.extractExtensionsFromSchema)(schema));\n        }\n    }\n    if (config.typeDefs != null) {\n        extractedTypeDefs.push(config.typeDefs);\n    }\n    if (config.resolvers != null) {\n        const additionalResolvers = (0, utils_1.asArray)(config.resolvers);\n        extractedResolvers.push(...additionalResolvers);\n    }\n    if (config.schemaExtensions != null) {\n        const additionalSchemaExtensions = (0, utils_1.asArray)(config.schemaExtensions);\n        extractedSchemaExtensions.push(...additionalSchemaExtensions);\n    }\n    return (0, makeExecutableSchema_js_1.makeExecutableSchema)({\n        ...config,\n        typeDefs: extractedTypeDefs,\n        resolvers: extractedResolvers,\n        schemaExtensions: extractedSchemaExtensions,\n    });\n}\nexports.mergeSchemas = mergeSchemas;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,YAAY,GAAG,KAAK;AAC5B,MAAM;AACN,MAAM;AACN;;;CAGC,GACD,SAAS,aAAa,MAAM;IACxB,MAAM,oBAAoB,EAAE;IAC5B,MAAM,qBAAqB,EAAE;IAC7B,MAAM,4BAA4B,EAAE;IACpC,IAAI,OAAO,OAAO,IAAI,MAAM;QACxB,KAAK,MAAM,UAAU,OAAO,OAAO,CAAE;YACjC,kBAAkB,IAAI,CAAC;YACvB,mBAAmB,IAAI,CAAC,CAAC,GAAG,QAAQ,sBAAsB,EAAE;YAC5D,0BAA0B,IAAI,CAAC,CAAC,GAAG,QAAQ,2BAA2B,EAAE;QAC5E;IACJ;IACA,IAAI,OAAO,QAAQ,IAAI,MAAM;QACzB,kBAAkB,IAAI,CAAC,OAAO,QAAQ;IAC1C;IACA,IAAI,OAAO,SAAS,IAAI,MAAM;QAC1B,MAAM,sBAAsB,CAAC,GAAG,QAAQ,OAAO,EAAE,OAAO,SAAS;QACjE,mBAAmB,IAAI,IAAI;IAC/B;IACA,IAAI,OAAO,gBAAgB,IAAI,MAAM;QACjC,MAAM,6BAA6B,CAAC,GAAG,QAAQ,OAAO,EAAE,OAAO,gBAAgB;QAC/E,0BAA0B,IAAI,IAAI;IACtC;IACA,OAAO,CAAC,GAAG,0BAA0B,oBAAoB,EAAE;QACvD,GAAG,MAAM;QACT,UAAU;QACV,WAAW;QACX,kBAAkB;IACtB;AACJ;AACA,QAAQ,YAAY,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1571, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/schema/cjs/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractExtensionsFromSchema = exports.extendResolversFromInterfaces = exports.checkForResolveTypeResolver = exports.addResolversToSchema = exports.chainResolvers = exports.assertResolversPresent = void 0;\nconst tslib_1 = require(\"tslib\");\nvar assertResolversPresent_js_1 = require(\"./assertResolversPresent.js\");\nObject.defineProperty(exports, \"assertResolversPresent\", { enumerable: true, get: function () { return assertResolversPresent_js_1.assertResolversPresent; } });\nvar chainResolvers_js_1 = require(\"./chainResolvers.js\");\nObject.defineProperty(exports, \"chainResolvers\", { enumerable: true, get: function () { return chainResolvers_js_1.chainResolvers; } });\nvar addResolversToSchema_js_1 = require(\"./addResolversToSchema.js\");\nObject.defineProperty(exports, \"addResolversToSchema\", { enumerable: true, get: function () { return addResolversToSchema_js_1.addResolversToSchema; } });\nvar checkForResolveTypeResolver_js_1 = require(\"./checkForResolveTypeResolver.js\");\nObject.defineProperty(exports, \"checkForResolveTypeResolver\", { enumerable: true, get: function () { return checkForResolveTypeResolver_js_1.checkForResolveTypeResolver; } });\nvar extendResolversFromInterfaces_js_1 = require(\"./extendResolversFromInterfaces.js\");\nObject.defineProperty(exports, \"extendResolversFromInterfaces\", { enumerable: true, get: function () { return extendResolversFromInterfaces_js_1.extendResolversFromInterfaces; } });\ntslib_1.__exportStar(require(\"./makeExecutableSchema.js\"), exports);\ntslib_1.__exportStar(require(\"./types.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-schemas.js\"), exports);\nvar utils_1 = require(\"@graphql-tools/utils\");\nObject.defineProperty(exports, \"extractExtensionsFromSchema\", { enumerable: true, get: function () { return utils_1.extractExtensionsFromSchema; } });\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,2BAA2B,GAAG,QAAQ,6BAA6B,GAAG,QAAQ,2BAA2B,GAAG,QAAQ,oBAAoB,GAAG,QAAQ,cAAc,GAAG,QAAQ,sBAAsB,GAAG,KAAK;AAClN,MAAM;AACN,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,0BAA0B;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,4BAA4B,sBAAsB;IAAE;AAAE;AAC7J,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,kBAAkB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,oBAAoB,cAAc;IAAE;AAAE;AACrI,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,wBAAwB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,0BAA0B,oBAAoB;IAAE;AAAE;AACvJ,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,+BAA+B;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,iCAAiC,2BAA2B;IAAE;AAAE;AAC5K,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,iCAAiC;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,mCAAmC,6BAA6B;IAAE;AAAE;AAClL,QAAQ,YAAY,gKAAuC;AAC3D,QAAQ,YAAY,iJAAwB;AAC5C,QAAQ,YAAY,yJAAgC;AACpD,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,+BAA+B;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,QAAQ,2BAA2B;IAAE;AAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1627, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/schema/cjs/assertResolversPresent.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertResolversPresent = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction assertResolversPresent(schema, resolverValidationOptions = {}) {\n    const { requireResolversForArgs, requireResolversForNonScalar, requireResolversForAllFields } = resolverValidationOptions;\n    if (requireResolversForAllFields && (requireResolversForArgs || requireResolversForNonScalar)) {\n        throw new TypeError('requireResolversForAllFields takes precedence over the more specific assertions. ' +\n            'Please configure either requireResolversForAllFields or requireResolversForArgs / ' +\n            'requireResolversForNonScalar, but not a combination of them.');\n    }\n    (0, utils_1.forEachField)(schema, (field, typeName, fieldName) => {\n        // requires a resolver for *every* field.\n        if (requireResolversForAllFields) {\n            expectResolver('requireResolversForAllFields', requireResolversForAllFields, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that has arguments\n        if (requireResolversForArgs && field.args.length > 0) {\n            expectResolver('requireResolversForArgs', requireResolversForArgs, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that returns a non-scalar type\n        if (requireResolversForNonScalar !== 'ignore' && !(0, graphql_1.isScalarType)((0, graphql_1.getNamedType)(field.type))) {\n            expectResolver('requireResolversForNonScalar', requireResolversForNonScalar, field, typeName, fieldName);\n        }\n    });\n}\nexports.assertResolversPresent = assertResolversPresent;\nfunction expectResolver(validator, behavior, field, typeName, fieldName) {\n    if (!field.resolve) {\n        const message = `Resolver missing for \"${typeName}.${fieldName}\".\nTo disable this validator, use:\n  resolverValidationOptions: {\n    ${validator}: 'ignore'\n  }`;\n        if (behavior === 'error') {\n            throw new Error(message);\n        }\n        if (behavior === 'warn') {\n            console.warn(message);\n        }\n        return;\n    }\n    if (typeof field.resolve !== 'function') {\n        throw new Error(`Resolver \"${typeName}.${fieldName}\" must be a function`);\n    }\n}\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,sBAAsB,GAAG,KAAK;AACtC,MAAM;AACN,MAAM;AACN,SAAS,uBAAuB,MAAM,EAAE,4BAA4B,CAAC,CAAC;IAClE,MAAM,EAAE,uBAAuB,EAAE,4BAA4B,EAAE,4BAA4B,EAAE,GAAG;IAChG,IAAI,gCAAgC,CAAC,2BAA2B,4BAA4B,GAAG;QAC3F,MAAM,IAAI,UAAU,sFAChB,uFACA;IACR;IACA,CAAC,GAAG,QAAQ,YAAY,EAAE,QAAQ,CAAC,OAAO,UAAU;QAChD,yCAAyC;QACzC,IAAI,8BAA8B;YAC9B,eAAe,gCAAgC,8BAA8B,OAAO,UAAU;QAClG;QACA,wDAAwD;QACxD,IAAI,2BAA2B,MAAM,IAAI,CAAC,MAAM,GAAG,GAAG;YAClD,eAAe,2BAA2B,yBAAyB,OAAO,UAAU;QACxF;QACA,oEAAoE;QACpE,IAAI,iCAAiC,YAAY,CAAC,CAAC,GAAG,UAAU,YAAY,EAAE,CAAC,GAAG,UAAU,YAAY,EAAE,MAAM,IAAI,IAAI;YACpH,eAAe,gCAAgC,8BAA8B,OAAO,UAAU;QAClG;IACJ;AACJ;AACA,QAAQ,sBAAsB,GAAG;AACjC,SAAS,eAAe,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS;IACnE,IAAI,CAAC,MAAM,OAAO,EAAE;QAChB,MAAM,UAAU,CAAC,sBAAsB,EAAE,SAAS,CAAC,EAAE,UAAU;;;IAGnE,EAAE,UAAU;GACb,CAAC;QACI,IAAI,aAAa,SAAS;YACtB,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,aAAa,QAAQ;YACrB,QAAQ,IAAI,CAAC;QACjB;QACA;IACJ;IACA,IAAI,OAAO,MAAM,OAAO,KAAK,YAAY;QACrC,MAAM,IAAI,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,UAAU,oBAAoB,CAAC;IAC5E;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1679, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/schema/cjs/chainResolvers.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainResolvers = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction chainResolvers(resolvers) {\n    return (root, args, ctx, info) => resolvers.reduce((prev, curResolver) => {\n        if (curResolver != null) {\n            return curResolver(prev, args, ctx, info);\n        }\n        return (0, graphql_1.defaultFieldResolver)(prev, args, ctx, info);\n    }, root);\n}\nexports.chainResolvers = chainResolvers;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN,SAAS,eAAe,SAAS;IAC7B,OAAO,CAAC,MAAM,MAAM,KAAK,OAAS,UAAU,MAAM,CAAC,CAAC,MAAM;YACtD,IAAI,eAAe,MAAM;gBACrB,OAAO,YAAY,MAAM,MAAM,KAAK;YACxC;YACA,OAAO,CAAC,GAAG,UAAU,oBAAoB,EAAE,MAAM,MAAM,KAAK;QAChE,GAAG;AACP;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1699, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/schema/cjs/checkForResolveTypeResolver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkForResolveTypeResolver = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\n// If we have any union or interface types throw if no there is no resolveType resolver\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    (0, utils_1.mapSchema)(schema, {\n        [utils_1.MapperKind.ABSTRACT_TYPE]: type => {\n            if (!type.resolveType) {\n                const message = `Type \"${type.name}\" is missing a \"__resolveType\" resolver. Pass 'ignore' into ` +\n                    '\"resolverValidationOptions.requireResolversForResolveType\" to disable this error.';\n                if (requireResolversForResolveType === 'error') {\n                    throw new Error(message);\n                }\n                if (requireResolversForResolveType === 'warn') {\n                    console.warn(message);\n                }\n            }\n            return undefined;\n        },\n    });\n}\nexports.checkForResolveTypeResolver = checkForResolveTypeResolver;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,2BAA2B,GAAG,KAAK;AAC3C,MAAM;AACN,uFAAuF;AACvF,SAAS,4BAA4B,MAAM,EAAE,8BAA8B;IACvE,CAAC,GAAG,QAAQ,SAAS,EAAE,QAAQ;QAC3B,CAAC,QAAQ,UAAU,CAAC,aAAa,CAAC,EAAE,CAAA;YAChC,IAAI,CAAC,KAAK,WAAW,EAAE;gBACnB,MAAM,UAAU,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,4DAA4D,CAAC,GAC5F;gBACJ,IAAI,mCAAmC,SAAS;oBAC5C,MAAM,IAAI,MAAM;gBACpB;gBACA,IAAI,mCAAmC,QAAQ;oBAC3C,QAAQ,IAAI,CAAC;gBACjB;YACJ;YACA,OAAO;QACX;IACJ;AACJ;AACA,QAAQ,2BAA2B,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1728, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/schema/cjs/extendResolversFromInterfaces.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendResolversFromInterfaces = void 0;\nfunction extendResolversFromInterfaces(schema, resolvers) {\n    const extendedResolvers = {};\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ('getInterfaces' in type) {\n            extendedResolvers[typeName] = {};\n            for (const iFace of type.getInterfaces()) {\n                if (resolvers[iFace.name]) {\n                    for (const fieldName in resolvers[iFace.name]) {\n                        if (fieldName === '__isTypeOf' || !fieldName.startsWith('__')) {\n                            extendedResolvers[typeName][fieldName] = resolvers[iFace.name][fieldName];\n                        }\n                    }\n                }\n            }\n            const typeResolvers = resolvers[typeName];\n            extendedResolvers[typeName] = {\n                ...extendedResolvers[typeName],\n                ...typeResolvers,\n            };\n        }\n        else {\n            const typeResolvers = resolvers[typeName];\n            if (typeResolvers != null) {\n                extendedResolvers[typeName] = typeResolvers;\n            }\n        }\n    }\n    return extendedResolvers;\n}\nexports.extendResolversFromInterfaces = extendResolversFromInterfaces;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,6BAA6B,GAAG,KAAK;AAC7C,SAAS,8BAA8B,MAAM,EAAE,SAAS;IACpD,MAAM,oBAAoB,CAAC;IAC3B,MAAM,UAAU,OAAO,UAAU;IACjC,IAAK,MAAM,YAAY,QAAS;QAC5B,MAAM,OAAO,OAAO,CAAC,SAAS;QAC9B,IAAI,mBAAmB,MAAM;YACzB,iBAAiB,CAAC,SAAS,GAAG,CAAC;YAC/B,KAAK,MAAM,SAAS,KAAK,aAAa,GAAI;gBACtC,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;oBACvB,IAAK,MAAM,aAAa,SAAS,CAAC,MAAM,IAAI,CAAC,CAAE;wBAC3C,IAAI,cAAc,gBAAgB,CAAC,UAAU,UAAU,CAAC,OAAO;4BAC3D,iBAAiB,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,UAAU;wBAC7E;oBACJ;gBACJ;YACJ;YACA,MAAM,gBAAgB,SAAS,CAAC,SAAS;YACzC,iBAAiB,CAAC,SAAS,GAAG;gBAC1B,GAAG,iBAAiB,CAAC,SAAS;gBAC9B,GAAG,aAAa;YACpB;QACJ,OACK;YACD,MAAM,gBAAgB,SAAS,CAAC,SAAS;YACzC,IAAI,iBAAiB,MAAM;gBACvB,iBAAiB,CAAC,SAAS,GAAG;YAClC;QACJ;IACJ;IACA,OAAO;AACX;AACA,QAAQ,6BAA6B,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1769, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/schema/cjs/addResolversToSchema.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addResolversToSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst checkForResolveTypeResolver_js_1 = require(\"./checkForResolveTypeResolver.js\");\nconst extendResolversFromInterfaces_js_1 = require(\"./extendResolversFromInterfaces.js\");\nfunction addResolversToSchema(schemaOrOptions, legacyInputResolvers, legacyInputValidationOptions) {\n    const options = (0, graphql_1.isSchema)(schemaOrOptions)\n        ? {\n            schema: schemaOrOptions,\n            resolvers: legacyInputResolvers !== null && legacyInputResolvers !== void 0 ? legacyInputResolvers : {},\n            resolverValidationOptions: legacyInputValidationOptions,\n        }\n        : schemaOrOptions;\n    let { schema, resolvers: inputResolvers, defaultFieldResolver, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, } = options;\n    const { requireResolversToMatchSchema = 'error', requireResolversForResolveType } = resolverValidationOptions;\n    const resolvers = inheritResolversFromInterfaces\n        ? (0, extendResolversFromInterfaces_js_1.extendResolversFromInterfaces)(schema, inputResolvers)\n        : inputResolvers;\n    for (const typeName in resolvers) {\n        const resolverValue = resolvers[typeName];\n        const resolverType = typeof resolverValue;\n        if (resolverType !== 'object') {\n            throw new Error(`\"${typeName}\" defined in resolvers, but has invalid value \"${resolverValue}\". The resolver's value must be of type object.`);\n        }\n        const type = schema.getType(typeName);\n        if (type == null) {\n            if (requireResolversToMatchSchema === 'ignore') {\n                continue;\n            }\n            throw new Error(`\"${typeName}\" defined in resolvers, but not in schema`);\n        }\n        else if ((0, graphql_1.isSpecifiedScalarType)(type)) {\n            // allow -- without recommending -- overriding of specified scalar types\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            const values = type.getValues();\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    !values.some(value => value.name === fieldName) &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but not present within ${type.name}`);\n                }\n            }\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but ${type.name} is not an object or interface type`);\n                }\n            }\n        }\n        else if ((0, graphql_1.isObjectType)(type) || (0, graphql_1.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__')) {\n                    const fields = type.getFields();\n                    const field = fields[fieldName];\n                    if (field == null) {\n                        // Field present in resolver but not in schema\n                        if (requireResolversToMatchSchema && requireResolversToMatchSchema !== 'ignore') {\n                            throw new Error(`${typeName}.${fieldName} defined in resolvers, but not in schema`);\n                        }\n                    }\n                    else {\n                        // Field present in both the resolver and schema\n                        const fieldResolve = resolverValue[fieldName];\n                        if (typeof fieldResolve !== 'function' && typeof fieldResolve !== 'object') {\n                            throw new Error(`Resolver ${typeName}.${fieldName} must be object or function`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    schema = updateResolversInPlace\n        ? addResolversToExistingSchema(schema, resolvers, defaultFieldResolver)\n        : createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver);\n    if (requireResolversForResolveType && requireResolversForResolveType !== 'ignore') {\n        (0, checkForResolveTypeResolver_js_1.checkForResolveTypeResolver)(schema, requireResolversForResolveType);\n    }\n    return schema;\n}\nexports.addResolversToSchema = addResolversToSchema;\nfunction addResolversToExistingSchema(schema, resolvers, defaultFieldResolver) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    const typeMap = schema.getTypeMap();\n    for (const typeName in resolvers) {\n        const type = schema.getType(typeName);\n        const resolverValue = resolvers[typeName];\n        if ((0, graphql_1.isScalarType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && type.astNode != null) {\n                    type.astNode = {\n                        ...type.astNode,\n                        description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : type.astNode.description,\n                        directives: ((_c = type.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && type.extensionASTNodes != null) {\n                    type.extensionASTNodes = type.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    config[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && config.astNode != null) {\n                    config.astNode = {\n                        ...config.astNode,\n                        description: (_h = (_g = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _g === void 0 ? void 0 : _g.description) !== null && _h !== void 0 ? _h : config.astNode.description,\n                        directives: ((_j = config.astNode.directives) !== null && _j !== void 0 ? _j : []).concat((_l = (_k = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _k === void 0 ? void 0 : _k.directives) !== null && _l !== void 0 ? _l : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                    config.extensionASTNodes = config.extensionASTNodes.concat((_m = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _m !== void 0 ? _m : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else if (enumValueConfigMap[fieldName]) {\n                    enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                }\n            }\n            typeMap[typeName] = new graphql_1.GraphQLEnumType(config);\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0, graphql_1.isObjectType)(type) || (0, graphql_1.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    // this is for isTypeOf and resolveType and all the other stuff.\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                    continue;\n                }\n                const fields = type.getFields();\n                const field = fields[fieldName];\n                if (field != null) {\n                    const fieldResolve = resolverValue[fieldName];\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        field.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(field, fieldResolve);\n                    }\n                }\n            }\n        }\n    }\n    // serialize all default values prior to healing fields with new scalar/enum types.\n    (0, utils_1.forEachDefaultValue)(schema, utils_1.serializeInputValue);\n    // schema may have new scalar/enum types that require healing\n    (0, utils_1.healSchema)(schema);\n    // reparse all default values with new parsing functions.\n    (0, utils_1.forEachDefaultValue)(schema, utils_1.parseInputValue);\n    if (defaultFieldResolver != null) {\n        (0, utils_1.forEachField)(schema, field => {\n            if (!field.resolve) {\n                field.resolve = defaultFieldResolver;\n            }\n        });\n    }\n    return schema;\n}\nfunction createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver) {\n    schema = (0, utils_1.mapSchema)(schema, {\n        [utils_1.MapperKind.SCALAR_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f;\n            const config = type.toConfig();\n            const resolverValue = resolvers[type.name];\n            if (!(0, graphql_1.isSpecifiedScalarType)(type) && resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : config.astNode.description,\n                            directives: ((_c = config.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else {\n                        config[fieldName] = resolverValue[fieldName];\n                    }\n                }\n                return new graphql_1.GraphQLScalarType(config);\n            }\n        },\n        [utils_1.MapperKind.ENUM_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f;\n            const resolverValue = resolvers[type.name];\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            if (resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : config.astNode.description,\n                            directives: ((_c = config.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else if (enumValueConfigMap[fieldName]) {\n                        enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                    }\n                }\n                return new graphql_1.GraphQLEnumType(config);\n            }\n        },\n        [utils_1.MapperKind.UNION_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql_1.GraphQLUnionType(config);\n            }\n        },\n        [utils_1.MapperKind.OBJECT_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__isTypeOf']) {\n                    config.isTypeOf = resolverValue['__isTypeOf'];\n                }\n                return new graphql_1.GraphQLObjectType(config);\n            }\n        },\n        [utils_1.MapperKind.INTERFACE_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql_1.GraphQLInterfaceType(config);\n            }\n        },\n        [utils_1.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n            const resolverValue = resolvers[typeName];\n            if (resolverValue != null) {\n                const fieldResolve = resolverValue[fieldName];\n                if (fieldResolve != null) {\n                    const newFieldConfig = { ...fieldConfig };\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        newFieldConfig.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(newFieldConfig, fieldResolve);\n                    }\n                    return newFieldConfig;\n                }\n            }\n        },\n    });\n    if (defaultFieldResolver != null) {\n        schema = (0, utils_1.mapSchema)(schema, {\n            [utils_1.MapperKind.OBJECT_FIELD]: fieldConfig => ({\n                ...fieldConfig,\n                resolve: fieldConfig.resolve != null ? fieldConfig.resolve : defaultFieldResolver,\n            }),\n        });\n    }\n    return schema;\n}\nfunction setFieldProperties(field, propertiesObj) {\n    for (const propertyName in propertiesObj) {\n        field[propertyName] = propertiesObj[propertyName];\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2058, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/schema/cjs/makeExecutableSchema.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeExecutableSchema = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst addResolversToSchema_js_1 = require(\"./addResolversToSchema.js\");\nconst assertResolversPresent_js_1 = require(\"./assertResolversPresent.js\");\nconst merge_1 = require(\"@graphql-tools/merge\");\n/**\n * Builds a schema from the provided type definitions and resolvers.\n *\n * The type definitions are written using Schema Definition Language (SDL). They\n * can be provided as a string, a `DocumentNode`, a function, or an array of any\n * of these. If a function is provided, it will be passed no arguments and\n * should return an array of strings or `DocumentNode`s.\n *\n * Note: You can use `graphql-tag` to not only parse a string into a\n * `DocumentNode` but also to provide additional syntax highlighting in your\n * editor (with the appropriate editor plugin).\n *\n * ```js\n * const typeDefs = gql`\n *   type Query {\n *     posts: [Post]\n *     author(id: Int!): Author\n *   }\n * `;\n * ```\n *\n * The `resolvers` object should be a map of type names to nested object, which\n * themselves map the type's fields to their appropriate resolvers.\n * See the [Resolvers](/docs/resolvers) section of the documentation for more details.\n *\n * ```js\n * const resolvers = {\n *   Query: {\n *     posts: (obj, args, ctx, info) => getAllPosts(),\n *     author: (obj, args, ctx, info) => getAuthorById(args.id)\n *   }\n * };\n * ```\n *\n * Once you've defined both the `typeDefs` and `resolvers`, you can create your\n * schema:\n *\n * ```js\n * const schema = makeExecutableSchema({\n *   typeDefs,\n *   resolvers,\n * })\n * ```\n */\nfunction makeExecutableSchema({ typeDefs, resolvers = {}, resolverValidationOptions = {}, parseOptions = {}, inheritResolversFromInterfaces = false, pruningOptions, updateResolversInPlace = false, schemaExtensions, }) {\n    // Validate and clean up arguments\n    if (typeof resolverValidationOptions !== 'object') {\n        throw new Error('Expected `resolverValidationOptions` to be an object');\n    }\n    if (!typeDefs) {\n        throw new Error('Must provide typeDefs');\n    }\n    let schema;\n    if ((0, graphql_1.isSchema)(typeDefs)) {\n        schema = typeDefs;\n    }\n    else if (parseOptions === null || parseOptions === void 0 ? void 0 : parseOptions.commentDescriptions) {\n        const mergedTypeDefs = (0, merge_1.mergeTypeDefs)(typeDefs, {\n            ...parseOptions,\n            commentDescriptions: true,\n        });\n        schema = (0, graphql_1.buildSchema)(mergedTypeDefs, parseOptions);\n    }\n    else {\n        const mergedTypeDefs = (0, merge_1.mergeTypeDefs)(typeDefs, parseOptions);\n        schema = (0, graphql_1.buildASTSchema)(mergedTypeDefs, parseOptions);\n    }\n    if (pruningOptions) {\n        schema = (0, utils_1.pruneSchema)(schema);\n    }\n    // We allow passing in an array of resolver maps, in which case we merge them\n    schema = (0, addResolversToSchema_js_1.addResolversToSchema)({\n        schema,\n        resolvers: (0, merge_1.mergeResolvers)(resolvers),\n        resolverValidationOptions,\n        inheritResolversFromInterfaces,\n        updateResolversInPlace,\n    });\n    if (Object.keys(resolverValidationOptions).length > 0) {\n        (0, assertResolversPresent_js_1.assertResolversPresent)(schema, resolverValidationOptions);\n    }\n    if (schemaExtensions) {\n        schemaExtensions = (0, merge_1.mergeExtensions)((0, utils_1.asArray)(schemaExtensions));\n        (0, merge_1.applyExtensions)(schema, schemaExtensions);\n    }\n    return schema;\n}\nexports.makeExecutableSchema = makeExecutableSchema;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,oBAAoB,GAAG,KAAK;AACpC,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2CC,GACD,SAAS,qBAAqB,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC,EAAE,4BAA4B,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,iCAAiC,KAAK,EAAE,cAAc,EAAE,yBAAyB,KAAK,EAAE,gBAAgB,EAAG;IACpN,kCAAkC;IAClC,IAAI,OAAO,8BAA8B,UAAU;QAC/C,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,CAAC,UAAU;QACX,MAAM,IAAI,MAAM;IACpB;IACA,IAAI;IACJ,IAAI,CAAC,GAAG,UAAU,QAAQ,EAAE,WAAW;QACnC,SAAS;IACb,OACK,IAAI,iBAAiB,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,aAAa,mBAAmB,EAAE;QACnG,MAAM,iBAAiB,CAAC,GAAG,QAAQ,aAAa,EAAE,UAAU;YACxD,GAAG,YAAY;YACf,qBAAqB;QACzB;QACA,SAAS,CAAC,GAAG,UAAU,WAAW,EAAE,gBAAgB;IACxD,OACK;QACD,MAAM,iBAAiB,CAAC,GAAG,QAAQ,aAAa,EAAE,UAAU;QAC5D,SAAS,CAAC,GAAG,UAAU,cAAc,EAAE,gBAAgB;IAC3D;IACA,IAAI,gBAAgB;QAChB,SAAS,CAAC,GAAG,QAAQ,WAAW,EAAE;IACtC;IACA,6EAA6E;IAC7E,SAAS,CAAC,GAAG,0BAA0B,oBAAoB,EAAE;QACzD;QACA,WAAW,CAAC,GAAG,QAAQ,cAAc,EAAE;QACvC;QACA;QACA;IACJ;IACA,IAAI,OAAO,IAAI,CAAC,2BAA2B,MAAM,GAAG,GAAG;QACnD,CAAC,GAAG,4BAA4B,sBAAsB,EAAE,QAAQ;IACpE;IACA,IAAI,kBAAkB;QAClB,mBAAmB,CAAC,GAAG,QAAQ,eAAe,EAAE,CAAC,GAAG,QAAQ,OAAO,EAAE;QACrE,CAAC,GAAG,QAAQ,eAAe,EAAE,QAAQ;IACzC;IACA,OAAO;AACX;AACA,QAAQ,oBAAoB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2158, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/schema/cjs/types.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2167, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/schema/cjs/merge-schemas.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeSchemas = void 0;\nconst merge_1 = require(\"@graphql-tools/merge\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst makeExecutableSchema_js_1 = require(\"./makeExecutableSchema.js\");\n/**\n * Synchronously merges multiple schemas, typeDefinitions and/or resolvers into a single schema.\n * @param config Configuration object\n */\nfunction mergeSchemas(config) {\n    const extractedTypeDefs = (0, utils_1.asArray)(config.typeDefs || []);\n    const extractedResolvers = (0, utils_1.asArray)(config.resolvers || []);\n    const extractedSchemaExtensions = (0, utils_1.asArray)(config.schemaExtensions || []);\n    const schemas = config.schemas || [];\n    for (const schema of schemas) {\n        extractedTypeDefs.push(schema);\n        extractedResolvers.push((0, utils_1.getResolversFromSchema)(schema, true));\n        extractedSchemaExtensions.push((0, merge_1.extractExtensionsFromSchema)(schema));\n    }\n    return (0, makeExecutableSchema_js_1.makeExecutableSchema)({\n        parseOptions: config,\n        ...config,\n        typeDefs: extractedTypeDefs,\n        resolvers: extractedResolvers,\n        schemaExtensions: extractedSchemaExtensions,\n    });\n}\nexports.mergeSchemas = mergeSchemas;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,YAAY,GAAG,KAAK;AAC5B,MAAM;AACN,MAAM;AACN,MAAM;AACN;;;CAGC,GACD,SAAS,aAAa,MAAM;IACxB,MAAM,oBAAoB,CAAC,GAAG,QAAQ,OAAO,EAAE,OAAO,QAAQ,IAAI,EAAE;IACpE,MAAM,qBAAqB,CAAC,GAAG,QAAQ,OAAO,EAAE,OAAO,SAAS,IAAI,EAAE;IACtE,MAAM,4BAA4B,CAAC,GAAG,QAAQ,OAAO,EAAE,OAAO,gBAAgB,IAAI,EAAE;IACpF,MAAM,UAAU,OAAO,OAAO,IAAI,EAAE;IACpC,KAAK,MAAM,UAAU,QAAS;QAC1B,kBAAkB,IAAI,CAAC;QACvB,mBAAmB,IAAI,CAAC,CAAC,GAAG,QAAQ,sBAAsB,EAAE,QAAQ;QACpE,0BAA0B,IAAI,CAAC,CAAC,GAAG,QAAQ,2BAA2B,EAAE;IAC5E;IACA,OAAO,CAAC,GAAG,0BAA0B,oBAAoB,EAAE;QACvD,cAAc;QACd,GAAG,MAAM;QACT,UAAU;QACV,WAAW;QACX,kBAAkB;IACtB;AACJ;AACA,QAAQ,YAAY,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2202, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/schema/cjs/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendResolversFromInterfaces = exports.checkForResolveTypeResolver = exports.addResolversToSchema = exports.chainResolvers = exports.assertResolversPresent = void 0;\nconst tslib_1 = require(\"tslib\");\nvar assertResolversPresent_js_1 = require(\"./assertResolversPresent.js\");\nObject.defineProperty(exports, \"assertResolversPresent\", { enumerable: true, get: function () { return assertResolversPresent_js_1.assertResolversPresent; } });\nvar chainResolvers_js_1 = require(\"./chainResolvers.js\");\nObject.defineProperty(exports, \"chainResolvers\", { enumerable: true, get: function () { return chainResolvers_js_1.chainResolvers; } });\nvar addResolversToSchema_js_1 = require(\"./addResolversToSchema.js\");\nObject.defineProperty(exports, \"addResolversToSchema\", { enumerable: true, get: function () { return addResolversToSchema_js_1.addResolversToSchema; } });\nvar checkForResolveTypeResolver_js_1 = require(\"./checkForResolveTypeResolver.js\");\nObject.defineProperty(exports, \"checkForResolveTypeResolver\", { enumerable: true, get: function () { return checkForResolveTypeResolver_js_1.checkForResolveTypeResolver; } });\nvar extendResolversFromInterfaces_js_1 = require(\"./extendResolversFromInterfaces.js\");\nObject.defineProperty(exports, \"extendResolversFromInterfaces\", { enumerable: true, get: function () { return extendResolversFromInterfaces_js_1.extendResolversFromInterfaces; } });\ntslib_1.__exportStar(require(\"./makeExecutableSchema.js\"), exports);\ntslib_1.__exportStar(require(\"./types.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-schemas.js\"), exports);\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,6BAA6B,GAAG,QAAQ,2BAA2B,GAAG,QAAQ,oBAAoB,GAAG,QAAQ,cAAc,GAAG,QAAQ,sBAAsB,GAAG,KAAK;AAC5K,MAAM;AACN,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,0BAA0B;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,4BAA4B,sBAAsB;IAAE;AAAE;AAC7J,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,kBAAkB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,oBAAoB,cAAc;IAAE;AAAE;AACrI,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,wBAAwB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,0BAA0B,oBAAoB;IAAE;AAAE;AACvJ,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,+BAA+B;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,iCAAiC,2BAA2B;IAAE;AAAE;AAC5K,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,iCAAiC;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,mCAAmC,6BAA6B;IAAE;AAAE;AAClL,QAAQ,YAAY,+HAAuC;AAC3D,QAAQ,YAAY,gHAAwB;AAC5C,QAAQ,YAAY,wHAAgC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2251, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/merge-resolvers.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeResolvers = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\n/**\n * Deep merges multiple resolver definition objects into a single definition.\n * @param resolversDefinitions Resolver definitions to be merged\n * @param options Additional options\n *\n * ```js\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const clientResolver = require('./clientResolver');\n * const productResolver = require('./productResolver');\n *\n * const resolvers = mergeResolvers([\n *  clientResolver,\n *  productResolver,\n * ]);\n * ```\n *\n * If you don't want to manually create the array of resolver objects, you can\n * also use this function along with loadFiles:\n *\n * ```js\n * const path = require('path');\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const { loadFilesSync } = require('@graphql-tools/load-files');\n *\n * const resolversArray = loadFilesSync(path.join(__dirname, './resolvers'));\n *\n * const resolvers = mergeResolvers(resolversArray)\n * ```\n */\nfunction mergeResolvers(resolversDefinitions, options) {\n    if (!resolversDefinitions || (Array.isArray(resolversDefinitions) && resolversDefinitions.length === 0)) {\n        return {};\n    }\n    if (!Array.isArray(resolversDefinitions)) {\n        return resolversDefinitions;\n    }\n    if (resolversDefinitions.length === 1) {\n        return resolversDefinitions[0] || {};\n    }\n    const resolvers = new Array();\n    for (let resolversDefinition of resolversDefinitions) {\n        if (Array.isArray(resolversDefinition)) {\n            resolversDefinition = mergeResolvers(resolversDefinition);\n        }\n        if (typeof resolversDefinition === 'object' && resolversDefinition) {\n            resolvers.push(resolversDefinition);\n        }\n    }\n    const result = (0, utils_1.mergeDeep)(resolvers, true);\n    if (options === null || options === void 0 ? void 0 : options.exclusions) {\n        for (const exclusion of options.exclusions) {\n            const [typeName, fieldName] = exclusion.split('.');\n            if (!fieldName || fieldName === '*') {\n                delete result[typeName];\n            }\n            else if (result[typeName]) {\n                delete result[typeName][fieldName];\n            }\n        }\n    }\n    return result;\n}\nexports.mergeResolvers = mergeResolvers;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4BC,GACD,SAAS,eAAe,oBAAoB,EAAE,OAAO;IACjD,IAAI,CAAC,wBAAyB,MAAM,OAAO,CAAC,yBAAyB,qBAAqB,MAAM,KAAK,GAAI;QACrG,OAAO,CAAC;IACZ;IACA,IAAI,CAAC,MAAM,OAAO,CAAC,uBAAuB;QACtC,OAAO;IACX;IACA,IAAI,qBAAqB,MAAM,KAAK,GAAG;QACnC,OAAO,oBAAoB,CAAC,EAAE,IAAI,CAAC;IACvC;IACA,MAAM,YAAY,IAAI;IACtB,KAAK,IAAI,uBAAuB,qBAAsB;QAClD,IAAI,MAAM,OAAO,CAAC,sBAAsB;YACpC,sBAAsB,eAAe;QACzC;QACA,IAAI,OAAO,wBAAwB,YAAY,qBAAqB;YAChE,UAAU,IAAI,CAAC;QACnB;IACJ;IACA,MAAM,SAAS,CAAC,GAAG,QAAQ,SAAS,EAAE,WAAW;IACjD,IAAI,YAAY,QAAQ,YAAY,KAAK,IAAI,KAAK,IAAI,QAAQ,UAAU,EAAE;QACtE,KAAK,MAAM,aAAa,QAAQ,UAAU,CAAE;YACxC,MAAM,CAAC,UAAU,UAAU,GAAG,UAAU,KAAK,CAAC;YAC9C,IAAI,CAAC,aAAa,cAAc,KAAK;gBACjC,OAAO,MAAM,CAAC,SAAS;YAC3B,OACK,IAAI,MAAM,CAAC,SAAS,EAAE;gBACvB,OAAO,MAAM,CAAC,SAAS,CAAC,UAAU;YACtC;QACJ;IACJ;IACA,OAAO;AACX;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2323, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/arguments.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeArguments = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction mergeArguments(args1, args2, config) {\n    const result = deduplicateArguments([...args2, ...args1].filter(utils_1.isSome), config);\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeArguments = mergeArguments;\nfunction deduplicateArguments(args, config) {\n    return args.reduce((acc, current) => {\n        const dupIndex = acc.findIndex(arg => arg.name.value === current.name.value);\n        if (dupIndex === -1) {\n            return acc.concat([current]);\n        }\n        else if (!(config === null || config === void 0 ? void 0 : config.reverseArguments)) {\n            acc[dupIndex] = current;\n        }\n        return acc;\n    }, []);\n}\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN,SAAS,eAAe,KAAK,EAAE,KAAK,EAAE,MAAM;IACxC,MAAM,SAAS,qBAAqB;WAAI;WAAU;KAAM,CAAC,MAAM,CAAC,QAAQ,MAAM,GAAG;IACjF,IAAI,UAAU,OAAO,IAAI,EAAE;QACvB,OAAO,IAAI,CAAC,QAAQ,YAAY;IACpC;IACA,OAAO;AACX;AACA,QAAQ,cAAc,GAAG;AACzB,SAAS,qBAAqB,IAAI,EAAE,MAAM;IACtC,OAAO,KAAK,MAAM,CAAC,CAAC,KAAK;QACrB,MAAM,WAAW,IAAI,SAAS,CAAC,CAAA,MAAO,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK;QAC3E,IAAI,aAAa,CAAC,GAAG;YACjB,OAAO,IAAI,MAAM,CAAC;gBAAC;aAAQ;QAC/B,OACK,IAAI,CAAC,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,gBAAgB,GAAG;YACjF,GAAG,CAAC,SAAS,GAAG;QACpB;QACA,OAAO;IACX,GAAG,EAAE;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2358, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/directives.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeDirective = exports.mergeDirectives = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction directiveAlreadyExists(directivesArr, otherDirective) {\n    return !!directivesArr.find(directive => directive.name.value === otherDirective.name.value);\n}\nfunction isRepeatableDirective(directive, directives) {\n    var _a;\n    return !!((_a = directives === null || directives === void 0 ? void 0 : directives[directive.name.value]) === null || _a === void 0 ? void 0 : _a.repeatable);\n}\nfunction nameAlreadyExists(name, namesArr) {\n    return namesArr.some(({ value }) => value === name.value);\n}\nfunction mergeArguments(a1, a2) {\n    const result = [...a2];\n    for (const argument of a1) {\n        const existingIndex = result.findIndex(a => a.name.value === argument.name.value);\n        if (existingIndex > -1) {\n            const existingArg = result[existingIndex];\n            if (existingArg.value.kind === 'ListValue') {\n                const source = existingArg.value.values;\n                const target = argument.value.values;\n                // merge values of two lists\n                existingArg.value.values = deduplicateLists(source, target, (targetVal, source) => {\n                    const value = targetVal.value;\n                    return !value || !source.some((sourceVal) => sourceVal.value === value);\n                });\n            }\n            else {\n                existingArg.value = argument.value;\n            }\n        }\n        else {\n            result.push(argument);\n        }\n    }\n    return result;\n}\nfunction deduplicateDirectives(directives, definitions) {\n    return directives\n        .map((directive, i, all) => {\n        const firstAt = all.findIndex(d => d.name.value === directive.name.value);\n        if (firstAt !== i && !isRepeatableDirective(directive, definitions)) {\n            const dup = all[firstAt];\n            directive.arguments = mergeArguments(directive.arguments, dup.arguments);\n            return null;\n        }\n        return directive;\n    })\n        .filter(utils_1.isSome);\n}\nfunction mergeDirectives(d1 = [], d2 = [], config, directives) {\n    const reverseOrder = config && config.reverseDirectives;\n    const asNext = reverseOrder ? d1 : d2;\n    const asFirst = reverseOrder ? d2 : d1;\n    const result = deduplicateDirectives([...asNext], directives);\n    for (const directive of asFirst) {\n        if (directiveAlreadyExists(result, directive) && !isRepeatableDirective(directive, directives)) {\n            const existingDirectiveIndex = result.findIndex(d => d.name.value === directive.name.value);\n            const existingDirective = result[existingDirectiveIndex];\n            result[existingDirectiveIndex].arguments = mergeArguments(directive.arguments || [], existingDirective.arguments || []);\n        }\n        else {\n            result.push(directive);\n        }\n    }\n    return result;\n}\nexports.mergeDirectives = mergeDirectives;\nfunction validateInputs(node, existingNode) {\n    const printedNode = (0, graphql_1.print)({\n        ...node,\n        description: undefined,\n    });\n    const printedExistingNode = (0, graphql_1.print)({\n        ...existingNode,\n        description: undefined,\n    });\n    // eslint-disable-next-line\n    const leaveInputs = new RegExp('(directive @w*d*)|( on .*$)', 'g');\n    const sameArguments = printedNode.replace(leaveInputs, '') === printedExistingNode.replace(leaveInputs, '');\n    if (!sameArguments) {\n        throw new Error(`Unable to merge GraphQL directive \"${node.name.value}\". \\nExisting directive:  \\n\\t${printedExistingNode} \\nReceived directive: \\n\\t${printedNode}`);\n    }\n}\nfunction mergeDirective(node, existingNode) {\n    if (existingNode) {\n        validateInputs(node, existingNode);\n        return {\n            ...node,\n            locations: [\n                ...existingNode.locations,\n                ...node.locations.filter(name => !nameAlreadyExists(name, existingNode.locations)),\n            ],\n        };\n    }\n    return node;\n}\nexports.mergeDirective = mergeDirective;\nfunction deduplicateLists(source, target, filterFn) {\n    return source.concat(target.filter(val => filterFn(val, source)));\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2468, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/enum-values.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeEnumValues = void 0;\nconst directives_js_1 = require(\"./directives.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction mergeEnumValues(first, second, config, directives) {\n    if (config === null || config === void 0 ? void 0 : config.consistentEnumMerge) {\n        const reversed = [];\n        if (first) {\n            reversed.push(...first);\n        }\n        first = second;\n        second = reversed;\n    }\n    const enumValueMap = new Map();\n    if (first) {\n        for (const firstValue of first) {\n            enumValueMap.set(firstValue.name.value, firstValue);\n        }\n    }\n    if (second) {\n        for (const secondValue of second) {\n            const enumValue = secondValue.name.value;\n            if (enumValueMap.has(enumValue)) {\n                const firstValue = enumValueMap.get(enumValue);\n                firstValue.description = secondValue.description || firstValue.description;\n                firstValue.directives = (0, directives_js_1.mergeDirectives)(secondValue.directives, firstValue.directives, directives);\n            }\n            else {\n                enumValueMap.set(enumValue, secondValue);\n            }\n        }\n    }\n    const result = [...enumValueMap.values()];\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeEnumValues = mergeEnumValues;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG,KAAK;AAC/B,MAAM;AACN,MAAM;AACN,SAAS,gBAAgB,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU;IACtD,IAAI,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,mBAAmB,EAAE;QAC5E,MAAM,WAAW,EAAE;QACnB,IAAI,OAAO;YACP,SAAS,IAAI,IAAI;QACrB;QACA,QAAQ;QACR,SAAS;IACb;IACA,MAAM,eAAe,IAAI;IACzB,IAAI,OAAO;QACP,KAAK,MAAM,cAAc,MAAO;YAC5B,aAAa,GAAG,CAAC,WAAW,IAAI,CAAC,KAAK,EAAE;QAC5C;IACJ;IACA,IAAI,QAAQ;QACR,KAAK,MAAM,eAAe,OAAQ;YAC9B,MAAM,YAAY,YAAY,IAAI,CAAC,KAAK;YACxC,IAAI,aAAa,GAAG,CAAC,YAAY;gBAC7B,MAAM,aAAa,aAAa,GAAG,CAAC;gBACpC,WAAW,WAAW,GAAG,YAAY,WAAW,IAAI,WAAW,WAAW;gBAC1E,WAAW,UAAU,GAAG,CAAC,GAAG,gBAAgB,eAAe,EAAE,YAAY,UAAU,EAAE,WAAW,UAAU,EAAE;YAChH,OACK;gBACD,aAAa,GAAG,CAAC,WAAW;YAChC;QACJ;IACJ;IACA,MAAM,SAAS;WAAI,aAAa,MAAM;KAAG;IACzC,IAAI,UAAU,OAAO,IAAI,EAAE;QACvB,OAAO,IAAI,CAAC,QAAQ,YAAY;IACpC;IACA,OAAO;AACX;AACA,QAAQ,eAAe,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2516, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/enum.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeEnum = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nconst enum_values_js_1 = require(\"./enum-values.js\");\nfunction mergeEnum(e1, e2, config, directives) {\n    if (e2) {\n        return {\n            name: e1.name,\n            description: e1['description'] || e2['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || e1.kind === 'EnumTypeDefinition' || e2.kind === 'EnumTypeDefinition'\n                ? 'EnumTypeDefinition'\n                : 'EnumTypeExtension',\n            loc: e1.loc,\n            directives: (0, directives_js_1.mergeDirectives)(e1.directives, e2.directives, config, directives),\n            values: (0, enum_values_js_1.mergeEnumValues)(e1.values, e2.values, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...e1,\n            kind: graphql_1.Kind.ENUM_TYPE_DEFINITION,\n        }\n        : e1;\n}\nexports.mergeEnum = mergeEnum;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,SAAS,GAAG,KAAK;AACzB,MAAM;AACN,MAAM;AACN,MAAM;AACN,SAAS,UAAU,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU;IACzC,IAAI,IAAI;QACJ,OAAO;YACH,MAAM,GAAG,IAAI;YACb,aAAa,EAAE,CAAC,cAAc,IAAI,EAAE,CAAC,cAAc;YACnD,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAAK,GAAG,IAAI,KAAK,wBAAwB,GAAG,IAAI,KAAK,uBAC9H,uBACA;YACN,KAAK,GAAG,GAAG;YACX,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,GAAG,UAAU,EAAE,GAAG,UAAU,EAAE,QAAQ;YACvF,QAAQ,CAAC,GAAG,iBAAiB,eAAe,EAAE,GAAG,MAAM,EAAE,GAAG,MAAM,EAAE;QACxE;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,EAAE;QACL,MAAM,UAAU,IAAI,CAAC,oBAAoB;IAC7C,IACE;AACV;AACA,QAAQ,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2546, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultStringComparator = exports.CompareVal = exports.printTypeNode = exports.isNonNullTypeNode = exports.isListTypeNode = exports.isWrappingTypeNode = exports.extractType = exports.isSourceTypes = exports.isStringTypes = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction isStringTypes(types) {\n    return typeof types === 'string';\n}\nexports.isStringTypes = isStringTypes;\nfunction isSourceTypes(types) {\n    return types instanceof graphql_1.Source;\n}\nexports.isSourceTypes = isSourceTypes;\nfunction extractType(type) {\n    let visitedType = type;\n    while (visitedType.kind === graphql_1.Kind.LIST_TYPE || visitedType.kind === 'NonNullType') {\n        visitedType = visitedType.type;\n    }\n    return visitedType;\n}\nexports.extractType = extractType;\nfunction isWrappingTypeNode(type) {\n    return type.kind !== graphql_1.Kind.NAMED_TYPE;\n}\nexports.isWrappingTypeNode = isWrappingTypeNode;\nfunction isListTypeNode(type) {\n    return type.kind === graphql_1.Kind.LIST_TYPE;\n}\nexports.isListTypeNode = isListTypeNode;\nfunction isNonNullTypeNode(type) {\n    return type.kind === graphql_1.Kind.NON_NULL_TYPE;\n}\nexports.isNonNullTypeNode = isNonNullTypeNode;\nfunction printTypeNode(type) {\n    if (isListTypeNode(type)) {\n        return `[${printTypeNode(type.type)}]`;\n    }\n    if (isNonNullTypeNode(type)) {\n        return `${printTypeNode(type.type)}!`;\n    }\n    return type.name.value;\n}\nexports.printTypeNode = printTypeNode;\nvar CompareVal;\n(function (CompareVal) {\n    CompareVal[CompareVal[\"A_SMALLER_THAN_B\"] = -1] = \"A_SMALLER_THAN_B\";\n    CompareVal[CompareVal[\"A_EQUALS_B\"] = 0] = \"A_EQUALS_B\";\n    CompareVal[CompareVal[\"A_GREATER_THAN_B\"] = 1] = \"A_GREATER_THAN_B\";\n})(CompareVal = exports.CompareVal || (exports.CompareVal = {}));\nfunction defaultStringComparator(a, b) {\n    if (a == null && b == null) {\n        return CompareVal.A_EQUALS_B;\n    }\n    if (a == null) {\n        return CompareVal.A_SMALLER_THAN_B;\n    }\n    if (b == null) {\n        return CompareVal.A_GREATER_THAN_B;\n    }\n    if (a < b)\n        return CompareVal.A_SMALLER_THAN_B;\n    if (a > b)\n        return CompareVal.A_GREATER_THAN_B;\n    return CompareVal.A_EQUALS_B;\n}\nexports.defaultStringComparator = defaultStringComparator;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,uBAAuB,GAAG,QAAQ,UAAU,GAAG,QAAQ,aAAa,GAAG,QAAQ,iBAAiB,GAAG,QAAQ,cAAc,GAAG,QAAQ,kBAAkB,GAAG,QAAQ,WAAW,GAAG,QAAQ,aAAa,GAAG,QAAQ,aAAa,GAAG,KAAK;AAC5O,MAAM;AACN,SAAS,cAAc,KAAK;IACxB,OAAO,OAAO,UAAU;AAC5B;AACA,QAAQ,aAAa,GAAG;AACxB,SAAS,cAAc,KAAK;IACxB,OAAO,iBAAiB,UAAU,MAAM;AAC5C;AACA,QAAQ,aAAa,GAAG;AACxB,SAAS,YAAY,IAAI;IACrB,IAAI,cAAc;IAClB,MAAO,YAAY,IAAI,KAAK,UAAU,IAAI,CAAC,SAAS,IAAI,YAAY,IAAI,KAAK,cAAe;QACxF,cAAc,YAAY,IAAI;IAClC;IACA,OAAO;AACX;AACA,QAAQ,WAAW,GAAG;AACtB,SAAS,mBAAmB,IAAI;IAC5B,OAAO,KAAK,IAAI,KAAK,UAAU,IAAI,CAAC,UAAU;AAClD;AACA,QAAQ,kBAAkB,GAAG;AAC7B,SAAS,eAAe,IAAI;IACxB,OAAO,KAAK,IAAI,KAAK,UAAU,IAAI,CAAC,SAAS;AACjD;AACA,QAAQ,cAAc,GAAG;AACzB,SAAS,kBAAkB,IAAI;IAC3B,OAAO,KAAK,IAAI,KAAK,UAAU,IAAI,CAAC,aAAa;AACrD;AACA,QAAQ,iBAAiB,GAAG;AAC5B,SAAS,cAAc,IAAI;IACvB,IAAI,eAAe,OAAO;QACtB,OAAO,CAAC,CAAC,EAAE,cAAc,KAAK,IAAI,EAAE,CAAC,CAAC;IAC1C;IACA,IAAI,kBAAkB,OAAO;QACzB,OAAO,GAAG,cAAc,KAAK,IAAI,EAAE,CAAC,CAAC;IACzC;IACA,OAAO,KAAK,IAAI,CAAC,KAAK;AAC1B;AACA,QAAQ,aAAa,GAAG;AACxB,IAAI;AACJ,CAAC,SAAU,UAAU;IACjB,UAAU,CAAC,UAAU,CAAC,mBAAmB,GAAG,CAAC,EAAE,GAAG;IAClD,UAAU,CAAC,UAAU,CAAC,aAAa,GAAG,EAAE,GAAG;IAC3C,UAAU,CAAC,UAAU,CAAC,mBAAmB,GAAG,EAAE,GAAG;AACrD,CAAC,EAAE,aAAa,QAAQ,UAAU,IAAI,CAAC,QAAQ,UAAU,GAAG,CAAC,CAAC;AAC9D,SAAS,wBAAwB,CAAC,EAAE,CAAC;IACjC,IAAI,KAAK,QAAQ,KAAK,MAAM;QACxB,OAAO,WAAW,UAAU;IAChC;IACA,IAAI,KAAK,MAAM;QACX,OAAO,WAAW,gBAAgB;IACtC;IACA,IAAI,KAAK,MAAM;QACX,OAAO,WAAW,gBAAgB;IACtC;IACA,IAAI,IAAI,GACJ,OAAO,WAAW,gBAAgB;IACtC,IAAI,IAAI,GACJ,OAAO,WAAW,gBAAgB;IACtC,OAAO,WAAW,UAAU;AAChC;AACA,QAAQ,uBAAuB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2616, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/fields.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeFields = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst arguments_js_1 = require(\"./arguments.js\");\nfunction fieldAlreadyExists(fieldsArr, otherField) {\n    const resultIndex = fieldsArr.findIndex(field => field.name.value === otherField.name.value);\n    return [resultIndex > -1 ? fieldsArr[resultIndex] : null, resultIndex];\n}\nfunction mergeFields(type, f1, f2, config, directives) {\n    const result = [];\n    if (f2 != null) {\n        result.push(...f2);\n    }\n    if (f1 != null) {\n        for (const field of f1) {\n            const [existing, existingIndex] = fieldAlreadyExists(result, field);\n            if (existing && !(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n                const newField = ((config === null || config === void 0 ? void 0 : config.onFieldTypeConflict) && config.onFieldTypeConflict(existing, field, type, config === null || config === void 0 ? void 0 : config.throwOnConflict)) ||\n                    preventConflicts(type, existing, field, config === null || config === void 0 ? void 0 : config.throwOnConflict);\n                newField.arguments = (0, arguments_js_1.mergeArguments)(field['arguments'] || [], existing['arguments'] || [], config);\n                newField.directives = (0, directives_js_1.mergeDirectives)(field.directives, existing.directives, config, directives);\n                newField.description = field.description || existing.description;\n                result[existingIndex] = newField;\n            }\n            else {\n                result.push(field);\n            }\n        }\n    }\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    if (config && config.exclusions) {\n        const exclusions = config.exclusions;\n        return result.filter(field => !exclusions.includes(`${type.name.value}.${field.name.value}`));\n    }\n    return result;\n}\nexports.mergeFields = mergeFields;\nfunction preventConflicts(type, a, b, ignoreNullability = false) {\n    const aType = (0, utils_js_1.printTypeNode)(a.type);\n    const bType = (0, utils_js_1.printTypeNode)(b.type);\n    if (aType !== bType) {\n        const t1 = (0, utils_js_1.extractType)(a.type);\n        const t2 = (0, utils_js_1.extractType)(b.type);\n        if (t1.name.value !== t2.name.value) {\n            throw new Error(`Field \"${b.name.value}\" already defined with a different type. Declared as \"${t1.name.value}\", but you tried to override with \"${t2.name.value}\"`);\n        }\n        if (!safeChangeForFieldType(a.type, b.type, !ignoreNullability)) {\n            throw new Error(`Field '${type.name.value}.${a.name.value}' changed type from '${aType}' to '${bType}'`);\n        }\n    }\n    if ((0, utils_js_1.isNonNullTypeNode)(b.type) && !(0, utils_js_1.isNonNullTypeNode)(a.type)) {\n        a.type = b.type;\n    }\n    return a;\n}\nfunction safeChangeForFieldType(oldType, newType, ignoreNullability = false) {\n    // both are named\n    if (!(0, utils_js_1.isWrappingTypeNode)(oldType) && !(0, utils_js_1.isWrappingTypeNode)(newType)) {\n        return oldType.toString() === newType.toString();\n    }\n    // new is non-null\n    if ((0, utils_js_1.isNonNullTypeNode)(newType)) {\n        const ofType = (0, utils_js_1.isNonNullTypeNode)(oldType) ? oldType.type : oldType;\n        return safeChangeForFieldType(ofType, newType.type);\n    }\n    // old is non-null\n    if ((0, utils_js_1.isNonNullTypeNode)(oldType)) {\n        return safeChangeForFieldType(newType, oldType, ignoreNullability);\n    }\n    // old is list\n    if ((0, utils_js_1.isListTypeNode)(oldType)) {\n        return (((0, utils_js_1.isListTypeNode)(newType) && safeChangeForFieldType(oldType.type, newType.type)) ||\n            ((0, utils_js_1.isNonNullTypeNode)(newType) && safeChangeForFieldType(oldType, newType['type'])));\n    }\n    return false;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2704, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/input-type.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeInputType = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nfunction mergeInputType(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InputObjectTypeDefinition' ||\n                    existingNode.kind === 'InputObjectTypeDefinition'\n                    ? 'InputObjectTypeDefinition'\n                    : 'InputObjectTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL input type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeInputType = mergeInputType;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN,MAAM;AACN,MAAM;AACN,SAAS,eAAe,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU;IAC1D,IAAI,cAAc;QACd,IAAI;YACA,OAAO;gBACH,MAAM,KAAK,IAAI;gBACf,aAAa,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc;gBAC/D,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAC3E,KAAK,IAAI,KAAK,+BACd,aAAa,IAAI,KAAK,8BACpB,8BACA;gBACN,KAAK,KAAK,GAAG;gBACb,QAAQ,CAAC,GAAG,YAAY,WAAW,EAAE,MAAM,KAAK,MAAM,EAAE,aAAa,MAAM,EAAE;gBAC7E,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE,QAAQ;YACvG;QACJ,EACA,OAAO,GAAG;YACN,MAAM,IAAI,MAAM,CAAC,oCAAoC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE;QAC3F;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,IAAI;QACP,MAAM,UAAU,IAAI,CAAC,4BAA4B;IACrD,IACE;AACV;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2738, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/merge-named-type-array.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeNamedTypeArray = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction alreadyExists(arr, other) {\n    return !!arr.find(i => i.name.value === other.name.value);\n}\nfunction mergeNamedTypeArray(first = [], second = [], config = {}) {\n    const result = [...second, ...first.filter(d => !alreadyExists(second, d))];\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeNamedTypeArray = mergeNamedTypeArray;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,KAAK;AACnC,MAAM;AACN,SAAS,cAAc,GAAG,EAAE,KAAK;IAC7B,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,CAAC,KAAK,KAAK,MAAM,IAAI,CAAC,KAAK;AAC5D;AACA,SAAS,oBAAoB,QAAQ,EAAE,EAAE,SAAS,EAAE,EAAE,SAAS,CAAC,CAAC;IAC7D,MAAM,SAAS;WAAI;WAAW,MAAM,MAAM,CAAC,CAAA,IAAK,CAAC,cAAc,QAAQ;KAAI;IAC3E,IAAI,UAAU,OAAO,IAAI,EAAE;QACvB,OAAO,IAAI,CAAC,QAAQ,YAAY;IACpC;IACA,OAAO;AACX;AACA,QAAQ,mBAAmB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2763, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/interface.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeInterface = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst merge_named_type_array_js_1 = require(\"./merge-named-type-array.js\");\nfunction mergeInterface(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InterfaceTypeDefinition' ||\n                    existingNode.kind === 'InterfaceTypeDefinition'\n                    ? 'InterfaceTypeDefinition'\n                    : 'InterfaceTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n                interfaces: node['interfaces']\n                    ? (0, merge_named_type_array_js_1.mergeNamedTypeArray)(node['interfaces'], existingNode['interfaces'], config)\n                    : undefined,\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL interface \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.INTERFACE_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeInterface = mergeInterface;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,SAAS,eAAe,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU;IAC1D,IAAI,cAAc;QACd,IAAI;YACA,OAAO;gBACH,MAAM,KAAK,IAAI;gBACf,aAAa,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc;gBAC/D,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAC3E,KAAK,IAAI,KAAK,6BACd,aAAa,IAAI,KAAK,4BACpB,4BACA;gBACN,KAAK,KAAK,GAAG;gBACb,QAAQ,CAAC,GAAG,YAAY,WAAW,EAAE,MAAM,KAAK,MAAM,EAAE,aAAa,MAAM,EAAE;gBAC7E,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE,QAAQ;gBACnG,YAAY,IAAI,CAAC,aAAa,GACxB,CAAC,GAAG,4BAA4B,mBAAmB,EAAE,IAAI,CAAC,aAAa,EAAE,YAAY,CAAC,aAAa,EAAE,UACrG;YACV;QACJ,EACA,OAAO,GAAG;YACN,MAAM,IAAI,MAAM,CAAC,mCAAmC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE;QAC1F;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,IAAI;QACP,MAAM,UAAU,IAAI,CAAC,yBAAyB;IAClD,IACE;AACV;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2799, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/type.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeType = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst merge_named_type_array_js_1 = require(\"./merge-named-type-array.js\");\nfunction mergeType(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'ObjectTypeDefinition' ||\n                    existingNode.kind === 'ObjectTypeDefinition'\n                    ? 'ObjectTypeDefinition'\n                    : 'ObjectTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n                interfaces: (0, merge_named_type_array_js_1.mergeNamedTypeArray)(node.interfaces, existingNode.interfaces, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeType = mergeType;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,SAAS,GAAG,KAAK;AACzB,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,SAAS,UAAU,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU;IACrD,IAAI,cAAc;QACd,IAAI;YACA,OAAO;gBACH,MAAM,KAAK,IAAI;gBACf,aAAa,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc;gBAC/D,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAC3E,KAAK,IAAI,KAAK,0BACd,aAAa,IAAI,KAAK,yBACpB,yBACA;gBACN,KAAK,KAAK,GAAG;gBACb,QAAQ,CAAC,GAAG,YAAY,WAAW,EAAE,MAAM,KAAK,MAAM,EAAE,aAAa,MAAM,EAAE;gBAC7E,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE,QAAQ;gBACnG,YAAY,CAAC,GAAG,4BAA4B,mBAAmB,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE;YAC/G;QACJ,EACA,OAAO,GAAG;YACN,MAAM,IAAI,MAAM,CAAC,8BAA8B,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE;QACrF;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,IAAI;QACP,MAAM,UAAU,IAAI,CAAC,sBAAsB;IAC/C,IACE;AACV;AACA,QAAQ,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2835, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/scalar.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeScalar = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nfunction mergeScalar(node, existingNode, config, directives) {\n    if (existingNode) {\n        return {\n            name: node.name,\n            description: node['description'] || existingNode['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                node.kind === 'ScalarTypeDefinition' ||\n                existingNode.kind === 'ScalarTypeDefinition'\n                ? 'ScalarTypeDefinition'\n                : 'ScalarTypeExtension',\n            loc: node.loc,\n            directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.SCALAR_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeScalar = mergeScalar;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,WAAW,GAAG,KAAK;AAC3B,MAAM;AACN,MAAM;AACN,SAAS,YAAY,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU;IACvD,IAAI,cAAc;QACd,OAAO;YACH,MAAM,KAAK,IAAI;YACf,aAAa,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc;YAC/D,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAC3E,KAAK,IAAI,KAAK,0BACd,aAAa,IAAI,KAAK,yBACpB,yBACA;YACN,KAAK,KAAK,GAAG;YACb,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE,QAAQ;QACvG;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,IAAI;QACP,MAAM,UAAU,IAAI,CAAC,sBAAsB;IAC/C,IACE;AACV;AACA,QAAQ,WAAW,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2863, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/union.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeUnion = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nconst merge_named_type_array_js_1 = require(\"./merge-named-type-array.js\");\nfunction mergeUnion(first, second, config, directives) {\n    if (second) {\n        return {\n            name: first.name,\n            description: first['description'] || second['description'],\n            // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n            directives: (0, directives_js_1.mergeDirectives)(first.directives, second.directives, config, directives),\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || first.kind === 'UnionTypeDefinition' || second.kind === 'UnionTypeDefinition'\n                ? graphql_1.Kind.UNION_TYPE_DEFINITION\n                : graphql_1.Kind.UNION_TYPE_EXTENSION,\n            loc: first.loc,\n            types: (0, merge_named_type_array_js_1.mergeNamedTypeArray)(first.types, second.types, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...first,\n            kind: graphql_1.Kind.UNION_TYPE_DEFINITION,\n        }\n        : first;\n}\nexports.mergeUnion = mergeUnion;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,UAAU,GAAG,KAAK;AAC1B,MAAM;AACN,MAAM;AACN,MAAM;AACN,SAAS,WAAW,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU;IACjD,IAAI,QAAQ;QACR,OAAO;YACH,MAAM,MAAM,IAAI;YAChB,aAAa,KAAK,CAAC,cAAc,IAAI,MAAM,CAAC,cAAc;YAC1D,0HAA0H;YAC1H,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,MAAM,UAAU,EAAE,OAAO,UAAU,EAAE,QAAQ;YAC9F,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAAK,MAAM,IAAI,KAAK,yBAAyB,OAAO,IAAI,KAAK,wBACtI,UAAU,IAAI,CAAC,qBAAqB,GACpC,UAAU,IAAI,CAAC,oBAAoB;YACzC,KAAK,MAAM,GAAG;YACd,OAAO,CAAC,GAAG,4BAA4B,mBAAmB,EAAE,MAAM,KAAK,EAAE,OAAO,KAAK,EAAE;QAC3F;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,KAAK;QACR,MAAM,UAAU,IAAI,CAAC,qBAAqB;IAC9C,IACE;AACV;AACA,QAAQ,UAAU,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2894, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/schema-def.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeSchemaDefs = exports.DEFAULT_OPERATION_TYPE_NAME_MAP = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nexports.DEFAULT_OPERATION_TYPE_NAME_MAP = {\n    query: 'Query',\n    mutation: 'Mutation',\n    subscription: 'Subscription',\n};\nfunction mergeOperationTypes(opNodeList = [], existingOpNodeList = []) {\n    const finalOpNodeList = [];\n    for (const opNodeType in exports.DEFAULT_OPERATION_TYPE_NAME_MAP) {\n        const opNode = opNodeList.find(n => n.operation === opNodeType) || existingOpNodeList.find(n => n.operation === opNodeType);\n        if (opNode) {\n            finalOpNodeList.push(opNode);\n        }\n    }\n    return finalOpNodeList;\n}\nfunction mergeSchemaDefs(node, existingNode, config, directives) {\n    if (existingNode) {\n        return {\n            kind: node.kind === graphql_1.Kind.SCHEMA_DEFINITION || existingNode.kind === graphql_1.Kind.SCHEMA_DEFINITION\n                ? graphql_1.Kind.SCHEMA_DEFINITION\n                : graphql_1.Kind.SCHEMA_EXTENSION,\n            description: node['description'] || existingNode['description'],\n            directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n            operationTypes: mergeOperationTypes(node.operationTypes, existingNode.operationTypes),\n        };\n    }\n    return ((config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n        }\n        : node);\n}\nexports.mergeSchemaDefs = mergeSchemaDefs;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG,QAAQ,+BAA+B,GAAG,KAAK;AACzE,MAAM;AACN,MAAM;AACN,QAAQ,+BAA+B,GAAG;IACtC,OAAO;IACP,UAAU;IACV,cAAc;AAClB;AACA,SAAS,oBAAoB,aAAa,EAAE,EAAE,qBAAqB,EAAE;IACjE,MAAM,kBAAkB,EAAE;IAC1B,IAAK,MAAM,cAAc,QAAQ,+BAA+B,CAAE;QAC9D,MAAM,SAAS,WAAW,IAAI,CAAC,CAAA,IAAK,EAAE,SAAS,KAAK,eAAe,mBAAmB,IAAI,CAAC,CAAA,IAAK,EAAE,SAAS,KAAK;QAChH,IAAI,QAAQ;YACR,gBAAgB,IAAI,CAAC;QACzB;IACJ;IACA,OAAO;AACX;AACA,SAAS,gBAAgB,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU;IAC3D,IAAI,cAAc;QACd,OAAO;YACH,MAAM,KAAK,IAAI,KAAK,UAAU,IAAI,CAAC,iBAAiB,IAAI,aAAa,IAAI,KAAK,UAAU,IAAI,CAAC,iBAAiB,GACxG,UAAU,IAAI,CAAC,iBAAiB,GAChC,UAAU,IAAI,CAAC,gBAAgB;YACrC,aAAa,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc;YAC/D,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE,QAAQ;YACnG,gBAAgB,oBAAoB,KAAK,cAAc,EAAE,aAAa,cAAc;QACxF;IACJ;IACA,OAAQ,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC3E;QACE,GAAG,IAAI;QACP,MAAM,UAAU,IAAI,CAAC,iBAAiB;IAC1C,IACE;AACV;AACA,QAAQ,eAAe,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2936, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/merge-nodes.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeGraphQLNodes = exports.isNamedDefinitionNode = exports.schemaDefSymbol = void 0;\nconst graphql_1 = require(\"graphql\");\nconst type_js_1 = require(\"./type.js\");\nconst enum_js_1 = require(\"./enum.js\");\nconst scalar_js_1 = require(\"./scalar.js\");\nconst union_js_1 = require(\"./union.js\");\nconst input_type_js_1 = require(\"./input-type.js\");\nconst interface_js_1 = require(\"./interface.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst schema_def_js_1 = require(\"./schema-def.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nexports.schemaDefSymbol = 'SCHEMA_DEF_SYMBOL';\nfunction isNamedDefinitionNode(definitionNode) {\n    return 'name' in definitionNode;\n}\nexports.isNamedDefinitionNode = isNamedDefinitionNode;\nfunction mergeGraphQLNodes(nodes, config, directives = {}) {\n    var _a, _b, _c;\n    const mergedResultMap = directives;\n    for (const nodeDefinition of nodes) {\n        if (isNamedDefinitionNode(nodeDefinition)) {\n            const name = (_a = nodeDefinition.name) === null || _a === void 0 ? void 0 : _a.value;\n            if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n                (0, utils_1.collectComment)(nodeDefinition);\n            }\n            if (name == null) {\n                continue;\n            }\n            if (((_b = config === null || config === void 0 ? void 0 : config.exclusions) === null || _b === void 0 ? void 0 : _b.includes(name + '.*')) || ((_c = config === null || config === void 0 ? void 0 : config.exclusions) === null || _c === void 0 ? void 0 : _c.includes(name))) {\n                delete mergedResultMap[name];\n            }\n            else {\n                switch (nodeDefinition.kind) {\n                    case graphql_1.Kind.OBJECT_TYPE_DEFINITION:\n                    case graphql_1.Kind.OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, type_js_1.mergeType)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql_1.Kind.ENUM_TYPE_DEFINITION:\n                    case graphql_1.Kind.ENUM_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, enum_js_1.mergeEnum)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql_1.Kind.UNION_TYPE_DEFINITION:\n                    case graphql_1.Kind.UNION_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, union_js_1.mergeUnion)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql_1.Kind.SCALAR_TYPE_DEFINITION:\n                    case graphql_1.Kind.SCALAR_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, scalar_js_1.mergeScalar)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n                    case graphql_1.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, input_type_js_1.mergeInputType)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql_1.Kind.INTERFACE_TYPE_DEFINITION:\n                    case graphql_1.Kind.INTERFACE_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, interface_js_1.mergeInterface)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql_1.Kind.DIRECTIVE_DEFINITION:\n                        mergedResultMap[name] = (0, directives_js_1.mergeDirective)(nodeDefinition, mergedResultMap[name]);\n                        break;\n                }\n            }\n        }\n        else if (nodeDefinition.kind === graphql_1.Kind.SCHEMA_DEFINITION || nodeDefinition.kind === graphql_1.Kind.SCHEMA_EXTENSION) {\n            mergedResultMap[exports.schemaDefSymbol] = (0, schema_def_js_1.mergeSchemaDefs)(nodeDefinition, mergedResultMap[exports.schemaDefSymbol], config);\n        }\n    }\n    return mergedResultMap;\n}\nexports.mergeGraphQLNodes = mergeGraphQLNodes;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3013, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/merge-typedefs.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeGraphQLTypes = exports.mergeTypeDefs = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_js_1 = require(\"./utils.js\");\nconst merge_nodes_js_1 = require(\"./merge-nodes.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst schema_def_js_1 = require(\"./schema-def.js\");\nfunction mergeTypeDefs(typeSource, config) {\n    (0, utils_1.resetComments)();\n    const doc = {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: mergeGraphQLTypes(typeSource, {\n            useSchemaDefinition: true,\n            forceSchemaDefinition: false,\n            throwOnConflict: false,\n            commentDescriptions: false,\n            ...config,\n        }),\n    };\n    let result;\n    if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n        result = (0, utils_1.printWithComments)(doc);\n    }\n    else {\n        result = doc;\n    }\n    (0, utils_1.resetComments)();\n    return result;\n}\nexports.mergeTypeDefs = mergeTypeDefs;\nfunction visitTypeSources(typeSource, options, allDirectives = [], allNodes = [], visitedTypeSources = new Set()) {\n    if (typeSource && !visitedTypeSources.has(typeSource)) {\n        visitedTypeSources.add(typeSource);\n        if (typeof typeSource === 'function') {\n            visitTypeSources(typeSource(), options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if (Array.isArray(typeSource)) {\n            for (const type of typeSource) {\n                visitTypeSources(type, options, allDirectives, allNodes, visitedTypeSources);\n            }\n        }\n        else if ((0, graphql_1.isSchema)(typeSource)) {\n            const documentNode = (0, utils_1.getDocumentNodeFromSchema)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if ((0, utils_js_1.isStringTypes)(typeSource) || (0, utils_js_1.isSourceTypes)(typeSource)) {\n            const documentNode = (0, graphql_1.parse)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if (typeof typeSource === 'object' && (0, graphql_1.isDefinitionNode)(typeSource)) {\n            if (typeSource.kind === graphql_1.Kind.DIRECTIVE_DEFINITION) {\n                allDirectives.push(typeSource);\n            }\n            else {\n                allNodes.push(typeSource);\n            }\n        }\n        else if ((0, utils_1.isDocumentNode)(typeSource)) {\n            visitTypeSources(typeSource.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else {\n            throw new Error(`typeDefs must contain only strings, documents, schemas, or functions, got ${typeof typeSource}`);\n        }\n    }\n    return { allDirectives, allNodes };\n}\nfunction mergeGraphQLTypes(typeSource, config) {\n    var _a, _b, _c;\n    (0, utils_1.resetComments)();\n    const { allDirectives, allNodes } = visitTypeSources(typeSource, config);\n    const mergedDirectives = (0, merge_nodes_js_1.mergeGraphQLNodes)(allDirectives, config);\n    const mergedNodes = (0, merge_nodes_js_1.mergeGraphQLNodes)(allNodes, config, mergedDirectives);\n    if (config === null || config === void 0 ? void 0 : config.useSchemaDefinition) {\n        // XXX: right now we don't handle multiple schema definitions\n        const schemaDef = mergedNodes[merge_nodes_js_1.schemaDefSymbol] || {\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n            operationTypes: [],\n        };\n        const operationTypes = schemaDef.operationTypes;\n        for (const opTypeDefNodeType in schema_def_js_1.DEFAULT_OPERATION_TYPE_NAME_MAP) {\n            const opTypeDefNode = operationTypes.find(operationType => operationType.operation === opTypeDefNodeType);\n            if (!opTypeDefNode) {\n                const possibleRootTypeName = schema_def_js_1.DEFAULT_OPERATION_TYPE_NAME_MAP[opTypeDefNodeType];\n                const existingPossibleRootType = mergedNodes[possibleRootTypeName];\n                if (existingPossibleRootType != null && existingPossibleRootType.name != null) {\n                    operationTypes.push({\n                        kind: graphql_1.Kind.OPERATION_TYPE_DEFINITION,\n                        type: {\n                            kind: graphql_1.Kind.NAMED_TYPE,\n                            name: existingPossibleRootType.name,\n                        },\n                        operation: opTypeDefNodeType,\n                    });\n                }\n            }\n        }\n        if (((_a = schemaDef === null || schemaDef === void 0 ? void 0 : schemaDef.operationTypes) === null || _a === void 0 ? void 0 : _a.length) != null && schemaDef.operationTypes.length > 0) {\n            mergedNodes[merge_nodes_js_1.schemaDefSymbol] = schemaDef;\n        }\n    }\n    if ((config === null || config === void 0 ? void 0 : config.forceSchemaDefinition) && !((_c = (_b = mergedNodes[merge_nodes_js_1.schemaDefSymbol]) === null || _b === void 0 ? void 0 : _b.operationTypes) === null || _c === void 0 ? void 0 : _c.length)) {\n        mergedNodes[merge_nodes_js_1.schemaDefSymbol] = {\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n            operationTypes: [\n                {\n                    kind: graphql_1.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: 'query',\n                    type: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: 'Query',\n                        },\n                    },\n                },\n            ],\n        };\n    }\n    const mergedNodeDefinitions = Object.values(mergedNodes);\n    if (config === null || config === void 0 ? void 0 : config.sort) {\n        const sortFn = typeof config.sort === 'function' ? config.sort : utils_js_1.defaultStringComparator;\n        mergedNodeDefinitions.sort((a, b) => { var _a, _b; return sortFn((_a = a.name) === null || _a === void 0 ? void 0 : _a.value, (_b = b.name) === null || _b === void 0 ? void 0 : _b.value); });\n    }\n    return mergedNodeDefinitions;\n}\nexports.mergeGraphQLTypes = mergeGraphQLTypes;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3145, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./arguments.js\"), exports);\ntslib_1.__exportStar(require(\"./directives.js\"), exports);\ntslib_1.__exportStar(require(\"./enum-values.js\"), exports);\ntslib_1.__exportStar(require(\"./enum.js\"), exports);\ntslib_1.__exportStar(require(\"./fields.js\"), exports);\ntslib_1.__exportStar(require(\"./input-type.js\"), exports);\ntslib_1.__exportStar(require(\"./interface.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-named-type-array.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-nodes.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-typedefs.js\"), exports);\ntslib_1.__exportStar(require(\"./scalar.js\"), exports);\ntslib_1.__exportStar(require(\"./type.js\"), exports);\ntslib_1.__exportStar(require(\"./union.js\"), exports);\ntslib_1.__exportStar(require(\"./utils.js\"), exports);\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,MAAM;AACN,QAAQ,YAAY,qKAA4B;AAChD,QAAQ,YAAY,sKAA6B;AACjD,QAAQ,YAAY,uKAA8B;AAClD,QAAQ,YAAY,gKAAuB;AAC3C,QAAQ,YAAY,kKAAyB;AAC7C,QAAQ,YAAY,sKAA6B;AACjD,QAAQ,YAAY,qKAA4B;AAChD,QAAQ,YAAY,kLAAyC;AAC7D,QAAQ,YAAY,uKAA8B;AAClD,QAAQ,YAAY,0KAAiC;AACrD,QAAQ,YAAY,kKAAyB;AAC7C,QAAQ,YAAY,gKAAuB;AAC3C,QAAQ,YAAY,iKAAwB;AAC5C,QAAQ,YAAY,iKAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3169, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/extensions.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyExtensions = exports.mergeExtensions = exports.extractExtensionsFromSchema = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nvar utils_2 = require(\"@graphql-tools/utils\");\nObject.defineProperty(exports, \"extractExtensionsFromSchema\", { enumerable: true, get: function () { return utils_2.extractExtensionsFromSchema; } });\nfunction mergeExtensions(extensions) {\n    return (0, utils_1.mergeDeep)(extensions);\n}\nexports.mergeExtensions = mergeExtensions;\nfunction applyExtensionObject(obj, extensions) {\n    if (!obj) {\n        return;\n    }\n    obj.extensions = (0, utils_1.mergeDeep)([obj.extensions || {}, extensions || {}]);\n}\nfunction applyExtensions(schema, extensions) {\n    applyExtensionObject(schema, extensions.schemaExtensions);\n    for (const [typeName, data] of Object.entries(extensions.types || {})) {\n        const type = schema.getType(typeName);\n        if (type) {\n            applyExtensionObject(type, data.extensions);\n            if (data.type === 'object' || data.type === 'interface') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    if (field) {\n                        applyExtensionObject(field, fieldData.extensions);\n                        for (const [arg, argData] of Object.entries(fieldData.arguments)) {\n                            applyExtensionObject(field.args.find(a => a.name === arg), argData);\n                        }\n                    }\n                }\n            }\n            else if (data.type === 'input') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    applyExtensionObject(field, fieldData.extensions);\n                }\n            }\n            else if (data.type === 'enum') {\n                for (const [valueName, valueData] of Object.entries(data.values)) {\n                    const value = type.getValue(valueName);\n                    applyExtensionObject(value, valueData);\n                }\n            }\n        }\n    }\n    return schema;\n}\nexports.applyExtensions = applyExtensions;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG,QAAQ,eAAe,GAAG,QAAQ,2BAA2B,GAAG,KAAK;AAC/F,MAAM;AACN,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,+BAA+B;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,QAAQ,2BAA2B;IAAE;AAAE;AACnJ,SAAS,gBAAgB,UAAU;IAC/B,OAAO,CAAC,GAAG,QAAQ,SAAS,EAAE;AAClC;AACA,QAAQ,eAAe,GAAG;AAC1B,SAAS,qBAAqB,GAAG,EAAE,UAAU;IACzC,IAAI,CAAC,KAAK;QACN;IACJ;IACA,IAAI,UAAU,GAAG,CAAC,GAAG,QAAQ,SAAS,EAAE;QAAC,IAAI,UAAU,IAAI,CAAC;QAAG,cAAc,CAAC;KAAE;AACpF;AACA,SAAS,gBAAgB,MAAM,EAAE,UAAU;IACvC,qBAAqB,QAAQ,WAAW,gBAAgB;IACxD,KAAK,MAAM,CAAC,UAAU,KAAK,IAAI,OAAO,OAAO,CAAC,WAAW,KAAK,IAAI,CAAC,GAAI;QACnE,MAAM,OAAO,OAAO,OAAO,CAAC;QAC5B,IAAI,MAAM;YACN,qBAAqB,MAAM,KAAK,UAAU;YAC1C,IAAI,KAAK,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,aAAa;gBACrD,KAAK,MAAM,CAAC,WAAW,UAAU,IAAI,OAAO,OAAO,CAAC,KAAK,MAAM,EAAG;oBAC9D,MAAM,QAAQ,KAAK,SAAS,EAAE,CAAC,UAAU;oBACzC,IAAI,OAAO;wBACP,qBAAqB,OAAO,UAAU,UAAU;wBAChD,KAAK,MAAM,CAAC,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,UAAU,SAAS,EAAG;4BAC9D,qBAAqB,MAAM,IAAI,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,MAAM;wBAC/D;oBACJ;gBACJ;YACJ,OACK,IAAI,KAAK,IAAI,KAAK,SAAS;gBAC5B,KAAK,MAAM,CAAC,WAAW,UAAU,IAAI,OAAO,OAAO,CAAC,KAAK,MAAM,EAAG;oBAC9D,MAAM,QAAQ,KAAK,SAAS,EAAE,CAAC,UAAU;oBACzC,qBAAqB,OAAO,UAAU,UAAU;gBACpD;YACJ,OACK,IAAI,KAAK,IAAI,KAAK,QAAQ;gBAC3B,KAAK,MAAM,CAAC,WAAW,UAAU,IAAI,OAAO,OAAO,CAAC,KAAK,MAAM,EAAG;oBAC9D,MAAM,QAAQ,KAAK,QAAQ,CAAC;oBAC5B,qBAAqB,OAAO;gBAChC;YACJ;QACJ;IACJ;IACA,OAAO;AACX;AACA,QAAQ,eAAe,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3232, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/mock/node_modules/%40graphql-tools/merge/cjs/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./merge-resolvers.js\"), exports);\ntslib_1.__exportStar(require(\"./typedefs-mergers/index.js\"), exports);\ntslib_1.__exportStar(require(\"./extensions.js\"), exports);\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,MAAM;AACN,QAAQ,YAAY,0JAAkC;AACtD,QAAQ,YAAY,iKAAyC;AAC7D,QAAQ,YAAY,qJAA6B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3245, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/merge-resolvers.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeResolvers = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\n/**\n * Deep merges multiple resolver definition objects into a single definition.\n * @param resolversDefinitions Resolver definitions to be merged\n * @param options Additional options\n *\n * ```js\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const clientResolver = require('./clientResolver');\n * const productResolver = require('./productResolver');\n *\n * const resolvers = mergeResolvers([\n *  clientResolver,\n *  productResolver,\n * ]);\n * ```\n *\n * If you don't want to manually create the array of resolver objects, you can\n * also use this function along with loadFiles:\n *\n * ```js\n * const path = require('path');\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const { loadFilesSync } = require('@graphql-tools/load-files');\n *\n * const resolversArray = loadFilesSync(path.join(__dirname, './resolvers'));\n *\n * const resolvers = mergeResolvers(resolversArray)\n * ```\n */\nfunction mergeResolvers(resolversDefinitions, options) {\n    if (!resolversDefinitions || (Array.isArray(resolversDefinitions) && resolversDefinitions.length === 0)) {\n        return {};\n    }\n    if (!Array.isArray(resolversDefinitions)) {\n        return resolversDefinitions;\n    }\n    if (resolversDefinitions.length === 1) {\n        return resolversDefinitions[0] || {};\n    }\n    const resolvers = new Array();\n    for (let resolversDefinition of resolversDefinitions) {\n        if (Array.isArray(resolversDefinition)) {\n            resolversDefinition = mergeResolvers(resolversDefinition);\n        }\n        if (typeof resolversDefinition === 'object' && resolversDefinition) {\n            resolvers.push(resolversDefinition);\n        }\n    }\n    const result = (0, utils_1.mergeDeep)(resolvers, true);\n    if (options === null || options === void 0 ? void 0 : options.exclusions) {\n        for (const exclusion of options.exclusions) {\n            const [typeName, fieldName] = exclusion.split('.');\n            if (!fieldName || fieldName === '*') {\n                delete result[typeName];\n            }\n            else if (result[typeName]) {\n                delete result[typeName][fieldName];\n            }\n        }\n    }\n    return result;\n}\nexports.mergeResolvers = mergeResolvers;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4BC,GACD,SAAS,eAAe,oBAAoB,EAAE,OAAO;IACjD,IAAI,CAAC,wBAAyB,MAAM,OAAO,CAAC,yBAAyB,qBAAqB,MAAM,KAAK,GAAI;QACrG,OAAO,CAAC;IACZ;IACA,IAAI,CAAC,MAAM,OAAO,CAAC,uBAAuB;QACtC,OAAO;IACX;IACA,IAAI,qBAAqB,MAAM,KAAK,GAAG;QACnC,OAAO,oBAAoB,CAAC,EAAE,IAAI,CAAC;IACvC;IACA,MAAM,YAAY,IAAI;IACtB,KAAK,IAAI,uBAAuB,qBAAsB;QAClD,IAAI,MAAM,OAAO,CAAC,sBAAsB;YACpC,sBAAsB,eAAe;QACzC;QACA,IAAI,OAAO,wBAAwB,YAAY,qBAAqB;YAChE,UAAU,IAAI,CAAC;QACnB;IACJ;IACA,MAAM,SAAS,CAAC,GAAG,QAAQ,SAAS,EAAE,WAAW;IACjD,IAAI,YAAY,QAAQ,YAAY,KAAK,IAAI,KAAK,IAAI,QAAQ,UAAU,EAAE;QACtE,KAAK,MAAM,aAAa,QAAQ,UAAU,CAAE;YACxC,MAAM,CAAC,UAAU,UAAU,GAAG,UAAU,KAAK,CAAC;YAC9C,IAAI,CAAC,aAAa,cAAc,KAAK;gBACjC,OAAO,MAAM,CAAC,SAAS;YAC3B,OACK,IAAI,MAAM,CAAC,SAAS,EAAE;gBACvB,OAAO,MAAM,CAAC,SAAS,CAAC,UAAU;YACtC;QACJ;IACJ;IACA,OAAO;AACX;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3317, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/arguments.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeArguments = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction mergeArguments(args1, args2, config) {\n    const result = deduplicateArguments([...args2, ...args1].filter(utils_1.isSome));\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeArguments = mergeArguments;\nfunction deduplicateArguments(args) {\n    return args.reduce((acc, current) => {\n        const dup = acc.find(arg => arg.name.value === current.name.value);\n        if (!dup) {\n            return acc.concat([current]);\n        }\n        return acc;\n    }, []);\n}\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN,SAAS,eAAe,KAAK,EAAE,KAAK,EAAE,MAAM;IACxC,MAAM,SAAS,qBAAqB;WAAI;WAAU;KAAM,CAAC,MAAM,CAAC,QAAQ,MAAM;IAC9E,IAAI,UAAU,OAAO,IAAI,EAAE;QACvB,OAAO,IAAI,CAAC,QAAQ,YAAY;IACpC;IACA,OAAO;AACX;AACA,QAAQ,cAAc,GAAG;AACzB,SAAS,qBAAqB,IAAI;IAC9B,OAAO,KAAK,MAAM,CAAC,CAAC,KAAK;QACrB,MAAM,MAAM,IAAI,IAAI,CAAC,CAAA,MAAO,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK;QACjE,IAAI,CAAC,KAAK;YACN,OAAO,IAAI,MAAM,CAAC;gBAAC;aAAQ;QAC/B;QACA,OAAO;IACX,GAAG,EAAE;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3350, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/directives.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeDirective = exports.mergeDirectives = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction directiveAlreadyExists(directivesArr, otherDirective) {\n    return !!directivesArr.find(directive => directive.name.value === otherDirective.name.value);\n}\nfunction nameAlreadyExists(name, namesArr) {\n    return namesArr.some(({ value }) => value === name.value);\n}\nfunction mergeArguments(a1, a2) {\n    const result = [...a2];\n    for (const argument of a1) {\n        const existingIndex = result.findIndex(a => a.name.value === argument.name.value);\n        if (existingIndex > -1) {\n            const existingArg = result[existingIndex];\n            if (existingArg.value.kind === 'ListValue') {\n                const source = existingArg.value.values;\n                const target = argument.value.values;\n                // merge values of two lists\n                existingArg.value.values = deduplicateLists(source, target, (targetVal, source) => {\n                    const value = targetVal.value;\n                    return !value || !source.some((sourceVal) => sourceVal.value === value);\n                });\n            }\n            else {\n                existingArg.value = argument.value;\n            }\n        }\n        else {\n            result.push(argument);\n        }\n    }\n    return result;\n}\nfunction deduplicateDirectives(directives) {\n    return directives\n        .map((directive, i, all) => {\n        const firstAt = all.findIndex(d => d.name.value === directive.name.value);\n        if (firstAt !== i) {\n            const dup = all[firstAt];\n            directive.arguments = mergeArguments(directive.arguments, dup.arguments);\n            return null;\n        }\n        return directive;\n    })\n        .filter(utils_1.isSome);\n}\nfunction mergeDirectives(d1 = [], d2 = [], config) {\n    const reverseOrder = config && config.reverseDirectives;\n    const asNext = reverseOrder ? d1 : d2;\n    const asFirst = reverseOrder ? d2 : d1;\n    const result = deduplicateDirectives([...asNext]);\n    for (const directive of asFirst) {\n        if (directiveAlreadyExists(result, directive)) {\n            const existingDirectiveIndex = result.findIndex(d => d.name.value === directive.name.value);\n            const existingDirective = result[existingDirectiveIndex];\n            result[existingDirectiveIndex].arguments = mergeArguments(directive.arguments || [], existingDirective.arguments || []);\n        }\n        else {\n            result.push(directive);\n        }\n    }\n    return result;\n}\nexports.mergeDirectives = mergeDirectives;\nfunction validateInputs(node, existingNode) {\n    const printedNode = (0, graphql_1.print)({\n        ...node,\n        description: undefined,\n    });\n    const printedExistingNode = (0, graphql_1.print)({\n        ...existingNode,\n        description: undefined,\n    });\n    // eslint-disable-next-line\n    const leaveInputs = new RegExp('(directive @w*d*)|( on .*$)', 'g');\n    const sameArguments = printedNode.replace(leaveInputs, '') === printedExistingNode.replace(leaveInputs, '');\n    if (!sameArguments) {\n        throw new Error(`Unable to merge GraphQL directive \"${node.name.value}\". \\nExisting directive:  \\n\\t${printedExistingNode} \\nReceived directive: \\n\\t${printedNode}`);\n    }\n}\nfunction mergeDirective(node, existingNode) {\n    if (existingNode) {\n        validateInputs(node, existingNode);\n        return {\n            ...node,\n            locations: [\n                ...existingNode.locations,\n                ...node.locations.filter(name => !nameAlreadyExists(name, existingNode.locations)),\n            ],\n        };\n    }\n    return node;\n}\nexports.mergeDirective = mergeDirective;\nfunction deduplicateLists(source, target, filterFn) {\n    return source.concat(target.filter(val => filterFn(val, source)));\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3456, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/enum-values.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeEnumValues = void 0;\nconst directives_js_1 = require(\"./directives.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction mergeEnumValues(first, second, config) {\n    if (config === null || config === void 0 ? void 0 : config.consistentEnumMerge) {\n        const reversed = [];\n        if (first) {\n            reversed.push(...first);\n        }\n        first = second;\n        second = reversed;\n    }\n    const enumValueMap = new Map();\n    if (first) {\n        for (const firstValue of first) {\n            enumValueMap.set(firstValue.name.value, firstValue);\n        }\n    }\n    if (second) {\n        for (const secondValue of second) {\n            const enumValue = secondValue.name.value;\n            if (enumValueMap.has(enumValue)) {\n                const firstValue = enumValueMap.get(enumValue);\n                firstValue.description = secondValue.description || firstValue.description;\n                firstValue.directives = (0, directives_js_1.mergeDirectives)(secondValue.directives, firstValue.directives);\n            }\n            else {\n                enumValueMap.set(enumValue, secondValue);\n            }\n        }\n    }\n    const result = [...enumValueMap.values()];\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeEnumValues = mergeEnumValues;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG,KAAK;AAC/B,MAAM;AACN,MAAM;AACN,SAAS,gBAAgB,KAAK,EAAE,MAAM,EAAE,MAAM;IAC1C,IAAI,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,mBAAmB,EAAE;QAC5E,MAAM,WAAW,EAAE;QACnB,IAAI,OAAO;YACP,SAAS,IAAI,IAAI;QACrB;QACA,QAAQ;QACR,SAAS;IACb;IACA,MAAM,eAAe,IAAI;IACzB,IAAI,OAAO;QACP,KAAK,MAAM,cAAc,MAAO;YAC5B,aAAa,GAAG,CAAC,WAAW,IAAI,CAAC,KAAK,EAAE;QAC5C;IACJ;IACA,IAAI,QAAQ;QACR,KAAK,MAAM,eAAe,OAAQ;YAC9B,MAAM,YAAY,YAAY,IAAI,CAAC,KAAK;YACxC,IAAI,aAAa,GAAG,CAAC,YAAY;gBAC7B,MAAM,aAAa,aAAa,GAAG,CAAC;gBACpC,WAAW,WAAW,GAAG,YAAY,WAAW,IAAI,WAAW,WAAW;gBAC1E,WAAW,UAAU,GAAG,CAAC,GAAG,gBAAgB,eAAe,EAAE,YAAY,UAAU,EAAE,WAAW,UAAU;YAC9G,OACK;gBACD,aAAa,GAAG,CAAC,WAAW;YAChC;QACJ;IACJ;IACA,MAAM,SAAS;WAAI,aAAa,MAAM;KAAG;IACzC,IAAI,UAAU,OAAO,IAAI,EAAE;QACvB,OAAO,IAAI,CAAC,QAAQ,YAAY;IACpC;IACA,OAAO;AACX;AACA,QAAQ,eAAe,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3504, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/enum.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeEnum = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nconst enum_values_js_1 = require(\"./enum-values.js\");\nfunction mergeEnum(e1, e2, config) {\n    if (e2) {\n        return {\n            name: e1.name,\n            description: e1['description'] || e2['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || e1.kind === 'EnumTypeDefinition' || e2.kind === 'EnumTypeDefinition'\n                ? 'EnumTypeDefinition'\n                : 'EnumTypeExtension',\n            loc: e1.loc,\n            directives: (0, directives_js_1.mergeDirectives)(e1.directives, e2.directives, config),\n            values: (0, enum_values_js_1.mergeEnumValues)(e1.values, e2.values, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...e1,\n            kind: graphql_1.Kind.ENUM_TYPE_DEFINITION,\n        }\n        : e1;\n}\nexports.mergeEnum = mergeEnum;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,SAAS,GAAG,KAAK;AACzB,MAAM;AACN,MAAM;AACN,MAAM;AACN,SAAS,UAAU,EAAE,EAAE,EAAE,EAAE,MAAM;IAC7B,IAAI,IAAI;QACJ,OAAO;YACH,MAAM,GAAG,IAAI;YACb,aAAa,EAAE,CAAC,cAAc,IAAI,EAAE,CAAC,cAAc;YACnD,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAAK,GAAG,IAAI,KAAK,wBAAwB,GAAG,IAAI,KAAK,uBAC9H,uBACA;YACN,KAAK,GAAG,GAAG;YACX,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,GAAG,UAAU,EAAE,GAAG,UAAU,EAAE;YAC/E,QAAQ,CAAC,GAAG,iBAAiB,eAAe,EAAE,GAAG,MAAM,EAAE,GAAG,MAAM,EAAE;QACxE;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,EAAE;QACL,MAAM,UAAU,IAAI,CAAC,oBAAoB;IAC7C,IACE;AACV;AACA,QAAQ,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3534, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultStringComparator = exports.CompareVal = exports.printTypeNode = exports.isNonNullTypeNode = exports.isListTypeNode = exports.isWrappingTypeNode = exports.extractType = exports.isSourceTypes = exports.isStringTypes = void 0;\nconst graphql_1 = require(\"graphql\");\nfunction isStringTypes(types) {\n    return typeof types === 'string';\n}\nexports.isStringTypes = isStringTypes;\nfunction isSourceTypes(types) {\n    return types instanceof graphql_1.Source;\n}\nexports.isSourceTypes = isSourceTypes;\nfunction extractType(type) {\n    let visitedType = type;\n    while (visitedType.kind === graphql_1.Kind.LIST_TYPE || visitedType.kind === 'NonNullType') {\n        visitedType = visitedType.type;\n    }\n    return visitedType;\n}\nexports.extractType = extractType;\nfunction isWrappingTypeNode(type) {\n    return type.kind !== graphql_1.Kind.NAMED_TYPE;\n}\nexports.isWrappingTypeNode = isWrappingTypeNode;\nfunction isListTypeNode(type) {\n    return type.kind === graphql_1.Kind.LIST_TYPE;\n}\nexports.isListTypeNode = isListTypeNode;\nfunction isNonNullTypeNode(type) {\n    return type.kind === graphql_1.Kind.NON_NULL_TYPE;\n}\nexports.isNonNullTypeNode = isNonNullTypeNode;\nfunction printTypeNode(type) {\n    if (isListTypeNode(type)) {\n        return `[${printTypeNode(type.type)}]`;\n    }\n    if (isNonNullTypeNode(type)) {\n        return `${printTypeNode(type.type)}!`;\n    }\n    return type.name.value;\n}\nexports.printTypeNode = printTypeNode;\nvar CompareVal;\n(function (CompareVal) {\n    CompareVal[CompareVal[\"A_SMALLER_THAN_B\"] = -1] = \"A_SMALLER_THAN_B\";\n    CompareVal[CompareVal[\"A_EQUALS_B\"] = 0] = \"A_EQUALS_B\";\n    CompareVal[CompareVal[\"A_GREATER_THAN_B\"] = 1] = \"A_GREATER_THAN_B\";\n})(CompareVal = exports.CompareVal || (exports.CompareVal = {}));\nfunction defaultStringComparator(a, b) {\n    if (a == null && b == null) {\n        return CompareVal.A_EQUALS_B;\n    }\n    if (a == null) {\n        return CompareVal.A_SMALLER_THAN_B;\n    }\n    if (b == null) {\n        return CompareVal.A_GREATER_THAN_B;\n    }\n    if (a < b)\n        return CompareVal.A_SMALLER_THAN_B;\n    if (a > b)\n        return CompareVal.A_GREATER_THAN_B;\n    return CompareVal.A_EQUALS_B;\n}\nexports.defaultStringComparator = defaultStringComparator;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,uBAAuB,GAAG,QAAQ,UAAU,GAAG,QAAQ,aAAa,GAAG,QAAQ,iBAAiB,GAAG,QAAQ,cAAc,GAAG,QAAQ,kBAAkB,GAAG,QAAQ,WAAW,GAAG,QAAQ,aAAa,GAAG,QAAQ,aAAa,GAAG,KAAK;AAC5O,MAAM;AACN,SAAS,cAAc,KAAK;IACxB,OAAO,OAAO,UAAU;AAC5B;AACA,QAAQ,aAAa,GAAG;AACxB,SAAS,cAAc,KAAK;IACxB,OAAO,iBAAiB,UAAU,MAAM;AAC5C;AACA,QAAQ,aAAa,GAAG;AACxB,SAAS,YAAY,IAAI;IACrB,IAAI,cAAc;IAClB,MAAO,YAAY,IAAI,KAAK,UAAU,IAAI,CAAC,SAAS,IAAI,YAAY,IAAI,KAAK,cAAe;QACxF,cAAc,YAAY,IAAI;IAClC;IACA,OAAO;AACX;AACA,QAAQ,WAAW,GAAG;AACtB,SAAS,mBAAmB,IAAI;IAC5B,OAAO,KAAK,IAAI,KAAK,UAAU,IAAI,CAAC,UAAU;AAClD;AACA,QAAQ,kBAAkB,GAAG;AAC7B,SAAS,eAAe,IAAI;IACxB,OAAO,KAAK,IAAI,KAAK,UAAU,IAAI,CAAC,SAAS;AACjD;AACA,QAAQ,cAAc,GAAG;AACzB,SAAS,kBAAkB,IAAI;IAC3B,OAAO,KAAK,IAAI,KAAK,UAAU,IAAI,CAAC,aAAa;AACrD;AACA,QAAQ,iBAAiB,GAAG;AAC5B,SAAS,cAAc,IAAI;IACvB,IAAI,eAAe,OAAO;QACtB,OAAO,CAAC,CAAC,EAAE,cAAc,KAAK,IAAI,EAAE,CAAC,CAAC;IAC1C;IACA,IAAI,kBAAkB,OAAO;QACzB,OAAO,GAAG,cAAc,KAAK,IAAI,EAAE,CAAC,CAAC;IACzC;IACA,OAAO,KAAK,IAAI,CAAC,KAAK;AAC1B;AACA,QAAQ,aAAa,GAAG;AACxB,IAAI;AACJ,CAAC,SAAU,UAAU;IACjB,UAAU,CAAC,UAAU,CAAC,mBAAmB,GAAG,CAAC,EAAE,GAAG;IAClD,UAAU,CAAC,UAAU,CAAC,aAAa,GAAG,EAAE,GAAG;IAC3C,UAAU,CAAC,UAAU,CAAC,mBAAmB,GAAG,EAAE,GAAG;AACrD,CAAC,EAAE,aAAa,QAAQ,UAAU,IAAI,CAAC,QAAQ,UAAU,GAAG,CAAC,CAAC;AAC9D,SAAS,wBAAwB,CAAC,EAAE,CAAC;IACjC,IAAI,KAAK,QAAQ,KAAK,MAAM;QACxB,OAAO,WAAW,UAAU;IAChC;IACA,IAAI,KAAK,MAAM;QACX,OAAO,WAAW,gBAAgB;IACtC;IACA,IAAI,KAAK,MAAM;QACX,OAAO,WAAW,gBAAgB;IACtC;IACA,IAAI,IAAI,GACJ,OAAO,WAAW,gBAAgB;IACtC,IAAI,IAAI,GACJ,OAAO,WAAW,gBAAgB;IACtC,OAAO,WAAW,UAAU;AAChC;AACA,QAAQ,uBAAuB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3604, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/fields.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeFields = void 0;\nconst utils_js_1 = require(\"./utils.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst arguments_js_1 = require(\"./arguments.js\");\nfunction fieldAlreadyExists(fieldsArr, otherField, config) {\n    const result = fieldsArr.find(field => field.name.value === otherField.name.value);\n    if (result && !(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n        const t1 = (0, utils_js_1.extractType)(result.type);\n        const t2 = (0, utils_js_1.extractType)(otherField.type);\n        if (t1.name.value !== t2.name.value) {\n            throw new Error(`Field \"${otherField.name.value}\" already defined with a different type. Declared as \"${t1.name.value}\", but you tried to override with \"${t2.name.value}\"`);\n        }\n    }\n    return !!result;\n}\nfunction mergeFields(type, f1, f2, config) {\n    const result = [];\n    if (f2 != null) {\n        result.push(...f2);\n    }\n    if (f1 != null) {\n        for (const field of f1) {\n            if (fieldAlreadyExists(result, field, config)) {\n                const existing = result.find((f) => f.name.value === field.name.value);\n                if (!(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n                    if (config === null || config === void 0 ? void 0 : config.throwOnConflict) {\n                        preventConflicts(type, existing, field, false);\n                    }\n                    else {\n                        preventConflicts(type, existing, field, true);\n                    }\n                    if ((0, utils_js_1.isNonNullTypeNode)(field.type) && !(0, utils_js_1.isNonNullTypeNode)(existing.type)) {\n                        existing.type = field.type;\n                    }\n                }\n                existing.arguments = (0, arguments_js_1.mergeArguments)(field['arguments'] || [], existing.arguments || [], config);\n                existing.directives = (0, directives_js_1.mergeDirectives)(field.directives, existing.directives, config);\n                existing.description = field.description || existing.description;\n            }\n            else {\n                result.push(field);\n            }\n        }\n    }\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    if (config && config.exclusions) {\n        const exclusions = config.exclusions;\n        return result.filter(field => !exclusions.includes(`${type.name.value}.${field.name.value}`));\n    }\n    return result;\n}\nexports.mergeFields = mergeFields;\nfunction preventConflicts(type, a, b, ignoreNullability = false) {\n    const aType = (0, utils_js_1.printTypeNode)(a.type);\n    const bType = (0, utils_js_1.printTypeNode)(b.type);\n    if (aType !== bType && !safeChangeForFieldType(a.type, b.type, ignoreNullability)) {\n        throw new Error(`Field '${type.name.value}.${a.name.value}' changed type from '${aType}' to '${bType}'`);\n    }\n}\nfunction safeChangeForFieldType(oldType, newType, ignoreNullability = false) {\n    // both are named\n    if (!(0, utils_js_1.isWrappingTypeNode)(oldType) && !(0, utils_js_1.isWrappingTypeNode)(newType)) {\n        return oldType.toString() === newType.toString();\n    }\n    // new is non-null\n    if ((0, utils_js_1.isNonNullTypeNode)(newType)) {\n        const ofType = (0, utils_js_1.isNonNullTypeNode)(oldType) ? oldType.type : oldType;\n        return safeChangeForFieldType(ofType, newType.type);\n    }\n    // old is non-null\n    if ((0, utils_js_1.isNonNullTypeNode)(oldType)) {\n        return safeChangeForFieldType(newType, oldType, ignoreNullability);\n    }\n    // old is list\n    if ((0, utils_js_1.isListTypeNode)(oldType)) {\n        return (((0, utils_js_1.isListTypeNode)(newType) && safeChangeForFieldType(oldType.type, newType.type)) ||\n            ((0, utils_js_1.isNonNullTypeNode)(newType) && safeChangeForFieldType(oldType, newType['type'])));\n    }\n    return false;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3693, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/input-type.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeInputType = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nfunction mergeInputType(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InputObjectTypeDefinition' ||\n                    existingNode.kind === 'InputObjectTypeDefinition'\n                    ? 'InputObjectTypeDefinition'\n                    : 'InputObjectTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL input type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeInputType = mergeInputType;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN,MAAM;AACN,MAAM;AACN,SAAS,eAAe,IAAI,EAAE,YAAY,EAAE,MAAM;IAC9C,IAAI,cAAc;QACd,IAAI;YACA,OAAO;gBACH,MAAM,KAAK,IAAI;gBACf,aAAa,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc;gBAC/D,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAC3E,KAAK,IAAI,KAAK,+BACd,aAAa,IAAI,KAAK,8BACpB,8BACA;gBACN,KAAK,KAAK,GAAG;gBACb,QAAQ,CAAC,GAAG,YAAY,WAAW,EAAE,MAAM,KAAK,MAAM,EAAE,aAAa,MAAM,EAAE;gBAC7E,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE;YAC/F;QACJ,EACA,OAAO,GAAG;YACN,MAAM,IAAI,MAAM,CAAC,oCAAoC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE;QAC3F;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,IAAI;QACP,MAAM,UAAU,IAAI,CAAC,4BAA4B;IACrD,IACE;AACV;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3727, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/interface.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeInterface = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst index_js_1 = require(\"./index.js\");\nfunction mergeInterface(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InterfaceTypeDefinition' ||\n                    existingNode.kind === 'InterfaceTypeDefinition'\n                    ? 'InterfaceTypeDefinition'\n                    : 'InterfaceTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n                interfaces: node['interfaces']\n                    ? (0, index_js_1.mergeNamedTypeArray)(node['interfaces'], existingNode['interfaces'], config)\n                    : undefined,\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL interface \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.INTERFACE_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeInterface = mergeInterface;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,SAAS,eAAe,IAAI,EAAE,YAAY,EAAE,MAAM;IAC9C,IAAI,cAAc;QACd,IAAI;YACA,OAAO;gBACH,MAAM,KAAK,IAAI;gBACf,aAAa,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc;gBAC/D,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAC3E,KAAK,IAAI,KAAK,6BACd,aAAa,IAAI,KAAK,4BACpB,4BACA;gBACN,KAAK,KAAK,GAAG;gBACb,QAAQ,CAAC,GAAG,YAAY,WAAW,EAAE,MAAM,KAAK,MAAM,EAAE,aAAa,MAAM,EAAE;gBAC7E,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE;gBAC3F,YAAY,IAAI,CAAC,aAAa,GACxB,CAAC,GAAG,WAAW,mBAAmB,EAAE,IAAI,CAAC,aAAa,EAAE,YAAY,CAAC,aAAa,EAAE,UACpF;YACV;QACJ,EACA,OAAO,GAAG;YACN,MAAM,IAAI,MAAM,CAAC,mCAAmC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE;QAC1F;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,IAAI;QACP,MAAM,UAAU,IAAI,CAAC,yBAAyB;IAClD,IACE;AACV;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3763, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/merge-named-type-array.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeNamedTypeArray = void 0;\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction alreadyExists(arr, other) {\n    return !!arr.find(i => i.name.value === other.name.value);\n}\nfunction mergeNamedTypeArray(first = [], second = [], config = {}) {\n    const result = [...second, ...first.filter(d => !alreadyExists(second, d))];\n    if (config && config.sort) {\n        result.sort(utils_1.compareNodes);\n    }\n    return result;\n}\nexports.mergeNamedTypeArray = mergeNamedTypeArray;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,mBAAmB,GAAG,KAAK;AACnC,MAAM;AACN,SAAS,cAAc,GAAG,EAAE,KAAK;IAC7B,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,CAAC,KAAK,KAAK,MAAM,IAAI,CAAC,KAAK;AAC5D;AACA,SAAS,oBAAoB,QAAQ,EAAE,EAAE,SAAS,EAAE,EAAE,SAAS,CAAC,CAAC;IAC7D,MAAM,SAAS;WAAI;WAAW,MAAM,MAAM,CAAC,CAAA,IAAK,CAAC,cAAc,QAAQ;KAAI;IAC3E,IAAI,UAAU,OAAO,IAAI,EAAE;QACvB,OAAO,IAAI,CAAC,QAAQ,YAAY;IACpC;IACA,OAAO;AACX;AACA,QAAQ,mBAAmB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3788, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/type.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeType = void 0;\nconst graphql_1 = require(\"graphql\");\nconst fields_js_1 = require(\"./fields.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst merge_named_type_array_js_1 = require(\"./merge-named-type-array.js\");\nfunction mergeType(node, existingNode, config) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'ObjectTypeDefinition' ||\n                    existingNode.kind === 'ObjectTypeDefinition'\n                    ? 'ObjectTypeDefinition'\n                    : 'ObjectTypeExtension',\n                loc: node.loc,\n                fields: (0, fields_js_1.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n                interfaces: (0, merge_named_type_array_js_1.mergeNamedTypeArray)(node.interfaces, existingNode.interfaces, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeType = mergeType;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,SAAS,GAAG,KAAK;AACzB,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,SAAS,UAAU,IAAI,EAAE,YAAY,EAAE,MAAM;IACzC,IAAI,cAAc;QACd,IAAI;YACA,OAAO;gBACH,MAAM,KAAK,IAAI;gBACf,aAAa,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc;gBAC/D,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAC3E,KAAK,IAAI,KAAK,0BACd,aAAa,IAAI,KAAK,yBACpB,yBACA;gBACN,KAAK,KAAK,GAAG;gBACb,QAAQ,CAAC,GAAG,YAAY,WAAW,EAAE,MAAM,KAAK,MAAM,EAAE,aAAa,MAAM,EAAE;gBAC7E,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE;gBAC3F,YAAY,CAAC,GAAG,4BAA4B,mBAAmB,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE;YAC/G;QACJ,EACA,OAAO,GAAG;YACN,MAAM,IAAI,MAAM,CAAC,8BAA8B,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE;QACrF;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,IAAI;QACP,MAAM,UAAU,IAAI,CAAC,sBAAsB;IAC/C,IACE;AACV;AACA,QAAQ,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3824, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/scalar.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeScalar = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nfunction mergeScalar(node, existingNode, config) {\n    if (existingNode) {\n        return {\n            name: node.name,\n            description: node['description'] || existingNode['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                node.kind === 'ScalarTypeDefinition' ||\n                existingNode.kind === 'ScalarTypeDefinition'\n                ? 'ScalarTypeDefinition'\n                : 'ScalarTypeExtension',\n            loc: node.loc,\n            directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.SCALAR_TYPE_DEFINITION,\n        }\n        : node;\n}\nexports.mergeScalar = mergeScalar;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,WAAW,GAAG,KAAK;AAC3B,MAAM;AACN,MAAM;AACN,SAAS,YAAY,IAAI,EAAE,YAAY,EAAE,MAAM;IAC3C,IAAI,cAAc;QACd,OAAO;YACH,MAAM,KAAK,IAAI;YACf,aAAa,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc;YAC/D,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAC3E,KAAK,IAAI,KAAK,0BACd,aAAa,IAAI,KAAK,yBACpB,yBACA;YACN,KAAK,KAAK,GAAG;YACb,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE;QAC/F;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,IAAI;QACP,MAAM,UAAU,IAAI,CAAC,sBAAsB;IAC/C,IACE;AACV;AACA,QAAQ,WAAW,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3852, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/union.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeUnion = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nconst merge_named_type_array_js_1 = require(\"./merge-named-type-array.js\");\nfunction mergeUnion(first, second, config) {\n    if (second) {\n        return {\n            name: first.name,\n            description: first['description'] || second['description'],\n            // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n            directives: (0, directives_js_1.mergeDirectives)(first.directives, second.directives, config),\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || first.kind === 'UnionTypeDefinition' || second.kind === 'UnionTypeDefinition'\n                ? graphql_1.Kind.UNION_TYPE_DEFINITION\n                : graphql_1.Kind.UNION_TYPE_EXTENSION,\n            loc: first.loc,\n            types: (0, merge_named_type_array_js_1.mergeNamedTypeArray)(first.types, second.types, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...first,\n            kind: graphql_1.Kind.UNION_TYPE_DEFINITION,\n        }\n        : first;\n}\nexports.mergeUnion = mergeUnion;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,UAAU,GAAG,KAAK;AAC1B,MAAM;AACN,MAAM;AACN,MAAM;AACN,SAAS,WAAW,KAAK,EAAE,MAAM,EAAE,MAAM;IACrC,IAAI,QAAQ;QACR,OAAO;YACH,MAAM,MAAM,IAAI;YAChB,aAAa,KAAK,CAAC,cAAc,IAAI,MAAM,CAAC,cAAc;YAC1D,0HAA0H;YAC1H,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,MAAM,UAAU,EAAE,OAAO,UAAU,EAAE;YACtF,MAAM,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,KAAK,MAAM,IAAI,KAAK,yBAAyB,OAAO,IAAI,KAAK,wBACtI,UAAU,IAAI,CAAC,qBAAqB,GACpC,UAAU,IAAI,CAAC,oBAAoB;YACzC,KAAK,MAAM,GAAG;YACd,OAAO,CAAC,GAAG,4BAA4B,mBAAmB,EAAE,MAAM,KAAK,EAAE,OAAO,KAAK,EAAE;QAC3F;IACJ;IACA,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC1E;QACE,GAAG,KAAK;QACR,MAAM,UAAU,IAAI,CAAC,qBAAqB;IAC9C,IACE;AACV;AACA,QAAQ,UAAU,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3883, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/schema-def.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeSchemaDefs = exports.DEFAULT_OPERATION_TYPE_NAME_MAP = void 0;\nconst graphql_1 = require(\"graphql\");\nconst directives_js_1 = require(\"./directives.js\");\nexports.DEFAULT_OPERATION_TYPE_NAME_MAP = {\n    query: 'Query',\n    mutation: 'Mutation',\n    subscription: 'Subscription',\n};\nfunction mergeOperationTypes(opNodeList = [], existingOpNodeList = []) {\n    const finalOpNodeList = [];\n    for (const opNodeType in exports.DEFAULT_OPERATION_TYPE_NAME_MAP) {\n        const opNode = opNodeList.find(n => n.operation === opNodeType) || existingOpNodeList.find(n => n.operation === opNodeType);\n        if (opNode) {\n            finalOpNodeList.push(opNode);\n        }\n    }\n    return finalOpNodeList;\n}\nfunction mergeSchemaDefs(node, existingNode, config) {\n    if (existingNode) {\n        return {\n            kind: node.kind === graphql_1.Kind.SCHEMA_DEFINITION || existingNode.kind === graphql_1.Kind.SCHEMA_DEFINITION\n                ? graphql_1.Kind.SCHEMA_DEFINITION\n                : graphql_1.Kind.SCHEMA_EXTENSION,\n            description: node['description'] || existingNode['description'],\n            directives: (0, directives_js_1.mergeDirectives)(node.directives, existingNode.directives, config),\n            operationTypes: mergeOperationTypes(node.operationTypes, existingNode.operationTypes),\n        };\n    }\n    return ((config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n        }\n        : node);\n}\nexports.mergeSchemaDefs = mergeSchemaDefs;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,eAAe,GAAG,QAAQ,+BAA+B,GAAG,KAAK;AACzE,MAAM;AACN,MAAM;AACN,QAAQ,+BAA+B,GAAG;IACtC,OAAO;IACP,UAAU;IACV,cAAc;AAClB;AACA,SAAS,oBAAoB,aAAa,EAAE,EAAE,qBAAqB,EAAE;IACjE,MAAM,kBAAkB,EAAE;IAC1B,IAAK,MAAM,cAAc,QAAQ,+BAA+B,CAAE;QAC9D,MAAM,SAAS,WAAW,IAAI,CAAC,CAAA,IAAK,EAAE,SAAS,KAAK,eAAe,mBAAmB,IAAI,CAAC,CAAA,IAAK,EAAE,SAAS,KAAK;QAChH,IAAI,QAAQ;YACR,gBAAgB,IAAI,CAAC;QACzB;IACJ;IACA,OAAO;AACX;AACA,SAAS,gBAAgB,IAAI,EAAE,YAAY,EAAE,MAAM;IAC/C,IAAI,cAAc;QACd,OAAO;YACH,MAAM,KAAK,IAAI,KAAK,UAAU,IAAI,CAAC,iBAAiB,IAAI,aAAa,IAAI,KAAK,UAAU,IAAI,CAAC,iBAAiB,GACxG,UAAU,IAAI,CAAC,iBAAiB,GAChC,UAAU,IAAI,CAAC,gBAAgB;YACrC,aAAa,IAAI,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc;YAC/D,YAAY,CAAC,GAAG,gBAAgB,eAAe,EAAE,KAAK,UAAU,EAAE,aAAa,UAAU,EAAE;YAC3F,gBAAgB,oBAAoB,KAAK,cAAc,EAAE,aAAa,cAAc;QACxF;IACJ;IACA,OAAQ,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,iBAAiB,IAC3E;QACE,GAAG,IAAI;QACP,MAAM,UAAU,IAAI,CAAC,iBAAiB;IAC1C,IACE;AACV;AACA,QAAQ,eAAe,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3925, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/merge-nodes.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeGraphQLNodes = exports.isNamedDefinitionNode = exports.schemaDefSymbol = void 0;\nconst graphql_1 = require(\"graphql\");\nconst type_js_1 = require(\"./type.js\");\nconst enum_js_1 = require(\"./enum.js\");\nconst scalar_js_1 = require(\"./scalar.js\");\nconst union_js_1 = require(\"./union.js\");\nconst input_type_js_1 = require(\"./input-type.js\");\nconst interface_js_1 = require(\"./interface.js\");\nconst directives_js_1 = require(\"./directives.js\");\nconst schema_def_js_1 = require(\"./schema-def.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nexports.schemaDefSymbol = 'SCHEMA_DEF_SYMBOL';\nfunction isNamedDefinitionNode(definitionNode) {\n    return 'name' in definitionNode;\n}\nexports.isNamedDefinitionNode = isNamedDefinitionNode;\nfunction mergeGraphQLNodes(nodes, config) {\n    var _a, _b, _c;\n    const mergedResultMap = {};\n    for (const nodeDefinition of nodes) {\n        if (isNamedDefinitionNode(nodeDefinition)) {\n            const name = (_a = nodeDefinition.name) === null || _a === void 0 ? void 0 : _a.value;\n            if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n                (0, utils_1.collectComment)(nodeDefinition);\n            }\n            if (name == null) {\n                continue;\n            }\n            if (((_b = config === null || config === void 0 ? void 0 : config.exclusions) === null || _b === void 0 ? void 0 : _b.includes(name + '.*')) || ((_c = config === null || config === void 0 ? void 0 : config.exclusions) === null || _c === void 0 ? void 0 : _c.includes(name))) {\n                delete mergedResultMap[name];\n            }\n            else {\n                switch (nodeDefinition.kind) {\n                    case graphql_1.Kind.OBJECT_TYPE_DEFINITION:\n                    case graphql_1.Kind.OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, type_js_1.mergeType)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.ENUM_TYPE_DEFINITION:\n                    case graphql_1.Kind.ENUM_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, enum_js_1.mergeEnum)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.UNION_TYPE_DEFINITION:\n                    case graphql_1.Kind.UNION_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, union_js_1.mergeUnion)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.SCALAR_TYPE_DEFINITION:\n                    case graphql_1.Kind.SCALAR_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, scalar_js_1.mergeScalar)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n                    case graphql_1.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, input_type_js_1.mergeInputType)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.INTERFACE_TYPE_DEFINITION:\n                    case graphql_1.Kind.INTERFACE_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0, interface_js_1.mergeInterface)(nodeDefinition, mergedResultMap[name], config);\n                        break;\n                    case graphql_1.Kind.DIRECTIVE_DEFINITION:\n                        mergedResultMap[name] = (0, directives_js_1.mergeDirective)(nodeDefinition, mergedResultMap[name]);\n                        break;\n                }\n            }\n        }\n        else if (nodeDefinition.kind === graphql_1.Kind.SCHEMA_DEFINITION || nodeDefinition.kind === graphql_1.Kind.SCHEMA_EXTENSION) {\n            mergedResultMap[exports.schemaDefSymbol] = (0, schema_def_js_1.mergeSchemaDefs)(nodeDefinition, mergedResultMap[exports.schemaDefSymbol], config);\n        }\n    }\n    return mergedResultMap;\n}\nexports.mergeGraphQLNodes = mergeGraphQLNodes;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4002, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/merge-typedefs.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeGraphQLTypes = exports.mergeTypeDefs = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_js_1 = require(\"./utils.js\");\nconst merge_nodes_js_1 = require(\"./merge-nodes.js\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nconst schema_def_js_1 = require(\"./schema-def.js\");\nfunction mergeTypeDefs(typeSource, config) {\n    (0, utils_1.resetComments)();\n    const doc = {\n        kind: graphql_1.Kind.DOCUMENT,\n        definitions: mergeGraphQLTypes(typeSource, {\n            useSchemaDefinition: true,\n            forceSchemaDefinition: false,\n            throwOnConflict: false,\n            commentDescriptions: false,\n            ...config,\n        }),\n    };\n    let result;\n    if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n        result = (0, utils_1.printWithComments)(doc);\n    }\n    else {\n        result = doc;\n    }\n    (0, utils_1.resetComments)();\n    return result;\n}\nexports.mergeTypeDefs = mergeTypeDefs;\nfunction visitTypeSources(typeSource, options, allNodes = [], visitedTypeSources = new Set()) {\n    if (typeSource && !visitedTypeSources.has(typeSource)) {\n        visitedTypeSources.add(typeSource);\n        if (typeof typeSource === 'function') {\n            visitTypeSources(typeSource(), options, allNodes, visitedTypeSources);\n        }\n        else if (Array.isArray(typeSource)) {\n            for (const type of typeSource) {\n                visitTypeSources(type, options, allNodes, visitedTypeSources);\n            }\n        }\n        else if ((0, graphql_1.isSchema)(typeSource)) {\n            const documentNode = (0, utils_1.getDocumentNodeFromSchema)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allNodes, visitedTypeSources);\n        }\n        else if ((0, utils_js_1.isStringTypes)(typeSource) || (0, utils_js_1.isSourceTypes)(typeSource)) {\n            const documentNode = (0, graphql_1.parse)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allNodes, visitedTypeSources);\n        }\n        else if (typeof typeSource === 'object' && (0, graphql_1.isDefinitionNode)(typeSource)) {\n            allNodes.push(typeSource);\n        }\n        else if ((0, utils_1.isDocumentNode)(typeSource)) {\n            visitTypeSources(typeSource.definitions, options, allNodes, visitedTypeSources);\n        }\n        else {\n            throw new Error(`typeDefs must contain only strings, documents, schemas, or functions, got ${typeof typeSource}`);\n        }\n    }\n    return allNodes;\n}\nfunction mergeGraphQLTypes(typeSource, config) {\n    var _a, _b, _c;\n    (0, utils_1.resetComments)();\n    const allNodes = visitTypeSources(typeSource, config);\n    const mergedNodes = (0, merge_nodes_js_1.mergeGraphQLNodes)(allNodes, config);\n    if (config === null || config === void 0 ? void 0 : config.useSchemaDefinition) {\n        // XXX: right now we don't handle multiple schema definitions\n        const schemaDef = mergedNodes[merge_nodes_js_1.schemaDefSymbol] || {\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n            operationTypes: [],\n        };\n        const operationTypes = schemaDef.operationTypes;\n        for (const opTypeDefNodeType in schema_def_js_1.DEFAULT_OPERATION_TYPE_NAME_MAP) {\n            const opTypeDefNode = operationTypes.find(operationType => operationType.operation === opTypeDefNodeType);\n            if (!opTypeDefNode) {\n                const possibleRootTypeName = schema_def_js_1.DEFAULT_OPERATION_TYPE_NAME_MAP[opTypeDefNodeType];\n                const existingPossibleRootType = mergedNodes[possibleRootTypeName];\n                if (existingPossibleRootType != null && existingPossibleRootType.name != null) {\n                    operationTypes.push({\n                        kind: graphql_1.Kind.OPERATION_TYPE_DEFINITION,\n                        type: {\n                            kind: graphql_1.Kind.NAMED_TYPE,\n                            name: existingPossibleRootType.name,\n                        },\n                        operation: opTypeDefNodeType,\n                    });\n                }\n            }\n        }\n        if (((_a = schemaDef === null || schemaDef === void 0 ? void 0 : schemaDef.operationTypes) === null || _a === void 0 ? void 0 : _a.length) != null && schemaDef.operationTypes.length > 0) {\n            mergedNodes[merge_nodes_js_1.schemaDefSymbol] = schemaDef;\n        }\n    }\n    if ((config === null || config === void 0 ? void 0 : config.forceSchemaDefinition) && !((_c = (_b = mergedNodes[merge_nodes_js_1.schemaDefSymbol]) === null || _b === void 0 ? void 0 : _b.operationTypes) === null || _c === void 0 ? void 0 : _c.length)) {\n        mergedNodes[merge_nodes_js_1.schemaDefSymbol] = {\n            kind: graphql_1.Kind.SCHEMA_DEFINITION,\n            operationTypes: [\n                {\n                    kind: graphql_1.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: 'query',\n                    type: {\n                        kind: graphql_1.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql_1.Kind.NAME,\n                            value: 'Query',\n                        },\n                    },\n                },\n            ],\n        };\n    }\n    const mergedNodeDefinitions = Object.values(mergedNodes);\n    if (config === null || config === void 0 ? void 0 : config.sort) {\n        const sortFn = typeof config.sort === 'function' ? config.sort : utils_js_1.defaultStringComparator;\n        mergedNodeDefinitions.sort((a, b) => { var _a, _b; return sortFn((_a = a.name) === null || _a === void 0 ? void 0 : _a.value, (_b = b.name) === null || _b === void 0 ? void 0 : _b.value); });\n    }\n    return mergedNodeDefinitions;\n}\nexports.mergeGraphQLTypes = mergeGraphQLTypes;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4126, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/typedefs-mergers/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./arguments.js\"), exports);\ntslib_1.__exportStar(require(\"./directives.js\"), exports);\ntslib_1.__exportStar(require(\"./enum-values.js\"), exports);\ntslib_1.__exportStar(require(\"./enum.js\"), exports);\ntslib_1.__exportStar(require(\"./fields.js\"), exports);\ntslib_1.__exportStar(require(\"./input-type.js\"), exports);\ntslib_1.__exportStar(require(\"./interface.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-named-type-array.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-nodes.js\"), exports);\ntslib_1.__exportStar(require(\"./merge-typedefs.js\"), exports);\ntslib_1.__exportStar(require(\"./scalar.js\"), exports);\ntslib_1.__exportStar(require(\"./type.js\"), exports);\ntslib_1.__exportStar(require(\"./union.js\"), exports);\ntslib_1.__exportStar(require(\"./utils.js\"), exports);\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,MAAM;AACN,QAAQ,YAAY,oIAA4B;AAChD,QAAQ,YAAY,qIAA6B;AACjD,QAAQ,YAAY,sIAA8B;AAClD,QAAQ,YAAY,+HAAuB;AAC3C,QAAQ,YAAY,iIAAyB;AAC7C,QAAQ,YAAY,qIAA6B;AACjD,QAAQ,YAAY,oIAA4B;AAChD,QAAQ,YAAY,iJAAyC;AAC7D,QAAQ,YAAY,sIAA8B;AAClD,QAAQ,YAAY,yIAAiC;AACrD,QAAQ,YAAY,iIAAyB;AAC7C,QAAQ,YAAY,+HAAuB;AAC3C,QAAQ,YAAY,gIAAwB;AAC5C,QAAQ,YAAY,gIAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4150, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/extensions.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractExtensionsFromSchema = exports.applyExtensions = exports.mergeExtensions = exports.travelSchemaPossibleExtensions = void 0;\nconst graphql_1 = require(\"graphql\");\nconst utils_1 = require(\"@graphql-tools/utils\");\nfunction travelSchemaPossibleExtensions(schema, hooks) {\n    hooks.onSchema(schema);\n    const typesMap = schema.getTypeMap();\n    for (const [, type] of Object.entries(typesMap)) {\n        const isPredefinedScalar = (0, graphql_1.isScalarType)(type) && (0, graphql_1.isSpecifiedScalarType)(type);\n        const isIntrospection = (0, graphql_1.isIntrospectionType)(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if ((0, graphql_1.isObjectType)(type)) {\n            hooks.onObjectType(type);\n            const fields = type.getFields();\n            for (const [, field] of Object.entries(fields)) {\n                hooks.onObjectField(type, field);\n                const args = field.args || [];\n                for (const arg of args) {\n                    hooks.onObjectFieldArg(type, field, arg);\n                }\n            }\n        }\n        else if ((0, graphql_1.isInterfaceType)(type)) {\n            hooks.onInterface(type);\n            const fields = type.getFields();\n            for (const [, field] of Object.entries(fields)) {\n                hooks.onInterfaceField(type, field);\n                const args = field.args || [];\n                for (const arg of args) {\n                    hooks.onInterfaceFieldArg(type, field, arg);\n                }\n            }\n        }\n        else if ((0, graphql_1.isInputObjectType)(type)) {\n            hooks.onInputType(type);\n            const fields = type.getFields();\n            for (const [, field] of Object.entries(fields)) {\n                hooks.onInputFieldType(type, field);\n            }\n        }\n        else if ((0, graphql_1.isUnionType)(type)) {\n            hooks.onUnion(type);\n        }\n        else if ((0, graphql_1.isScalarType)(type)) {\n            hooks.onScalar(type);\n        }\n        else if ((0, graphql_1.isEnumType)(type)) {\n            hooks.onEnum(type);\n            for (const value of type.getValues()) {\n                hooks.onEnumValue(type, value);\n            }\n        }\n    }\n}\nexports.travelSchemaPossibleExtensions = travelSchemaPossibleExtensions;\nfunction mergeExtensions(extensions) {\n    return (0, utils_1.mergeDeep)(extensions);\n}\nexports.mergeExtensions = mergeExtensions;\nfunction applyExtensionObject(obj, extensions) {\n    if (!obj) {\n        return;\n    }\n    obj.extensions = (0, utils_1.mergeDeep)([obj.extensions || {}, extensions || {}]);\n}\nfunction applyExtensions(schema, extensions) {\n    applyExtensionObject(schema, extensions.schemaExtensions);\n    for (const [typeName, data] of Object.entries(extensions.types || {})) {\n        const type = schema.getType(typeName);\n        if (type) {\n            applyExtensionObject(type, data.extensions);\n            if (data.type === 'object' || data.type === 'interface') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    if (field) {\n                        applyExtensionObject(field, fieldData.extensions);\n                        for (const [arg, argData] of Object.entries(fieldData.arguments)) {\n                            applyExtensionObject(field.args.find(a => a.name === arg), argData);\n                        }\n                    }\n                }\n            }\n            else if (data.type === 'input') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    applyExtensionObject(field, fieldData.extensions);\n                }\n            }\n            else if (data.type === 'enum') {\n                for (const [valueName, valueData] of Object.entries(data.values)) {\n                    const value = type.getValue(valueName);\n                    applyExtensionObject(value, valueData);\n                }\n            }\n        }\n    }\n    return schema;\n}\nexports.applyExtensions = applyExtensions;\nfunction extractExtensionsFromSchema(schema) {\n    const result = {\n        schemaExtensions: {},\n        types: {},\n    };\n    travelSchemaPossibleExtensions(schema, {\n        onSchema: schema => (result.schemaExtensions = schema.extensions || {}),\n        onObjectType: type => (result.types[type.name] = { fields: {}, type: 'object', extensions: type.extensions || {} }),\n        onObjectField: (type, field) => (result.types[type.name].fields[field.name] = {\n            arguments: {},\n            extensions: field.extensions || {},\n        }),\n        onObjectFieldArg: (type, field, arg) => (result.types[type.name].fields[field.name].arguments[arg.name] = arg.extensions || {}),\n        onInterface: type => (result.types[type.name] = { fields: {}, type: 'interface', extensions: type.extensions || {} }),\n        onInterfaceField: (type, field) => (result.types[type.name].fields[field.name] = {\n            arguments: {},\n            extensions: field.extensions || {},\n        }),\n        onInterfaceFieldArg: (type, field, arg) => (result.types[type.name].fields[field.name].arguments[arg.name] =\n            arg.extensions || {}),\n        onEnum: type => (result.types[type.name] = { values: {}, type: 'enum', extensions: type.extensions || {} }),\n        onEnumValue: (type, value) => (result.types[type.name].values[value.name] = value.extensions || {}),\n        onScalar: type => (result.types[type.name] = { type: 'scalar', extensions: type.extensions || {} }),\n        onUnion: type => (result.types[type.name] = { type: 'union', extensions: type.extensions || {} }),\n        onInputType: type => (result.types[type.name] = { fields: {}, type: 'input', extensions: type.extensions || {} }),\n        onInputFieldType: (type, field) => (result.types[type.name].fields[field.name] = { extensions: field.extensions || {} }),\n    });\n    return result;\n}\nexports.extractExtensionsFromSchema = extractExtensionsFromSchema;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4308, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/%40graphql-tools/merge/cjs/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./merge-resolvers.js\"), exports);\ntslib_1.__exportStar(require(\"./typedefs-mergers/index.js\"), exports);\ntslib_1.__exportStar(require(\"./extensions.js\"), exports);\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,MAAM;AACN,QAAQ,YAAY,yHAAkC;AACtD,QAAQ,YAAY,gIAAyC;AAC7D,QAAQ,YAAY,oHAA6B","ignoreList":[0],"debugId":null}}]
}