{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/src/app/components/imagesview/ImagesView.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ImagesView = registerClientReference(\n    function() { throw new Error(\"Attempted to call ImagesView() from the server but ImagesView is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/imagesview/ImagesView.tsx <module evaluation>\",\n    \"ImagesView\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,8EACA","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/src/app/components/imagesview/ImagesView.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ImagesView = registerClientReference(\n    function() { throw new Error(\"Attempted to call ImagesView() from the server but ImagesView is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/imagesview/ImagesView.tsx\",\n    \"ImagesView\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,0DACA","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/src/app/page.tsx"],"sourcesContent":["import { dehydrate, HydrationBoundary, QueryClientProvider, DehydratedState } from \"@tanstack/react-query\";\nimport { queryClient, getProducts } from \"@/lib/api/api\";\nimport { ImagesView } from \"./components/imagesview/ImagesView\";\n\nexport async function getDehydratedState(): Promise<{ dehydratedState: DehydratedState; }> {\n  await queryClient.prefetchQuery({\n      queryKey: [\"products\"],\n      queryFn: () => getProducts()\n  });\n\n  return {\n      dehydratedState: dehydrate(queryClient),\n  }\n}\n\nexport default async function Home() {\n\n  const { dehydratedState } = await getDehydratedState();\n\n\n  return (\n    <div className=\"w-fit\">\n        <HydrationBoundary state={dehydratedState}>\n          <ImagesView imgs={[\"\"]} />\n        </HydrationBoundary>\n\n    </div>\n\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;AAAA;;;;;;AAEA;;;;;AAEO,eAAe;IACpB,MAAM,YAAY,aAAa,CAAC;QAC5B,UAAU;YAAC;SAAW;QACtB,SAAS,IAAM;IACnB;IAEA,OAAO;QACH,iBAAiB,CAAA,GAAA,2KAAA,CAAA,YAAS,AAAD,EAAE;IAC/B;AACF;AAEe,eAAe;IAE5B,MAAM,EAAE,eAAe,EAAE,GAAG,MAAM;IAGlC,qBACE,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,oLAAA,CAAA,oBAAiB;YAAC,OAAO;sBACxB,cAAA,8OAAC,qJAAA,CAAA,aAAU;gBAAC,MAAM;oBAAC;iBAAG;;;;;;;;;;;;;;;;AAMhC","debugId":null}}]
}