{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/location.mjs"],"sourcesContent":["/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n"],"names":[],"mappings":"AAAA;;CAEC,GAED;;;CAGC;;;AACM,SAAS,YAAY,MAAM,EAAE,QAAQ;IAC1C,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,SAAS,WAAW;IACxB,IAAI;IAEJ,MAAO,CAAC,QAAQ,WAAW,IAAI,CAAC,OAAO,IAAI,CAAC,KAAK,MAAM,KAAK,GAAG,SAAU;QACvE,QAAQ;QACR,SAAS,WAAW,IAAI,CAAC,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM;IACxD;IAEA,OAAO;QACL,MAAM;QACN,QAAQ;IACV;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/printLocation.mjs"],"sourcesContent":["import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n"],"names":[],"mappings":";;;;AAAA;;AAKO,SAAS,cAAc,QAAQ;IACpC,OAAO,oBAAoB,SAAS,MAAM,EAAE,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE,SAAS,MAAM,EAAE,SAAS,KAAK;AACzF;AAKO,SAAS,oBAAoB,MAAM,EAAE,cAAc;IACxD,IAAI,wBAAwB,OAAO,cAAc,CAAC,MAAM,GAAG;IAC3D,IAAI,OAAO,WAAW,yBAAyB,OAAO,IAAI;IAC1D,IAAI,YAAY,eAAe,IAAI,GAAG;IACtC,IAAI,aAAa,OAAO,cAAc,CAAC,IAAI,GAAG;IAC9C,IAAI,UAAU,eAAe,IAAI,GAAG;IACpC,IAAI,eAAe,eAAe,IAAI,KAAK,IAAI,wBAAwB;IACvE,IAAI,YAAY,eAAe,MAAM,GAAG;IACxC,IAAI,cAAc,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,KAAK,MAAM,CAAC,SAAS,KAAK,MAAM,CAAC,WAAW;IACrF,IAAI,QAAQ,KAAK,KAAK,CAAC;IACvB,IAAI,eAAe,KAAK,CAAC,UAAU,EAAE,sCAAsC;IAE3E,IAAI,aAAa,MAAM,GAAG,KAAK;QAC7B,IAAI,eAAe,KAAK,KAAK,CAAC,YAAY;QAC1C,IAAI,mBAAmB,YAAY;QACnC,IAAI,WAAW,EAAE;QAEjB,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,MAAM,EAAE,KAAK,GAAI;YAChD,SAAS,IAAI,CAAC,aAAa,KAAK,CAAC,GAAG,IAAI;QAC1C;QAEA,OAAO,cAAc,mBAAmB;YAAC;gBAAC,GAAG,MAAM,CAAC;gBAAU,QAAQ,CAAC,EAAE;aAAC;SAAC,CAAC,MAAM,CAAC,SAAS,KAAK,CAAC,GAAG,eAAe,GAAG,GAAG,CAAC,SAAU,OAAO;YAC1I,OAAO;gBAAC;gBAAI;aAAQ;QACtB,IAAI;YAAC;gBAAC;gBAAK,WAAW,mBAAmB,KAAK;aAAI;YAAE;gBAAC;gBAAI,QAAQ,CAAC,eAAe,EAAE;aAAC;SAAC;IACvF;IAEA,OAAO,cAAc,mBAAmB;QACxC;YAAC,GAAG,MAAM,CAAC,UAAU;YAAI,KAAK,CAAC,YAAY,EAAE;SAAC;QAAE;YAAC,GAAG,MAAM,CAAC;YAAU;SAAa;QAAE;YAAC;YAAI,WAAW,YAAY,KAAK;SAAI;QAAE;YAAC,GAAG,MAAM,CAAC,UAAU;YAAI,KAAK,CAAC,YAAY,EAAE;SAAC;KAAC;AAC5K;AAEA,SAAS,mBAAmB,KAAK;IAC/B,IAAI,gBAAgB,MAAM,MAAM,CAAC,SAAU,IAAI;QAC7C,IAAI,IAAI,IAAI,CAAC,EAAE,EACX,OAAO,IAAI,CAAC,EAAE;QAClB,OAAO,SAAS;IAClB;IACA,IAAI,SAAS,KAAK,GAAG,CAAC,KAAK,CAAC,MAAM,cAAc,GAAG,CAAC,SAAU,KAAK;QACjE,IAAI,SAAS,KAAK,CAAC,EAAE;QACrB,OAAO,OAAO,MAAM;IACtB;IACA,OAAO,cAAc,GAAG,CAAC,SAAU,KAAK;QACtC,IAAI,SAAS,KAAK,CAAC,EAAE,EACjB,OAAO,KAAK,CAAC,EAAE;QACnB,OAAO,QAAQ,QAAQ,UAAU,CAAC,OAAO,QAAQ,OAAO,IAAI;IAC9D,GAAG,IAAI,CAAC;AACV;AAEA,SAAS,WAAW,GAAG;IACrB,OAAO,MAAM,MAAM,GAAG,IAAI,CAAC;AAC7B;AAEA,SAAS,QAAQ,GAAG,EAAE,GAAG;IACvB,OAAO,WAAW,MAAM,IAAI,MAAM,IAAI;AACxC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/kinds.mjs"],"sourcesContent":["/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACM,IAAI,OAAO,OAAO,MAAM,CAAC;IAC9B,OAAO;IACP,MAAM;IACN,WAAW;IACX,UAAU;IACV,sBAAsB;IACtB,qBAAqB;IACrB,eAAe;IACf,OAAO;IACP,UAAU;IACV,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;IACrB,SAAS;IACT,UAAU;IACV,KAAK;IACL,OAAO;IACP,QAAQ;IACR,SAAS;IACT,MAAM;IACN,MAAM;IACN,MAAM;IACN,QAAQ;IACR,cAAc;IACd,aAAa;IACb,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,0BAA0B;IAC1B,mBAAmB;IACnB,2BAA2B;IAC3B,mBAAmB;IACnB,wBAAwB;IACxB,wBAAwB;IACxB,kBAAkB;IAClB,wBAAwB;IACxB,2BAA2B;IAC3B,uBAAuB;IACvB,sBAAsB;IACtB,uBAAuB;IACvB,8BAA8B;IAC9B,wBAAwB;IACxB,sBAAsB;IACtB,yBAAyB;IACzB,kBAAkB;IAClB,kBAAkB;IAClB,uBAAuB;IACvB,uBAAuB;IACvB,0BAA0B;IAC1B,sBAAsB;IACtB,qBAAqB;IACrB,6BAA6B;AAC/B,IACA;;CAEC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/ast.mjs"],"sourcesContent":["import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n"],"names":[],"mappings":";;;;;AAAA;;AAMO,IAAI,WAAW,WAAW,GAAE;IACjC;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;GAEC,GACD,SAAS,SAAS,UAAU,EAAE,QAAQ,EAAE,MAAM;QAC5C,IAAI,CAAC,KAAK,GAAG,WAAW,KAAK;QAC7B,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG;QACvB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG;IAChB;IAEA,IAAI,SAAS,SAAS,SAAS;IAE/B,OAAO,MAAM,GAAG,SAAS;QACvB,OAAO;YACL,OAAO,IAAI,CAAC,KAAK;YACjB,KAAK,IAAI,CAAC,GAAG;QACf;IACF;IAEA,OAAO;AACT,KAAK,0EAA0E;AAE/E,CAAA,GAAA,sJAAA,CAAA,UAAa,AAAD,EAAE;AAMP,IAAI,QAAQ,WAAW,GAAE;IAC9B;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;;;GAIC,GACD,SAAS,MAAM,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK;QACxD,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;IACd;IAEA,IAAI,UAAU,MAAM,SAAS;IAE7B,QAAQ,MAAM,GAAG,SAAS;QACxB,OAAO;YACL,MAAM,IAAI,CAAC,IAAI;YACf,OAAO,IAAI,CAAC,KAAK;YACjB,MAAM,IAAI,CAAC,IAAI;YACf,QAAQ,IAAI,CAAC,MAAM;QACrB;IACF;IAEA,OAAO;AACT,KAAK,0EAA0E;AAE/E,CAAA,GAAA,sJAAA,CAAA,UAAa,AAAD,EAAE;AAKP,SAAS,OAAO,SAAS;IAC9B,OAAO,aAAa,QAAQ,OAAO,UAAU,IAAI,KAAK;AACxD,EACA;;CAEC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/source.mjs"],"sourcesContent":["function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n"],"names":[],"mappings":";;;AAIA;AACA;AALA,SAAS,kBAAkB,MAAM,EAAE,KAAK;IAAI,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QAAE,IAAI,aAAa,KAAK,CAAC,EAAE;QAAE,WAAW,UAAU,GAAG,WAAW,UAAU,IAAI;QAAO,WAAW,YAAY,GAAG;QAAM,IAAI,WAAW,YAAY,WAAW,QAAQ,GAAG;QAAM,OAAO,cAAc,CAAC,QAAQ,WAAW,GAAG,EAAE;IAAa;AAAE;AAE5T,SAAS,aAAa,WAAW,EAAE,UAAU,EAAE,WAAW;IAAI,IAAI,YAAY,kBAAkB,YAAY,SAAS,EAAE;IAAa,IAAI,aAAa,kBAAkB,aAAa;IAAc,OAAO;AAAa;;;AAY/M,IAAI,SAAS,WAAW,GAAE;IAC/B,SAAS,OAAO,IAAI;QAClB,IAAI,OAAO,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;QAC/E,IAAI,iBAAiB,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;YACvF,MAAM;YACN,QAAQ;QACV;QACA,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,KAAK,CAAA,GAAA,kJAAA,CAAA,UAAS,AAAD,EAAE,GAAG;QAC7C,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,KAAK,CAAA,GAAA,kJAAA,CAAA,UAAS,AAAD,EAAE,GAAG;IACjD,EAAE,0DAA0D;IAG5D,aAAa,QAAQ;QAAC;YACpB,KAAK,kJAAA,CAAA,uBAAoB;YACzB,KAAK,SAAS;gBACZ,OAAO;YACT;QACF;KAAE;IAEF,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/tokenKind.mjs"],"sourcesContent":["/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,IAAI,YAAY,OAAO,MAAM,CAAC;IACnC,KAAK;IACL,KAAK;IACL,MAAM;IACN,QAAQ;IACR,KAAK;IACL,SAAS;IACT,SAAS;IACT,QAAQ;IACR,OAAO;IACP,QAAQ;IACR,IAAI;IACJ,WAAW;IACX,WAAW;IACX,SAAS;IACT,MAAM;IACN,SAAS;IACT,MAAM;IACN,KAAK;IACL,OAAO;IACP,QAAQ;IACR,cAAc;IACd,SAAS;AACX,IACA;;CAEC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/directiveLocation.mjs"],"sourcesContent":["/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACM,IAAI,oBAAoB,OAAO,MAAM,CAAC;IAC3C,sBAAsB;IACtB,OAAO;IACP,UAAU;IACV,cAAc;IACd,OAAO;IACP,qBAAqB;IACrB,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;IACrB,0BAA0B;IAC1B,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,kBAAkB;IAClB,qBAAqB;IACrB,WAAW;IACX,OAAO;IACP,MAAM;IACN,YAAY;IACZ,cAAc;IACd,wBAAwB;AAC1B,IACA;;CAEC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/blockString.mjs"],"sourcesContent":["/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(lines);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n}\n/**\n * @internal\n */\n\nexport function getBlockStringIndentation(lines) {\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    if (commonIndent === null || indent < commonIndent) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  return commonIndent === null ? 0 : commonIndent;\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;;;AACM,SAAS,uBAAuB,SAAS;IAC9C,4DAA4D;IAC5D,IAAI,QAAQ,UAAU,KAAK,CAAC,iBAAiB,sDAAsD;IAEnG,IAAI,eAAe,0BAA0B;IAE7C,IAAI,iBAAiB,GAAG;QACtB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;QAC5B;IACF,EAAE,2CAA2C;IAG7C,MAAO,MAAM,MAAM,GAAG,KAAK,QAAQ,KAAK,CAAC,EAAE,EAAG;QAC5C,MAAM,KAAK;IACb;IAEA,MAAO,MAAM,MAAM,GAAG,KAAK,QAAQ,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,EAAG;QAC3D,MAAM,GAAG;IACX,EAAE,mDAAmD;IAGrD,OAAO,MAAM,IAAI,CAAC;AACpB;AAKO,SAAS,0BAA0B,KAAK;IAC7C,IAAI,eAAe;IAEnB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACrC,IAAI,OAAO,KAAK,CAAC,EAAE;QACnB,IAAI,SAAS,kBAAkB;QAE/B,IAAI,WAAW,KAAK,MAAM,EAAE;YAC1B,UAAU,mBAAmB;QAC/B;QAEA,IAAI,iBAAiB,QAAQ,SAAS,cAAc;YAClD,eAAe;YAEf,IAAI,iBAAiB,GAAG;gBACtB;YACF;QACF;IACF;IAEA,OAAO,iBAAiB,OAAO,IAAI;AACrC;AAEA,SAAS,kBAAkB,GAAG;IAC5B,IAAI,IAAI;IAER,MAAO,IAAI,IAAI,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,OAAO,GAAG,CAAC,EAAE,KAAK,IAAI,EAAG;QAC5D;IACF;IAEA,OAAO;AACT;AAEA,SAAS,QAAQ,GAAG;IAClB,OAAO,kBAAkB,SAAS,IAAI,MAAM;AAC9C;AAUO,SAAS,iBAAiB,KAAK;IACpC,IAAI,cAAc,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;IACtF,IAAI,sBAAsB,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;IAC9F,IAAI,eAAe,MAAM,OAAO,CAAC,UAAU,CAAC;IAC5C,IAAI,kBAAkB,KAAK,CAAC,EAAE,KAAK,OAAO,KAAK,CAAC,EAAE,KAAK;IACvD,IAAI,mBAAmB,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,KAAK;IACnD,IAAI,mBAAmB,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,KAAK;IACnD,IAAI,uBAAuB,CAAC,gBAAgB,oBAAoB,oBAAoB;IACpF,IAAI,SAAS,IAAI,gEAAgE;IAEjF,IAAI,wBAAwB,CAAC,CAAC,gBAAgB,eAAe,GAAG;QAC9D,UAAU,OAAO;IACnB;IAEA,UAAU,cAAc,MAAM,OAAO,CAAC,OAAO,OAAO,eAAe;IAEnE,IAAI,sBAAsB;QACxB,UAAU;IACZ;IAEA,OAAO,QAAQ,OAAO,OAAO,CAAC,QAAQ,WAAW;AACnD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/lexer.mjs"],"sourcesContent":["import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Token(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Token(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Token(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Token(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Token(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Token(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Token(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Token(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Token(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Token(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Token(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Token(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Token(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Token(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 949, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/parser.mjs"],"sourcesContent":["import inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { Source } from \"./source.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj), \".\"));\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        var _this$_options2;\n\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging\n */\n\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1900, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/visitor.mjs"],"sourcesContent":["import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2296, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/printer.mjs"],"sourcesContent":["import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n} // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString ? start + maybeString + end : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\nfunction isMultiline(string) {\n  return string.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray && maybeArray.some(isMultiline);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2628, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/predicates.mjs"],"sourcesContent":["import { Kind } from \"./kinds.mjs\";\nexport function isDefinitionNode(node) {\n  return isExecutableDefinitionNode(node) || isTypeSystemDefinitionNode(node) || isTypeSystemExtensionNode(node);\n}\nexport function isExecutableDefinitionNode(node) {\n  return node.kind === Kind.OPERATION_DEFINITION || node.kind === Kind.FRAGMENT_DEFINITION;\n}\nexport function isSelectionNode(node) {\n  return node.kind === Kind.FIELD || node.kind === Kind.FRAGMENT_SPREAD || node.kind === Kind.INLINE_FRAGMENT;\n}\nexport function isValueNode(node) {\n  return node.kind === Kind.VARIABLE || node.kind === Kind.INT || node.kind === Kind.FLOAT || node.kind === Kind.STRING || node.kind === Kind.BOOLEAN || node.kind === Kind.NULL || node.kind === Kind.ENUM || node.kind === Kind.LIST || node.kind === Kind.OBJECT;\n}\nexport function isTypeNode(node) {\n  return node.kind === Kind.NAMED_TYPE || node.kind === Kind.LIST_TYPE || node.kind === Kind.NON_NULL_TYPE;\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return node.kind === Kind.SCHEMA_DEFINITION || isTypeDefinitionNode(node) || node.kind === Kind.DIRECTIVE_DEFINITION;\n}\nexport function isTypeDefinitionNode(node) {\n  return node.kind === Kind.SCALAR_TYPE_DEFINITION || node.kind === Kind.OBJECT_TYPE_DEFINITION || node.kind === Kind.INTERFACE_TYPE_DEFINITION || node.kind === Kind.UNION_TYPE_DEFINITION || node.kind === Kind.ENUM_TYPE_DEFINITION || node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION;\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return node.kind === Kind.SCALAR_TYPE_EXTENSION || node.kind === Kind.OBJECT_TYPE_EXTENSION || node.kind === Kind.INTERFACE_TYPE_EXTENSION || node.kind === Kind.UNION_TYPE_EXTENSION || node.kind === Kind.ENUM_TYPE_EXTENSION || node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION;\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AACO,SAAS,iBAAiB,IAAI;IACnC,OAAO,2BAA2B,SAAS,2BAA2B,SAAS,0BAA0B;AAC3G;AACO,SAAS,2BAA2B,IAAI;IAC7C,OAAO,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,oBAAoB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,mBAAmB;AAC1F;AACO,SAAS,gBAAgB,IAAI;IAClC,OAAO,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,KAAK,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,eAAe,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,eAAe;AAC7G;AACO,SAAS,YAAY,IAAI;IAC9B,OAAO,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,GAAG,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,KAAK,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,MAAM,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,OAAO,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,MAAM;AACnQ;AACO,SAAS,WAAW,IAAI;IAC7B,OAAO,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,UAAU,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,SAAS,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,aAAa;AAC1G;AACO,SAAS,2BAA2B,IAAI;IAC7C,OAAO,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,iBAAiB,IAAI,qBAAqB,SAAS,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,oBAAoB;AACtH;AACO,SAAS,qBAAqB,IAAI;IACvC,OAAO,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,sBAAsB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,sBAAsB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,yBAAyB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,qBAAqB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,oBAAoB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,4BAA4B;AACzR;AACO,SAAS,0BAA0B,IAAI;IAC5C,OAAO,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,gBAAgB,IAAI,oBAAoB;AACpE;AACO,SAAS,oBAAoB,IAAI;IACtC,OAAO,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,qBAAqB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,qBAAqB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,wBAAwB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,oBAAoB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,mBAAmB,IAAI,KAAK,IAAI,KAAK,+IAAA,CAAA,OAAI,CAAC,2BAA2B;AACnR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2674, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/ast.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNode = isNode;\nexports.Token = exports.Location = void 0;\n\nvar _defineInspect = _interopRequireDefault(require(\"../jsutils/defineInspect\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nvar Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.Location = Location;\n(0, _defineInspect.default)(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nvar Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\n\nexports.Token = Token;\n(0, _defineInspect.default)(Token);\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,MAAM,GAAG;AACjB,QAAQ,KAAK,GAAG,QAAQ,QAAQ,GAAG,KAAK;AAExC,IAAI,iBAAiB;AAErB,SAAS,uBAAuB,GAAG;IAAI,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AAAG;AAE9F;;;CAGC,GACD,IAAI,WAAW,WAAW,GAAE;IAC1B;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;GAEC,GACD,SAAS,SAAS,UAAU,EAAE,QAAQ,EAAE,MAAM;QAC5C,IAAI,CAAC,KAAK,GAAG,WAAW,KAAK;QAC7B,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG;QACvB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG;IAChB;IAEA,IAAI,SAAS,SAAS,SAAS;IAE/B,OAAO,MAAM,GAAG,SAAS;QACvB,OAAO;YACL,OAAO,IAAI,CAAC,KAAK;YACjB,KAAK,IAAI,CAAC,GAAG;QACf;IACF;IAEA,OAAO;AACT,KAAK,0EAA0E;AAG/E,QAAQ,QAAQ,GAAG;AACnB,CAAC,GAAG,eAAe,OAAO,EAAE;AAC5B;;;CAGC,GAED,IAAI,QAAQ,WAAW,GAAE;IACvB;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;GAEC,GAED;;;;GAIC,GACD,SAAS,MAAM,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK;QACxD,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;IACd;IAEA,IAAI,UAAU,MAAM,SAAS;IAE7B,QAAQ,MAAM,GAAG,SAAS;QACxB,OAAO;YACL,MAAM,IAAI,CAAC,IAAI;YACf,OAAO,IAAI,CAAC,KAAK;YACjB,MAAM,IAAI,CAAC,IAAI;YACf,QAAQ,IAAI,CAAC,MAAM;QACrB;IACF;IAEA,OAAO;AACT,KAAK,0EAA0E;AAG/E,QAAQ,KAAK,GAAG;AAChB,CAAC,GAAG,eAAe,OAAO,EAAE;AAC5B;;CAEC,GAED,SAAS,OAAO,SAAS;IACvB,OAAO,aAAa,QAAQ,OAAO,UAAU,IAAI,KAAK;AACxD,EACA;;CAEC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2773, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/visitor.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\nexports.getVisitFn = getVisitFn;\nexports.BREAK = exports.QueryDocumentKeys = void 0;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect\"));\n\nvar _ast = require(\"./ast\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexports.QueryDocumentKeys = QueryDocumentKeys;\nvar BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexports.BREAK = BREAK;\n\nfunction visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!(0, _ast.isNode)(node)) {\n        throw new Error(\"Invalid AST Node: \".concat((0, _inspect.default)(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if ((0, _ast.isNode)(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\n\nfunction visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,KAAK,GAAG;AAChB,QAAQ,eAAe,GAAG;AAC1B,QAAQ,UAAU,GAAG;AACrB,QAAQ,KAAK,GAAG,QAAQ,iBAAiB,GAAG,KAAK;AAEjD,IAAI,WAAW;AAEf,IAAI;AAEJ,SAAS,uBAAuB,GAAG;IAAI,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AAAG;AAE9F,IAAI,oBAAoB;IACtB,MAAM,EAAE;IACR,UAAU;QAAC;KAAc;IACzB,qBAAqB;QAAC;QAAQ;QAAuB;QAAc;KAAe;IAClF,oBAAoB;QAAC;QAAY;QAAQ;QAAgB;KAAa;IACtE,UAAU;QAAC;KAAO;IAClB,cAAc;QAAC;KAAa;IAC5B,OAAO;QAAC;QAAS;QAAQ;QAAa;QAAc;KAAe;IACnE,UAAU;QAAC;QAAQ;KAAQ;IAC3B,gBAAgB;QAAC;QAAQ;KAAa;IACtC,gBAAgB;QAAC;QAAiB;QAAc;KAAe;IAC/D,oBAAoB;QAAC;QACrB,4BAA4B;QAC5B;QAAuB;QAAiB;QAAc;KAAe;IACrE,UAAU,EAAE;IACZ,YAAY,EAAE;IACd,aAAa,EAAE;IACf,cAAc,EAAE;IAChB,WAAW,EAAE;IACb,WAAW,EAAE;IACb,WAAW;QAAC;KAAS;IACrB,aAAa;QAAC;KAAS;IACvB,aAAa;QAAC;QAAQ;KAAQ;IAC9B,WAAW;QAAC;QAAQ;KAAY;IAChC,WAAW;QAAC;KAAO;IACnB,UAAU;QAAC;KAAO;IAClB,aAAa;QAAC;KAAO;IACrB,kBAAkB;QAAC;QAAe;QAAc;KAAiB;IACjE,yBAAyB;QAAC;KAAO;IACjC,sBAAsB;QAAC;QAAe;QAAQ;KAAa;IAC3D,sBAAsB;QAAC;QAAe;QAAQ;QAAc;QAAc;KAAS;IACnF,iBAAiB;QAAC;QAAe;QAAQ;QAAa;QAAQ;KAAa;IAC3E,sBAAsB;QAAC;QAAe;QAAQ;QAAQ;QAAgB;KAAa;IACnF,yBAAyB;QAAC;QAAe;QAAQ;QAAc;QAAc;KAAS;IACtF,qBAAqB;QAAC;QAAe;QAAQ;QAAc;KAAQ;IACnE,oBAAoB;QAAC;QAAe;QAAQ;QAAc;KAAS;IACnE,qBAAqB;QAAC;QAAe;QAAQ;KAAa;IAC1D,2BAA2B;QAAC;QAAe;QAAQ;QAAc;KAAS;IAC1E,qBAAqB;QAAC;QAAe;QAAQ;QAAa;KAAY;IACtE,iBAAiB;QAAC;QAAc;KAAiB;IACjD,qBAAqB;QAAC;QAAQ;KAAa;IAC3C,qBAAqB;QAAC;QAAQ;QAAc;QAAc;KAAS;IACnE,wBAAwB;QAAC;QAAQ;QAAc;QAAc;KAAS;IACtE,oBAAoB;QAAC;QAAQ;QAAc;KAAQ;IACnD,mBAAmB;QAAC;QAAQ;QAAc;KAAS;IACnD,0BAA0B;QAAC;QAAQ;QAAc;KAAS;AAC5D;AACA,QAAQ,iBAAiB,GAAG;AAC5B,IAAI,QAAQ,OAAO,MAAM,CAAC,CAAC;AAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAqFC,GAED,QAAQ,KAAK,GAAG;AAEhB,SAAS,MAAM,IAAI,EAAE,OAAO;IAC1B,IAAI,cAAc,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;IAEtF,gCAAgC,GAChC,IAAI,QAAQ;IACZ,IAAI,UAAU,MAAM,OAAO,CAAC;IAC5B,IAAI,OAAO;QAAC;KAAK;IACjB,IAAI,QAAQ,CAAC;IACb,IAAI,QAAQ,EAAE;IACd,IAAI,OAAO;IACX,IAAI,MAAM;IACV,IAAI,SAAS;IACb,IAAI,OAAO,EAAE;IACb,IAAI,YAAY,EAAE;IAClB,IAAI,UAAU;IACd,+BAA+B,GAE/B,GAAG;QACD;QACA,IAAI,YAAY,UAAU,KAAK,MAAM;QACrC,IAAI,WAAW,aAAa,MAAM,MAAM,KAAK;QAE7C,IAAI,WAAW;YACb,MAAM,UAAU,MAAM,KAAK,IAAI,YAAY,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE;YAChE,OAAO;YACP,SAAS,UAAU,GAAG;YAEtB,IAAI,UAAU;gBACZ,IAAI,SAAS;oBACX,OAAO,KAAK,KAAK;gBACnB,OAAO;oBACL,IAAI,QAAQ,CAAC;oBAEb,IAAK,IAAI,MAAM,GAAG,gBAAgB,OAAO,IAAI,CAAC,OAAO,MAAM,cAAc,MAAM,EAAE,MAAO;wBACtF,IAAI,IAAI,aAAa,CAAC,IAAI;wBAC1B,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;oBACpB;oBAEA,OAAO;gBACT;gBAEA,IAAI,aAAa;gBAEjB,IAAK,IAAI,KAAK,GAAG,KAAK,MAAM,MAAM,EAAE,KAAM;oBACxC,IAAI,UAAU,KAAK,CAAC,GAAG,CAAC,EAAE;oBAC1B,IAAI,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE;oBAE5B,IAAI,SAAS;wBACX,WAAW;oBACb;oBAEA,IAAI,WAAW,cAAc,MAAM;wBACjC,KAAK,MAAM,CAAC,SAAS;wBACrB;oBACF,OAAO;wBACL,IAAI,CAAC,QAAQ,GAAG;oBAClB;gBACF;YACF;YAEA,QAAQ,MAAM,KAAK;YACnB,OAAO,MAAM,IAAI;YACjB,QAAQ,MAAM,KAAK;YACnB,UAAU,MAAM,OAAO;YACvB,QAAQ,MAAM,IAAI;QACpB,OAAO;YACL,MAAM,SAAS,UAAU,QAAQ,IAAI,CAAC,MAAM,GAAG;YAC/C,OAAO,SAAS,MAAM,CAAC,IAAI,GAAG;YAE9B,IAAI,SAAS,QAAQ,SAAS,WAAW;gBACvC;YACF;YAEA,IAAI,QAAQ;gBACV,KAAK,IAAI,CAAC;YACZ;QACF;QAEA,IAAI,SAAS,KAAK;QAElB,IAAI,CAAC,MAAM,OAAO,CAAC,OAAO;YACxB,IAAI,CAAC,CAAC,GAAG,KAAK,MAAM,EAAE,OAAO;gBAC3B,MAAM,IAAI,MAAM,qBAAqB,MAAM,CAAC,CAAC,GAAG,SAAS,OAAO,EAAE,OAAO;YAC3E;YAEA,IAAI,UAAU,WAAW,SAAS,KAAK,IAAI,EAAE;YAE7C,IAAI,SAAS;gBACX,SAAS,QAAQ,IAAI,CAAC,SAAS,MAAM,KAAK,QAAQ,MAAM;gBAExD,IAAI,WAAW,OAAO;oBACpB;gBACF;gBAEA,IAAI,WAAW,OAAO;oBACpB,IAAI,CAAC,WAAW;wBACd,KAAK,GAAG;wBACR;oBACF;gBACF,OAAO,IAAI,WAAW,WAAW;oBAC/B,MAAM,IAAI,CAAC;wBAAC;wBAAK;qBAAO;oBAExB,IAAI,CAAC,WAAW;wBACd,IAAI,CAAC,GAAG,KAAK,MAAM,EAAE,SAAS;4BAC5B,OAAO;wBACT,OAAO;4BACL,KAAK,GAAG;4BACR;wBACF;oBACF;gBACF;YACF;QACF;QAEA,IAAI,WAAW,aAAa,UAAU;YACpC,MAAM,IAAI,CAAC;gBAAC;gBAAK;aAAK;QACxB;QAEA,IAAI,WAAW;YACb,KAAK,GAAG;QACV,OAAO;YACL,IAAI;YAEJ,QAAQ;gBACN,SAAS;gBACT,OAAO;gBACP,MAAM;gBACN,OAAO;gBACP,MAAM;YACR;YACA,UAAU,MAAM,OAAO,CAAC;YACxB,OAAO,UAAU,OAAO,CAAC,wBAAwB,WAAW,CAAC,KAAK,IAAI,CAAC,MAAM,QAAQ,0BAA0B,KAAK,IAAI,wBAAwB,EAAE;YAClJ,QAAQ,CAAC;YACT,QAAQ,EAAE;YAEV,IAAI,QAAQ;gBACV,UAAU,IAAI,CAAC;YACjB;YAEA,SAAS;QACX;IACF,QAAS,UAAU,UAAW;IAE9B,IAAI,MAAM,MAAM,KAAK,GAAG;QACtB,UAAU,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,CAAC,EAAE;IACtC;IAEA,OAAO;AACT;AACA;;;;;CAKC,GAGD,SAAS,gBAAgB,QAAQ;IAC/B,IAAI,WAAW,IAAI,MAAM,SAAS,MAAM;IACxC,OAAO;QACL,OAAO,SAAS,MAAM,IAAI;YACxB,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAK;gBACxC,IAAI,QAAQ,CAAC,EAAE,IAAI,MAAM;oBACvB,IAAI,KAAK,WAAW,QAAQ,CAAC,EAAE,EAAE,KAAK,IAAI,EAC1C,aAAa,GACb;oBAEA,IAAI,IAAI;wBACN,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE;wBAEnC,IAAI,WAAW,OAAO;4BACpB,QAAQ,CAAC,EAAE,GAAG;wBAChB,OAAO,IAAI,WAAW,OAAO;4BAC3B,QAAQ,CAAC,EAAE,GAAG;wBAChB,OAAO,IAAI,WAAW,WAAW;4BAC/B,OAAO;wBACT;oBACF;gBACF;YACF;QACF;QACA,OAAO,SAAS,MAAM,IAAI;YACxB,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAK;gBACxC,IAAI,QAAQ,CAAC,EAAE,IAAI,MAAM;oBACvB,IAAI,KAAK,WAAW,QAAQ,CAAC,EAAE,EAAE,KAAK,IAAI,EAC1C,aAAa,GACb;oBAEA,IAAI,IAAI;wBACN,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE;wBAEnC,IAAI,WAAW,OAAO;4BACpB,QAAQ,CAAC,EAAE,GAAG;wBAChB,OAAO,IAAI,WAAW,aAAa,WAAW,OAAO;4BACnD,OAAO;wBACT;oBACF;gBACF,OAAO,IAAI,QAAQ,CAAC,EAAE,KAAK,MAAM;oBAC/B,QAAQ,CAAC,EAAE,GAAG;gBAChB;YACF;QACF;IACF;AACF;AACA;;;CAGC,GAGD,SAAS,WAAW,OAAO,EAAE,IAAI,EAAE,SAAS;IAC1C,IAAI,cAAc,OAAO,CAAC,KAAK;IAE/B,IAAI,aAAa;QACf,IAAI,CAAC,aAAa,OAAO,gBAAgB,YAAY;YACnD,gBAAgB;YAChB,OAAO;QACT;QAEA,IAAI,sBAAsB,YAAY,YAAY,KAAK,GAAG,YAAY,KAAK;QAE3E,IAAI,OAAO,wBAAwB,YAAY;YAC7C,uCAAuC;YACvC,OAAO;QACT;IACF,OAAO;QACL,IAAI,kBAAkB,YAAY,QAAQ,KAAK,GAAG,QAAQ,KAAK;QAE/D,IAAI,iBAAiB;YACnB,IAAI,OAAO,oBAAoB,YAAY;gBACzC,6BAA6B;gBAC7B,OAAO;YACT;YAEA,IAAI,sBAAsB,eAAe,CAAC,KAAK;YAE/C,IAAI,OAAO,wBAAwB,YAAY;gBAC7C,iDAAiD;gBACjD,OAAO;YACT;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3269, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/blockString.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dedentBlockStringValue = dedentBlockStringValue;\nexports.getBlockStringIndentation = getBlockStringIndentation;\nexports.printBlockString = printBlockString;\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nfunction dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(lines);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n}\n/**\n * @internal\n */\n\n\nfunction getBlockStringIndentation(lines) {\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    if (commonIndent === null || indent < commonIndent) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  return commonIndent === null ? 0 : commonIndent;\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\n\nfunction printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,sBAAsB,GAAG;AACjC,QAAQ,yBAAyB,GAAG;AACpC,QAAQ,gBAAgB,GAAG;AAE3B;;;;;;;CAOC,GACD,SAAS,uBAAuB,SAAS;IACvC,4DAA4D;IAC5D,IAAI,QAAQ,UAAU,KAAK,CAAC,iBAAiB,sDAAsD;IAEnG,IAAI,eAAe,0BAA0B;IAE7C,IAAI,iBAAiB,GAAG;QACtB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC;QAC5B;IACF,EAAE,2CAA2C;IAG7C,MAAO,MAAM,MAAM,GAAG,KAAK,QAAQ,KAAK,CAAC,EAAE,EAAG;QAC5C,MAAM,KAAK;IACb;IAEA,MAAO,MAAM,MAAM,GAAG,KAAK,QAAQ,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,EAAG;QAC3D,MAAM,GAAG;IACX,EAAE,mDAAmD;IAGrD,OAAO,MAAM,IAAI,CAAC;AACpB;AACA;;CAEC,GAGD,SAAS,0BAA0B,KAAK;IACtC,IAAI,eAAe;IAEnB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACrC,IAAI,OAAO,KAAK,CAAC,EAAE;QACnB,IAAI,SAAS,kBAAkB;QAE/B,IAAI,WAAW,KAAK,MAAM,EAAE;YAC1B,UAAU,mBAAmB;QAC/B;QAEA,IAAI,iBAAiB,QAAQ,SAAS,cAAc;YAClD,eAAe;YAEf,IAAI,iBAAiB,GAAG;gBACtB;YACF;QACF;IACF;IAEA,OAAO,iBAAiB,OAAO,IAAI;AACrC;AAEA,SAAS,kBAAkB,GAAG;IAC5B,IAAI,IAAI;IAER,MAAO,IAAI,IAAI,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,OAAO,GAAG,CAAC,EAAE,KAAK,IAAI,EAAG;QAC5D;IACF;IAEA,OAAO;AACT;AAEA,SAAS,QAAQ,GAAG;IAClB,OAAO,kBAAkB,SAAS,IAAI,MAAM;AAC9C;AACA;;;;;;CAMC,GAGD,SAAS,iBAAiB,KAAK;IAC7B,IAAI,cAAc,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;IACtF,IAAI,sBAAsB,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;IAC9F,IAAI,eAAe,MAAM,OAAO,CAAC,UAAU,CAAC;IAC5C,IAAI,kBAAkB,KAAK,CAAC,EAAE,KAAK,OAAO,KAAK,CAAC,EAAE,KAAK;IACvD,IAAI,mBAAmB,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,KAAK;IACnD,IAAI,mBAAmB,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,KAAK;IACnD,IAAI,uBAAuB,CAAC,gBAAgB,oBAAoB,oBAAoB;IACpF,IAAI,SAAS,IAAI,gEAAgE;IAEjF,IAAI,wBAAwB,CAAC,CAAC,gBAAgB,eAAe,GAAG;QAC9D,UAAU,OAAO;IACnB;IAEA,UAAU,cAAc,MAAM,OAAO,CAAC,OAAO,OAAO,eAAe;IAEnE,IAAI,sBAAsB;QACxB,UAAU;IACZ;IAEA,OAAO,QAAQ,OAAO,OAAO,CAAC,QAAQ,WAAW;AACnD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3358, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/printer.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.print = print;\n\nvar _visitor = require(\"./visitor\");\n\nvar _blockString = require(\"./blockString\");\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, {\n    leave: printDocASTReducer\n  });\n} // TODO: provide better type coverage in future\n\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? (0, _blockString.printBlockString)(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString ? start + maybeString + end : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\nfunction isMultiline(string) {\n  return string.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray && maybeArray.some(isMultiline);\n}\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,KAAK,GAAG;AAEhB,IAAI;AAEJ,IAAI;AAEJ;;;CAGC,GACD,SAAS,MAAM,GAAG;IAChB,OAAO,CAAC,GAAG,SAAS,KAAK,EAAE,KAAK;QAC9B,OAAO;IACT;AACF,EAAE,+CAA+C;AAGjD,IAAI,qBAAqB;IACvB,MAAM,SAAS,KAAK,IAAI;QACtB,OAAO,KAAK,KAAK;IACnB;IACA,UAAU,SAAS,SAAS,IAAI;QAC9B,OAAO,MAAM,KAAK,IAAI;IACxB;IACA,WAAW;IACX,UAAU,SAAS,SAAS,IAAI;QAC9B,OAAO,KAAK,KAAK,WAAW,EAAE,UAAU;IAC1C;IACA,qBAAqB,SAAS,oBAAoB,IAAI;QACpD,IAAI,KAAK,KAAK,SAAS;QACvB,IAAI,OAAO,KAAK,IAAI;QACpB,IAAI,UAAU,KAAK,KAAK,KAAK,KAAK,mBAAmB,EAAE,OAAO;QAC9D,IAAI,aAAa,KAAK,KAAK,UAAU,EAAE;QACvC,IAAI,eAAe,KAAK,YAAY,EAAE,uEAAuE;QAC7G,wBAAwB;QAExB,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,OAAO,UAAU,eAAe,KAAK;YAAC;YAAI,KAAK;gBAAC;gBAAM;aAAQ;YAAG;YAAY;SAAa,EAAE;IACzI;IACA,oBAAoB,SAAS,mBAAmB,IAAI;QAClD,IAAI,WAAW,KAAK,QAAQ,EACxB,OAAO,KAAK,IAAI,EAChB,eAAe,KAAK,YAAY,EAChC,aAAa,KAAK,UAAU;QAChC,OAAO,WAAW,OAAO,OAAO,KAAK,OAAO,gBAAgB,KAAK,KAAK,KAAK,YAAY;IACzF;IACA,cAAc,SAAS,aAAa,KAAK;QACvC,IAAI,aAAa,MAAM,UAAU;QACjC,OAAO,MAAM;IACf;IACA,OAAO,SAAS,MAAM,KAAK;QACzB,IAAI,QAAQ,MAAM,KAAK,EACnB,OAAO,MAAM,IAAI,EACjB,OAAO,MAAM,SAAS,EACtB,aAAa,MAAM,UAAU,EAC7B,eAAe,MAAM,YAAY;QACrC,OAAO,KAAK;YAAC,KAAK,IAAI,OAAO,QAAQ,OAAO,KAAK,KAAK,KAAK,MAAM,OAAO;YAAM,KAAK,YAAY;YAAM;SAAa,EAAE;IACtH;IACA,UAAU,SAAS,SAAS,KAAK;QAC/B,IAAI,OAAO,MAAM,IAAI,EACjB,QAAQ,MAAM,KAAK;QACvB,OAAO,OAAO,OAAO;IACvB;IACA,YAAY;IACZ,gBAAgB,SAAS,eAAe,KAAK;QAC3C,IAAI,OAAO,MAAM,IAAI,EACjB,aAAa,MAAM,UAAU;QACjC,OAAO,QAAQ,OAAO,KAAK,KAAK,KAAK,YAAY;IACnD;IACA,gBAAgB,SAAS,eAAe,KAAK;QAC3C,IAAI,gBAAgB,MAAM,aAAa,EACnC,aAAa,MAAM,UAAU,EAC7B,eAAe,MAAM,YAAY;QACrC,OAAO,KAAK;YAAC;YAAO,KAAK,OAAO;YAAgB,KAAK,YAAY;YAAM;SAAa,EAAE;IACxF;IACA,oBAAoB,SAAS,mBAAmB,KAAK;QACnD,IAAI,OAAO,MAAM,IAAI,EACjB,gBAAgB,MAAM,aAAa,EACnC,sBAAsB,MAAM,mBAAmB,EAC/C,aAAa,MAAM,UAAU,EAC7B,eAAe,MAAM,YAAY;QACrC,OACE,4BAA4B;QAC5B,YAAY,MAAM,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,KAAK,qBAAqB,OAAO,MAAM,OAAO,MAAM,MAAM,CAAC,eAAe,KAAK,MAAM,CAAC,KAAK,IAAI,KAAK,YAAY,MAAM,QAAQ;IAE5K;IACA,QAAQ;IACR,UAAU,SAAS,SAAS,KAAK;QAC/B,IAAI,QAAQ,MAAM,KAAK;QACvB,OAAO;IACT;IACA,YAAY,SAAS,WAAW,KAAK;QACnC,IAAI,QAAQ,MAAM,KAAK;QACvB,OAAO;IACT;IACA,aAAa,SAAS,YAAY,MAAM,EAAE,GAAG;QAC3C,IAAI,QAAQ,OAAO,KAAK,EACpB,gBAAgB,OAAO,KAAK;QAChC,OAAO,gBAAgB,CAAC,GAAG,aAAa,gBAAgB,EAAE,OAAO,QAAQ,gBAAgB,KAAK,QAAQ,KAAK,SAAS,CAAC;IACvH;IACA,cAAc,SAAS,aAAa,MAAM;QACxC,IAAI,QAAQ,OAAO,KAAK;QACxB,OAAO,QAAQ,SAAS;IAC1B;IACA,WAAW,SAAS;QAClB,OAAO;IACT;IACA,WAAW,SAAS,UAAU,MAAM;QAClC,IAAI,QAAQ,OAAO,KAAK;QACxB,OAAO;IACT;IACA,WAAW,SAAS,UAAU,MAAM;QAClC,IAAI,SAAS,OAAO,MAAM;QAC1B,OAAO,MAAM,KAAK,QAAQ,QAAQ;IACpC;IACA,aAAa,SAAS,YAAY,MAAM;QACtC,IAAI,SAAS,OAAO,MAAM;QAC1B,OAAO,MAAM,KAAK,QAAQ,QAAQ;IACpC;IACA,aAAa,SAAS,YAAY,MAAM;QACtC,IAAI,OAAO,OAAO,IAAI,EAClB,QAAQ,OAAO,KAAK;QACxB,OAAO,OAAO,OAAO;IACvB;IACA,YAAY;IACZ,WAAW,SAAS,UAAU,MAAM;QAClC,IAAI,OAAO,OAAO,IAAI,EAClB,OAAO,OAAO,SAAS;QAC3B,OAAO,MAAM,OAAO,KAAK,KAAK,KAAK,MAAM,OAAO;IAClD;IACA,OAAO;IACP,WAAW,SAAS,UAAU,MAAM;QAClC,IAAI,OAAO,OAAO,IAAI;QACtB,OAAO;IACT;IACA,UAAU,SAAS,SAAS,MAAM;QAChC,IAAI,OAAO,OAAO,IAAI;QACtB,OAAO,MAAM,OAAO;IACtB;IACA,aAAa,SAAS,YAAY,MAAM;QACtC,IAAI,OAAO,OAAO,IAAI;QACtB,OAAO,OAAO;IAChB;IACA,0BAA0B;IAC1B,kBAAkB,eAAe,SAAU,MAAM;QAC/C,IAAI,aAAa,OAAO,UAAU,EAC9B,iBAAiB,OAAO,cAAc;QAC1C,OAAO,KAAK;YAAC;YAAU,KAAK,YAAY;YAAM,MAAM;SAAgB,EAAE;IACxE;IACA,yBAAyB,SAAS,wBAAwB,MAAM;QAC9D,IAAI,YAAY,OAAO,SAAS,EAC5B,OAAO,OAAO,IAAI;QACtB,OAAO,YAAY,OAAO;IAC5B;IACA,sBAAsB,eAAe,SAAU,MAAM;QACnD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU;QAClC,OAAO,KAAK;YAAC;YAAU;YAAM,KAAK,YAAY;SAAK,EAAE;IACvD;IACA,sBAAsB,eAAe,SAAU,MAAM;QACnD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU,EAC9B,aAAa,OAAO,UAAU,EAC9B,SAAS,OAAO,MAAM;QAC1B,OAAO,KAAK;YAAC;YAAQ;YAAM,KAAK,eAAe,KAAK,YAAY;YAAS,KAAK,YAAY;YAAM,MAAM;SAAQ,EAAE;IAClH;IACA,iBAAiB,eAAe,SAAU,MAAM;QAC9C,IAAI,OAAO,OAAO,IAAI,EAClB,OAAO,OAAO,SAAS,EACvB,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU;QAClC,OAAO,OAAO,CAAC,kBAAkB,QAAQ,KAAK,OAAO,OAAO,KAAK,MAAM,QAAQ,SAAS,KAAK,KAAK,KAAK,MAAM,OAAO,IAAI,IAAI,OAAO,OAAO,KAAK,KAAK,KAAK,YAAY;IACvK;IACA,sBAAsB,eAAe,SAAU,MAAM;QACnD,IAAI,OAAO,OAAO,IAAI,EAClB,OAAO,OAAO,IAAI,EAClB,eAAe,OAAO,YAAY,EAClC,aAAa,OAAO,UAAU;QAClC,OAAO,KAAK;YAAC,OAAO,OAAO;YAAM,KAAK,MAAM;YAAe,KAAK,YAAY;SAAK,EAAE;IACrF;IACA,yBAAyB,eAAe,SAAU,MAAM;QACtD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU,EAC9B,aAAa,OAAO,UAAU,EAC9B,SAAS,OAAO,MAAM;QAC1B,OAAO,KAAK;YAAC;YAAa;YAAM,KAAK,eAAe,KAAK,YAAY;YAAS,KAAK,YAAY;YAAM,MAAM;SAAQ,EAAE;IACvH;IACA,qBAAqB,eAAe,SAAU,MAAM;QAClD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU,EAC9B,QAAQ,OAAO,KAAK;QACxB,OAAO,KAAK;YAAC;YAAS;YAAM,KAAK,YAAY;YAAM,SAAS,MAAM,MAAM,KAAK,IAAI,OAAO,KAAK,OAAO,SAAS;SAAG,EAAE;IACpH;IACA,oBAAoB,eAAe,SAAU,MAAM;QACjD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU,EAC9B,SAAS,OAAO,MAAM;QAC1B,OAAO,KAAK;YAAC;YAAQ;YAAM,KAAK,YAAY;YAAM,MAAM;SAAQ,EAAE;IACpE;IACA,qBAAqB,eAAe,SAAU,MAAM;QAClD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU;QAClC,OAAO,KAAK;YAAC;YAAM,KAAK,YAAY;SAAK,EAAE;IAC7C;IACA,2BAA2B,eAAe,SAAU,MAAM;QACxD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU,EAC9B,SAAS,OAAO,MAAM;QAC1B,OAAO,KAAK;YAAC;YAAS;YAAM,KAAK,YAAY;YAAM,MAAM;SAAQ,EAAE;IACrE;IACA,qBAAqB,eAAe,SAAU,MAAM;QAClD,IAAI,OAAO,OAAO,IAAI,EAClB,OAAO,OAAO,SAAS,EACvB,aAAa,OAAO,UAAU,EAC9B,YAAY,OAAO,SAAS;QAChC,OAAO,gBAAgB,OAAO,CAAC,kBAAkB,QAAQ,KAAK,OAAO,OAAO,KAAK,MAAM,QAAQ,SAAS,KAAK,KAAK,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,aAAa,gBAAgB,EAAE,IAAI,SAAS,KAAK,WAAW;IAC3M;IACA,iBAAiB,SAAS,gBAAgB,MAAM;QAC9C,IAAI,aAAa,OAAO,UAAU,EAC9B,iBAAiB,OAAO,cAAc;QAC1C,OAAO,KAAK;YAAC;YAAiB,KAAK,YAAY;YAAM,MAAM;SAAgB,EAAE;IAC/E;IACA,qBAAqB,SAAS,oBAAoB,MAAM;QACtD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU;QAClC,OAAO,KAAK;YAAC;YAAiB;YAAM,KAAK,YAAY;SAAK,EAAE;IAC9D;IACA,qBAAqB,SAAS,oBAAoB,MAAM;QACtD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU,EAC9B,aAAa,OAAO,UAAU,EAC9B,SAAS,OAAO,MAAM;QAC1B,OAAO,KAAK;YAAC;YAAe;YAAM,KAAK,eAAe,KAAK,YAAY;YAAS,KAAK,YAAY;YAAM,MAAM;SAAQ,EAAE;IACzH;IACA,wBAAwB,SAAS,uBAAuB,MAAM;QAC5D,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU,EAC9B,aAAa,OAAO,UAAU,EAC9B,SAAS,OAAO,MAAM;QAC1B,OAAO,KAAK;YAAC;YAAoB;YAAM,KAAK,eAAe,KAAK,YAAY;YAAS,KAAK,YAAY;YAAM,MAAM;SAAQ,EAAE;IAC9H;IACA,oBAAoB,SAAS,mBAAmB,MAAM;QACpD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU,EAC9B,QAAQ,OAAO,KAAK;QACxB,OAAO,KAAK;YAAC;YAAgB;YAAM,KAAK,YAAY;YAAM,SAAS,MAAM,MAAM,KAAK,IAAI,OAAO,KAAK,OAAO,SAAS;SAAG,EAAE;IAC3H;IACA,mBAAmB,SAAS,kBAAkB,MAAM;QAClD,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU,EAC9B,SAAS,OAAO,MAAM;QAC1B,OAAO,KAAK;YAAC;YAAe;YAAM,KAAK,YAAY;YAAM,MAAM;SAAQ,EAAE;IAC3E;IACA,0BAA0B,SAAS,yBAAyB,MAAM;QAChE,IAAI,OAAO,OAAO,IAAI,EAClB,aAAa,OAAO,UAAU,EAC9B,SAAS,OAAO,MAAM;QAC1B,OAAO,KAAK;YAAC;YAAgB;YAAM,KAAK,YAAY;YAAM,MAAM;SAAQ,EAAE;IAC5E;AACF;AAEA,SAAS,eAAe,EAAE;IACxB,OAAO,SAAU,IAAI;QACnB,OAAO,KAAK;YAAC,KAAK,WAAW;YAAE,GAAG;SAAM,EAAE;IAC5C;AACF;AACA;;;CAGC,GAGD,SAAS,KAAK,UAAU;IACtB,IAAI;IAEJ,IAAI,YAAY,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;IACpF,OAAO,CAAC,wBAAwB,eAAe,QAAQ,eAAe,KAAK,IAAI,KAAK,IAAI,WAAW,MAAM,CAAC,SAAU,CAAC;QACnH,OAAO;IACT,GAAG,IAAI,CAAC,UAAU,MAAM,QAAQ,0BAA0B,KAAK,IAAI,wBAAwB;AAC7F;AACA;;;CAGC,GAGD,SAAS,MAAM,KAAK;IAClB,OAAO,SAAS,MAAM,MAAM,KAAK,IAAI,QAAQ,OAAO,KAAK,OAAO,SAAS,QAAQ;AACnF;AACA;;;CAGC,GAGD,SAAS,KAAK,KAAK,EAAE,WAAW;IAC9B,IAAI,MAAM,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;IAC9E,OAAO,cAAc,QAAQ,cAAc,MAAM;AACnD;AAEA,SAAS,OAAO,WAAW;IACzB,OAAO,eAAe,OAAO,YAAY,OAAO,CAAC,OAAO;AAC1D;AAEA,SAAS,YAAY,MAAM;IACzB,OAAO,OAAO,OAAO,CAAC,UAAU,CAAC;AACnC;AAEA,SAAS,kBAAkB,UAAU;IACnC,OAAO,cAAc,WAAW,IAAI,CAAC;AACvC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3694, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/directiveLocation.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DirectiveLocation = void 0;\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n\nexports.DirectiveLocation = DirectiveLocation;\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,iBAAiB,GAAG,KAAK;AAEjC;;CAEC,GACD,IAAI,oBAAoB,OAAO,MAAM,CAAC;IACpC,sBAAsB;IACtB,OAAO;IACP,UAAU;IACV,cAAc;IACd,OAAO;IACP,qBAAqB;IACrB,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;IACrB,0BAA0B;IAC1B,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,kBAAkB;IAClB,qBAAqB;IACrB,WAAW;IACX,OAAO;IACP,MAAM;IACN,YAAY;IACZ,cAAc;IACd,wBAAwB;AAC1B;AACA;;CAEC,GAED,QAAQ,iBAAiB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3732, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/kinds.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Kind = void 0;\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n\nexports.Kind = Kind;\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,IAAI,GAAG,KAAK;AAEpB;;CAEC,GACD,IAAI,OAAO,OAAO,MAAM,CAAC;IACvB,OAAO;IACP,MAAM;IACN,WAAW;IACX,UAAU;IACV,sBAAsB;IACtB,qBAAqB;IACrB,eAAe;IACf,OAAO;IACP,UAAU;IACV,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;IACjB,qBAAqB;IACrB,SAAS;IACT,UAAU;IACV,KAAK;IACL,OAAO;IACP,QAAQ;IACR,SAAS;IACT,MAAM;IACN,MAAM;IACN,MAAM;IACN,QAAQ;IACR,cAAc;IACd,aAAa;IACb,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,0BAA0B;IAC1B,mBAAmB;IACnB,2BAA2B;IAC3B,mBAAmB;IACnB,wBAAwB;IACxB,wBAAwB;IACxB,kBAAkB;IAClB,wBAAwB;IACxB,2BAA2B;IAC3B,uBAAuB;IACvB,sBAAsB;IACtB,uBAAuB;IACvB,8BAA8B;IAC9B,wBAAwB;IACxB,sBAAsB;IACtB,yBAAyB;IACzB,kBAAkB;IAClB,kBAAkB;IAClB,uBAAuB;IACvB,uBAAuB;IACvB,0BAA0B;IAC1B,sBAAsB;IACtB,qBAAqB;IACrB,6BAA6B;AAC/B;AACA;;CAEC,GAED,QAAQ,IAAI,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3803, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/location.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLocation = getLocation;\n\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nfunction getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,WAAW,GAAG;AAEtB;;CAEC,GAED;;;CAGC,GACD,SAAS,YAAY,MAAM,EAAE,QAAQ;IACnC,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,SAAS,WAAW;IACxB,IAAI;IAEJ,MAAO,CAAC,QAAQ,WAAW,IAAI,CAAC,OAAO,IAAI,CAAC,KAAK,MAAM,KAAK,GAAG,SAAU;QACvE,QAAQ;QACR,SAAS,WAAW,IAAI,CAAC,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM;IACxD;IAEA,OAAO;QACL,MAAM;QACN,QAAQ;IACV;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3832, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/printLocation.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.printLocation = printLocation;\nexports.printSourceLocation = printSourceLocation;\n\nvar _location = require(\"./location\");\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nfunction printLocation(location) {\n  return printSourceLocation(location.source, (0, _location.getLocation)(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\n\nfunction printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,aAAa,GAAG;AACxB,QAAQ,mBAAmB,GAAG;AAE9B,IAAI;AAEJ;;CAEC,GACD,SAAS,cAAc,QAAQ;IAC7B,OAAO,oBAAoB,SAAS,MAAM,EAAE,CAAC,GAAG,UAAU,WAAW,EAAE,SAAS,MAAM,EAAE,SAAS,KAAK;AACxG;AACA;;CAEC,GAGD,SAAS,oBAAoB,MAAM,EAAE,cAAc;IACjD,IAAI,wBAAwB,OAAO,cAAc,CAAC,MAAM,GAAG;IAC3D,IAAI,OAAO,WAAW,yBAAyB,OAAO,IAAI;IAC1D,IAAI,YAAY,eAAe,IAAI,GAAG;IACtC,IAAI,aAAa,OAAO,cAAc,CAAC,IAAI,GAAG;IAC9C,IAAI,UAAU,eAAe,IAAI,GAAG;IACpC,IAAI,eAAe,eAAe,IAAI,KAAK,IAAI,wBAAwB;IACvE,IAAI,YAAY,eAAe,MAAM,GAAG;IACxC,IAAI,cAAc,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,KAAK,MAAM,CAAC,SAAS,KAAK,MAAM,CAAC,WAAW;IACrF,IAAI,QAAQ,KAAK,KAAK,CAAC;IACvB,IAAI,eAAe,KAAK,CAAC,UAAU,EAAE,sCAAsC;IAE3E,IAAI,aAAa,MAAM,GAAG,KAAK;QAC7B,IAAI,eAAe,KAAK,KAAK,CAAC,YAAY;QAC1C,IAAI,mBAAmB,YAAY;QACnC,IAAI,WAAW,EAAE;QAEjB,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,MAAM,EAAE,KAAK,GAAI;YAChD,SAAS,IAAI,CAAC,aAAa,KAAK,CAAC,GAAG,IAAI;QAC1C;QAEA,OAAO,cAAc,mBAAmB;YAAC;gBAAC,GAAG,MAAM,CAAC;gBAAU,QAAQ,CAAC,EAAE;aAAC;SAAC,CAAC,MAAM,CAAC,SAAS,KAAK,CAAC,GAAG,eAAe,GAAG,GAAG,CAAC,SAAU,OAAO;YAC1I,OAAO;gBAAC;gBAAI;aAAQ;QACtB,IAAI;YAAC;gBAAC;gBAAK,WAAW,mBAAmB,KAAK;aAAI;YAAE;gBAAC;gBAAI,QAAQ,CAAC,eAAe,EAAE;aAAC;SAAC;IACvF;IAEA,OAAO,cAAc,mBAAmB;QACxC;YAAC,GAAG,MAAM,CAAC,UAAU;YAAI,KAAK,CAAC,YAAY,EAAE;SAAC;QAAE;YAAC,GAAG,MAAM,CAAC;YAAU;SAAa;QAAE;YAAC;YAAI,WAAW,YAAY,KAAK;SAAI;QAAE;YAAC,GAAG,MAAM,CAAC,UAAU;YAAI,KAAK,CAAC,YAAY,EAAE;SAAC;KAAC;AAC5K;AAEA,SAAS,mBAAmB,KAAK;IAC/B,IAAI,gBAAgB,MAAM,MAAM,CAAC,SAAU,IAAI;QAC7C,IAAI,IAAI,IAAI,CAAC,EAAE,EACX,OAAO,IAAI,CAAC,EAAE;QAClB,OAAO,SAAS;IAClB;IACA,IAAI,SAAS,KAAK,GAAG,CAAC,KAAK,CAAC,MAAM,cAAc,GAAG,CAAC,SAAU,KAAK;QACjE,IAAI,SAAS,KAAK,CAAC,EAAE;QACrB,OAAO,OAAO,MAAM;IACtB;IACA,OAAO,cAAc,GAAG,CAAC,SAAU,KAAK;QACtC,IAAI,SAAS,KAAK,CAAC,EAAE,EACjB,OAAO,KAAK,CAAC,EAAE;QACnB,OAAO,QAAQ,QAAQ,UAAU,CAAC,OAAO,QAAQ,OAAO,IAAI;IAC9D,GAAG,IAAI,CAAC;AACV;AAEA,SAAS,WAAW,GAAG;IACrB,OAAO,MAAM,MAAM,GAAG,IAAI,CAAC;AAC7B;AAEA,SAAS,QAAQ,GAAG,EAAE,GAAG;IACvB,OAAO,WAAW,MAAM,IAAI,MAAM,IAAI;AACxC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3929, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/source.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Source = void 0;\n\nvar _symbols = require(\"../polyfills/symbols\");\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nvar Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || (0, _devAssert.default)(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || (0, _devAssert.default)(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: _symbols.SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n\nexports.Source = Source;\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,MAAM,GAAG,KAAK;AAEtB,IAAI;AAEJ,IAAI,aAAa;AAEjB,SAAS,uBAAuB,GAAG;IAAI,OAAO,OAAO,IAAI,UAAU,GAAG,MAAM;QAAE,SAAS;IAAI;AAAG;AAE9F,SAAS,kBAAkB,MAAM,EAAE,KAAK;IAAI,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QAAE,IAAI,aAAa,KAAK,CAAC,EAAE;QAAE,WAAW,UAAU,GAAG,WAAW,UAAU,IAAI;QAAO,WAAW,YAAY,GAAG;QAAM,IAAI,WAAW,YAAY,WAAW,QAAQ,GAAG;QAAM,OAAO,cAAc,CAAC,QAAQ,WAAW,GAAG,EAAE;IAAa;AAAE;AAE5T,SAAS,aAAa,WAAW,EAAE,UAAU,EAAE,WAAW;IAAI,IAAI,YAAY,kBAAkB,YAAY,SAAS,EAAE;IAAa,IAAI,aAAa,kBAAkB,aAAa;IAAc,OAAO;AAAa;AAEtN;;;;;;CAMC,GACD,IAAI,SAAS,WAAW,GAAE;IACxB,SAAS,OAAO,IAAI;QAClB,IAAI,OAAO,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;QAC/E,IAAI,iBAAiB,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK,YAAY,SAAS,CAAC,EAAE,GAAG;YACvF,MAAM;YACN,QAAQ;QACV;QACA,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,WAAW,OAAO,EAAE,GAAG;QAC3D,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,WAAW,OAAO,EAAE,GAAG;IAC/D,EAAE,0DAA0D;IAG5D,aAAa,QAAQ;QAAC;YACpB,KAAK,SAAS,oBAAoB;YAClC,KAAK,SAAS;gBACZ,OAAO;YACT;QACF;KAAE;IAEF,OAAO;AACT;AAEA,QAAQ,MAAM,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3990, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/tokenKind.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenKind = void 0;\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n\nexports.TokenKind = TokenKind;\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,SAAS,GAAG,KAAK;AAEzB;;;CAGC,GACD,IAAI,YAAY,OAAO,MAAM,CAAC;IAC5B,KAAK;IACL,KAAK;IACL,MAAM;IACN,QAAQ;IACR,KAAK;IACL,SAAS;IACT,SAAS;IACT,QAAQ;IACR,OAAO;IACP,QAAQ;IACR,IAAI;IACJ,WAAW;IACX,WAAW;IACX,SAAS;IACT,MAAM;IACN,SAAS;IACT,MAAM;IACN,KAAK;IACL,OAAO;IACP,QAAQ;IACR,cAAc;IACd,SAAS;AACX;AACA;;CAEC,GAED,QAAQ,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4030, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/lexer.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPunctuatorTokenKind = isPunctuatorTokenKind;\nexports.Lexer = void 0;\n\nvar _syntaxError = require(\"../error/syntaxError\");\n\nvar _ast = require(\"./ast\");\n\nvar _tokenKind = require(\"./tokenKind\");\n\nvar _blockString = require(\"./blockString\");\n\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nvar Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new _ast.Token(_tokenKind.TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== _tokenKind.TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === _tokenKind.TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\n\nexports.Lexer = Lexer;\n\nfunction isPunctuatorTokenKind(kind) {\n  return kind === _tokenKind.TokenKind.BANG || kind === _tokenKind.TokenKind.DOLLAR || kind === _tokenKind.TokenKind.AMP || kind === _tokenKind.TokenKind.PAREN_L || kind === _tokenKind.TokenKind.PAREN_R || kind === _tokenKind.TokenKind.SPREAD || kind === _tokenKind.TokenKind.COLON || kind === _tokenKind.TokenKind.EQUALS || kind === _tokenKind.TokenKind.AT || kind === _tokenKind.TokenKind.BRACKET_L || kind === _tokenKind.TokenKind.BRACKET_R || kind === _tokenKind.TokenKind.BRACE_L || kind === _tokenKind.TokenKind.PIPE || kind === _tokenKind.TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? _tokenKind.TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new _ast.Token(_tokenKind.TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new _ast.Token(_tokenKind.TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new _ast.Token(_tokenKind.TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new _ast.Token(_tokenKind.TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new _ast.Token(_tokenKind.TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new _ast.Token(_tokenKind.TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new _ast.Token(_tokenKind.TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new _ast.Token(_tokenKind.TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new _ast.Token(_tokenKind.TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new _ast.Token(_tokenKind.TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new _ast.Token(_tokenKind.TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new _ast.Token(_tokenKind.TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new _ast.Token(_tokenKind.TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new _ast.Token(_tokenKind.TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new _ast.Token(_tokenKind.TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new _ast.Token(_tokenKind.TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw (0, _syntaxError.syntaxError)(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw (0, _syntaxError.syntaxError)(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new _ast.Token(isFloat ? _tokenKind.TokenKind.FLOAT : _tokenKind.TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new _ast.Token(_tokenKind.TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new _ast.Token(_tokenKind.TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, (0, _blockString.dedentBlockStringValue)(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw (0, _syntaxError.syntaxError)(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new _ast.Token(_tokenKind.TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4520, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/parser.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\nexports.parseValue = parseValue;\nexports.parseType = parseType;\n\nvar _inspect = _interopRequireDefault(require(\"../jsutils/inspect\"));\n\nvar _devAssert = _interopRequireDefault(require(\"../jsutils/devAssert\"));\n\nvar _syntaxError = require(\"../error/syntaxError\");\n\nvar _kinds = require(\"./kinds\");\n\nvar _ast = require(\"./ast\");\n\nvar _source = require(\"./source\");\n\nvar _tokenKind = require(\"./tokenKind\");\n\nvar _directiveLocation = require(\"./directiveLocation\");\n\nvar _lexer = require(\"./lexer\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nfunction parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\n\nfunction parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\n\nfunction parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new _source.Source(source) : source;\n    sourceObj instanceof _source.Source || (0, _devAssert.default)(0, \"Must provide Source. Received: \".concat((0, _inspect.default)(sourceObj), \".\"));\n    this._lexer = new _lexer.Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(_tokenKind.TokenKind.NAME);\n    return {\n      kind: _kinds.Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: this.many(_tokenKind.TokenKind.SOF, this.parseDefinition, _tokenKind.TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(_tokenKind.TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return {\n        kind: _kinds.Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(_tokenKind.TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: _kinds.Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(_tokenKind.TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(_tokenKind.TokenKind.PAREN_L, this.parseVariableDefinition, _tokenKind.TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(_tokenKind.TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(_tokenKind.TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.DOLLAR);\n    return {\n      kind: _kinds.Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.SELECTION_SET,\n      selections: this.many(_tokenKind.TokenKind.BRACE_L, this.parseSelection, _tokenKind.TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(_tokenKind.TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: _kinds.Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(_tokenKind.TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(_tokenKind.TokenKind.PAREN_L, item, _tokenKind.TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return {\n      kind: _kinds.Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(_tokenKind.TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(_tokenKind.TokenKind.NAME)) {\n      return {\n        kind: _kinds.Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: _kinds.Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: _kinds.Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: _kinds.Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case _tokenKind.TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case _tokenKind.TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case _tokenKind.TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: _kinds.Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case _tokenKind.TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: _kinds.Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case _tokenKind.TokenKind.STRING:\n      case _tokenKind.TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case _tokenKind.TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: _kinds.Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: _kinds.Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: _kinds.Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: _kinds.Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case _tokenKind.TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: _kinds.Kind.STRING,\n      value: token.value,\n      block: token.kind === _tokenKind.TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: _kinds.Kind.LIST,\n      values: this.any(_tokenKind.TokenKind.BRACKET_L, item, _tokenKind.TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: _kinds.Kind.OBJECT,\n      fields: this.any(_tokenKind.TokenKind.BRACE_L, item, _tokenKind.TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return {\n      kind: _kinds.Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(_tokenKind.TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.AT);\n    return {\n      kind: _kinds.Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(_tokenKind.TokenKind.BRACKET_R);\n      type = {\n        kind: _kinds.Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BANG)) {\n      return {\n        kind: _kinds.Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: _kinds.Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(_tokenKind.TokenKind.STRING) || this.peek(_tokenKind.TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(_tokenKind.TokenKind.BRACE_L, this.parseOperationTypeDefinition, _tokenKind.TokenKind.BRACE_R);\n    return {\n      kind: _kinds.Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: _kinds.Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: _kinds.Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(_tokenKind.TokenKind.AMP);\n\n      do {\n        var _this$_options2;\n\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(_tokenKind.TokenKind.AMP) || // Legacy support for the SDL?\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true && this.peek(_tokenKind.TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(_tokenKind.TokenKind.BRACE_L) && this._lexer.lookahead().kind === _tokenKind.TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseFieldDefinition, _tokenKind.TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(_tokenKind.TokenKind.PAREN_L, this.parseInputValueDef, _tokenKind.TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: _kinds.Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: _kinds.Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(_tokenKind.TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(_tokenKind.TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: _kinds.Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseEnumValueDefinition, _tokenKind.TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: _kinds.Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseInputValueDef, _tokenKind.TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(_tokenKind.TokenKind.BRACE_L, this.parseOperationTypeDefinition, _tokenKind.TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(_tokenKind.TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: _kinds.Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(_tokenKind.TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(_tokenKind.TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (_directiveLocation.DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new _ast.Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw (0, _syntaxError.syntaxError)(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw (0, _syntaxError.syntaxError)(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return (0, _syntaxError.syntaxError)(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging\n */\n\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return (0, _lexer.isPunctuatorTokenKind)(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5491, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/predicates.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDefinitionNode = isDefinitionNode;\nexports.isExecutableDefinitionNode = isExecutableDefinitionNode;\nexports.isSelectionNode = isSelectionNode;\nexports.isValueNode = isValueNode;\nexports.isTypeNode = isTypeNode;\nexports.isTypeSystemDefinitionNode = isTypeSystemDefinitionNode;\nexports.isTypeDefinitionNode = isTypeDefinitionNode;\nexports.isTypeSystemExtensionNode = isTypeSystemExtensionNode;\nexports.isTypeExtensionNode = isTypeExtensionNode;\n\nvar _kinds = require(\"./kinds\");\n\nfunction isDefinitionNode(node) {\n  return isExecutableDefinitionNode(node) || isTypeSystemDefinitionNode(node) || isTypeSystemExtensionNode(node);\n}\n\nfunction isExecutableDefinitionNode(node) {\n  return node.kind === _kinds.Kind.OPERATION_DEFINITION || node.kind === _kinds.Kind.FRAGMENT_DEFINITION;\n}\n\nfunction isSelectionNode(node) {\n  return node.kind === _kinds.Kind.FIELD || node.kind === _kinds.Kind.FRAGMENT_SPREAD || node.kind === _kinds.Kind.INLINE_FRAGMENT;\n}\n\nfunction isValueNode(node) {\n  return node.kind === _kinds.Kind.VARIABLE || node.kind === _kinds.Kind.INT || node.kind === _kinds.Kind.FLOAT || node.kind === _kinds.Kind.STRING || node.kind === _kinds.Kind.BOOLEAN || node.kind === _kinds.Kind.NULL || node.kind === _kinds.Kind.ENUM || node.kind === _kinds.Kind.LIST || node.kind === _kinds.Kind.OBJECT;\n}\n\nfunction isTypeNode(node) {\n  return node.kind === _kinds.Kind.NAMED_TYPE || node.kind === _kinds.Kind.LIST_TYPE || node.kind === _kinds.Kind.NON_NULL_TYPE;\n}\n\nfunction isTypeSystemDefinitionNode(node) {\n  return node.kind === _kinds.Kind.SCHEMA_DEFINITION || isTypeDefinitionNode(node) || node.kind === _kinds.Kind.DIRECTIVE_DEFINITION;\n}\n\nfunction isTypeDefinitionNode(node) {\n  return node.kind === _kinds.Kind.SCALAR_TYPE_DEFINITION || node.kind === _kinds.Kind.OBJECT_TYPE_DEFINITION || node.kind === _kinds.Kind.INTERFACE_TYPE_DEFINITION || node.kind === _kinds.Kind.UNION_TYPE_DEFINITION || node.kind === _kinds.Kind.ENUM_TYPE_DEFINITION || node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION;\n}\n\nfunction isTypeSystemExtensionNode(node) {\n  return node.kind === _kinds.Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\n\nfunction isTypeExtensionNode(node) {\n  return node.kind === _kinds.Kind.SCALAR_TYPE_EXTENSION || node.kind === _kinds.Kind.OBJECT_TYPE_EXTENSION || node.kind === _kinds.Kind.INTERFACE_TYPE_EXTENSION || node.kind === _kinds.Kind.UNION_TYPE_EXTENSION || node.kind === _kinds.Kind.ENUM_TYPE_EXTENSION || node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION;\n}\n"],"names":[],"mappings":"AAEA,OAAO,cAAc,CAAC,SAAS,cAAc;IAC3C,OAAO;AACT;AACA,QAAQ,gBAAgB,GAAG;AAC3B,QAAQ,0BAA0B,GAAG;AACrC,QAAQ,eAAe,GAAG;AAC1B,QAAQ,WAAW,GAAG;AACtB,QAAQ,UAAU,GAAG;AACrB,QAAQ,0BAA0B,GAAG;AACrC,QAAQ,oBAAoB,GAAG;AAC/B,QAAQ,yBAAyB,GAAG;AACpC,QAAQ,mBAAmB,GAAG;AAE9B,IAAI;AAEJ,SAAS,iBAAiB,IAAI;IAC5B,OAAO,2BAA2B,SAAS,2BAA2B,SAAS,0BAA0B;AAC3G;AAEA,SAAS,2BAA2B,IAAI;IACtC,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,oBAAoB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,mBAAmB;AACxG;AAEA,SAAS,gBAAgB,IAAI;IAC3B,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,KAAK,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,eAAe,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,eAAe;AAClI;AAEA,SAAS,YAAY,IAAI;IACvB,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,QAAQ,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,GAAG,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,KAAK,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,MAAM,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,OAAO,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,MAAM;AAClU;AAEA,SAAS,WAAW,IAAI;IACtB,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,UAAU,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,SAAS,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,aAAa;AAC/H;AAEA,SAAS,2BAA2B,IAAI;IACtC,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,iBAAiB,IAAI,qBAAqB,SAAS,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,oBAAoB;AACpI;AAEA,SAAS,qBAAqB,IAAI;IAChC,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,sBAAsB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,sBAAsB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,yBAAyB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,qBAAqB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,oBAAoB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,4BAA4B;AACnU;AAEA,SAAS,0BAA0B,IAAI;IACrC,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,gBAAgB,IAAI,oBAAoB;AAC3E;AAEA,SAAS,oBAAoB,IAAI;IAC/B,OAAO,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,qBAAqB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,qBAAqB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,wBAAwB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,oBAAoB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,mBAAmB,IAAI,KAAK,IAAI,KAAK,OAAO,IAAI,CAAC,2BAA2B;AAC7T","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5537, "column": 0}, "map": {"version":3,"sources":["file:///home/s/Documents/Programmazione/GitHub/MyRepositories/eC/ec/node_modules/graphql/language/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Source\", {\n  enumerable: true,\n  get: function get() {\n    return _source.Source;\n  }\n});\nObject.defineProperty(exports, \"getLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _location.getLocation;\n  }\n});\nObject.defineProperty(exports, \"printLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _printLocation.printLocation;\n  }\n});\nObject.defineProperty(exports, \"printSourceLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _printLocation.printSourceLocation;\n  }\n});\nObject.defineProperty(exports, \"Kind\", {\n  enumerable: true,\n  get: function get() {\n    return _kinds.Kind;\n  }\n});\nObject.defineProperty(exports, \"TokenKind\", {\n  enumerable: true,\n  get: function get() {\n    return _tokenKind.TokenKind;\n  }\n});\nObject.defineProperty(exports, \"Lexer\", {\n  enumerable: true,\n  get: function get() {\n    return _lexer.Lexer;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function get() {\n    return _parser.parse;\n  }\n});\nObject.defineProperty(exports, \"parseValue\", {\n  enumerable: true,\n  get: function get() {\n    return _parser.parseValue;\n  }\n});\nObject.defineProperty(exports, \"parseType\", {\n  enumerable: true,\n  get: function get() {\n    return _parser.parseType;\n  }\n});\nObject.defineProperty(exports, \"print\", {\n  enumerable: true,\n  get: function get() {\n    return _printer.print;\n  }\n});\nObject.defineProperty(exports, \"visit\", {\n  enumerable: true,\n  get: function get() {\n    return _visitor.visit;\n  }\n});\nObject.defineProperty(exports, \"visitInParallel\", {\n  enumerable: true,\n  get: function get() {\n    return _visitor.visitInParallel;\n  }\n});\nObject.defineProperty(exports, \"getVisitFn\", {\n  enumerable: true,\n  get: function get() {\n    return _visitor.getVisitFn;\n  }\n});\nObject.defineProperty(exports, \"BREAK\", {\n  enumerable: true,\n  get: function get() {\n    return _visitor.BREAK;\n  }\n});\nObject.defineProperty(exports, \"Location\", {\n  enumerable: true,\n  get: function get() {\n    return _ast.Location;\n  }\n});\nObject.defineProperty(exports, \"Token\", {\n  enumerable: true,\n  get: function get() {\n    return _ast.Token;\n  }\n});\nObject.defineProperty(exports, \"isDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isExecutableDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isExecutableDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isSelectionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isSelectionNode;\n  }\n});\nObject.defineProperty(exports, \"isValueNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isValueNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isTypeNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeSystemDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isTypeSystemDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeDefinitionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isTypeDefinitionNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeSystemExtensionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isTypeSystemExtensionNode;\n  }\n});\nObject.defineProperty(exports, \"isTypeExtensionNode\", {\n  enumerable: true,\n  get: function get() {\n    return _predicates.isTypeExtensionNode;\n  }\n});\nObject.defineProperty(exports, \"DirectiveLocation\", {\n  enumerable: true,\n  get: function get() {\n    return _directiveLocation.DirectiveLocation;\n  }\n});\n\nvar _source = require(\"./source\");\n\nvar _location = require(\"./location\");\n\nvar _printLocation = require(\"./printLocation\");\n\nvar _kinds = require(\"./kinds\");\n\nvar _tokenKind = require(\"./tokenKind\");\n\nvar _lexer = require(\"./lexer\");\n\nvar _parser = require(\"./parser\");\n\nvar _printer = require(\"./printer\");\n\nvar _visitor = require(\"./visitor\");\n\nvar _ast = require(\"./ast\");\n\nvar _predicates = require(\"./predicates\");\n\nvar _directiveLocation = require(\"./directiveLocation\");\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}